var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.556,1,1.063]],["body/components/AppComponent.html",[0,0.859,1,1.768,2,1.194,3,0.215,4,0.215,5,1.346,6,1.346,7,1.346,8,1.346,9,0.187,10,2.877,11,1.346,12,2.704,13,2.536,14,3.952,15,1.849,16,5.318,17,1.849,18,4.656,19,0.335,20,1.849,21,5.726,22,1.052,23,3.39,24,6.2,25,5.391,26,5.391,27,1.052,28,3.39,29,1.047,30,0.024,31,1.056,32,0.304,33,1.047,34,3.39,35,1.346,36,1.919,37,0.566,38,0.436,39,1.775,40,3.142,41,2.54,42,2.877,43,2.54,44,2.877,45,0.215,46,0.472,47,2.588,48,3.39,49,3.39,50,3.39,51,3.39,52,2.635,53,1.272,54,1.346,55,1.849,56,1.849,57,1.346,58,2.274,59,1.346,60,1.346,61,1.047,62,1.185,63,1.346,64,0.984,65,1.346,66,1.047,67,0.816,68,1.346,69,0.984,70,1.346,71,1.047,72,1.047,73,1.346,74,1.047,75,1.346,76,1.047,77,1.346,78,1.047,79,1.346,80,0.984,81,1.346,82,1.047,83,1.114,84,1.047,85,1.346,86,1.346,87,0.016,88,0.016]],["title/modules/AppModule.html",[89,1.802,90,2.322]],["body/modules/AppModule.html",[1,2.1,2,0.901,3,0.223,4,0.223,9,0.194,25,4.05,26,4.05,30,0.025,37,0.684,38,0.452,39,1.84,40,3.22,41,2.632,42,2.982,43,2.632,44,2.982,45,0.223,46,0.489,87,0.016,88,0.016,90,4.463,91,1.49,92,2.322,93,2.982,94,2.982,95,2.982,96,2.982,97,3.857,98,2.936,99,1.988,100,2.162,101,3.513,102,3.22,103,2.498,104,4.771,105,4.771,106,3.513,107,2.498,108,4.771,109,2.982,110,2.371,111,4.771,112,1.709,113,4.771,114,2.632,115,3.513,116,3.513,117,2.632,118,1.568,119,3.513,120,2.982,121,2.632,122,1.84,123,2.632,124,4.771,125,1.709,126,3.513,127,2.632,128,3.513,129,3.575,130,3.513,131,3.513,132,2.371,133,3.513,134,1.49,135,3.513,136,3.513,137,3.513,138,3.513,139,3.513,140,3.513,141,3.513,142,2.632,143,3.513,144,3.513]],["title/modules/AppRoutingModule.html",[89,1.802,97,2.118]],["body/modules/AppRoutingModule.html",[3,0.286,4,0.286,9,0.249,30,0.025,37,0.555,38,0.579,45,0.286,46,0.627,52,3.176,53,0.955,87,0.019,88,0.019,91,1.912,97,3.454,103,2.36,107,2.939,112,2.193,125,2.974,145,4.508,146,3.377,147,5.612,148,4.205,149,1.576,150,4.579,151,3.826,152,3.826,153,3.826,154,5.612,155,4.508,156,4.508,157,4.508,158,4.508,159,4.508,160,4.508,161,4.508,162,3.042]],["title/injectables/AudioService.html",[163,0.939,164,1.948]],["body/injectables/AudioService.html",[3,0.191,4,0.191,9,0.166,14,2.555,19,0.298,20,1.702,22,0.68,27,1.389,29,1.679,30,0.025,31,1.079,32,0.487,33,1.679,35,2.282,36,3.554,37,0.494,38,0.387,45,0.191,46,0.419,47,2.905,87,0.014,88,0.014,149,2.009,163,1.169,164,2.425,165,1.465,166,2.555,167,1.099,168,4.235,169,4.285,170,4.876,171,5.745,172,4.285,173,4.285,174,3.01,175,2.847,176,4.285,177,2.892,178,4.285,179,2.94,180,3.01,181,4.989,182,3.01,183,3.01,184,4.285,185,3.071,186,3.01,187,4.285,188,4.285,189,3.01,190,2.116,191,1.053,192,1.053,193,2.613,194,3.637,195,0.989,196,1.576,197,3.01,198,2.255,199,3.01,200,1.465,201,4.285,202,4.285,203,4.285,204,3.01,205,3.01,206,3.01,207,4.989,208,3.01,209,3.01,210,2.031,211,2.555,212,2.031,213,2.555,214,2.031,215,3.01,216,4.285,217,2.555,218,4.285,219,6.144,220,4.285,221,3.01,222,3.01,223,3.01,224,1.944,225,3.01,226,3.01,227,3.01,228,3.01,229,2.555,230,3.01,231,3.01,232,1.853,233,3.01]],["title/injectables/AudioStateService.html",[163,0.939,175,1.802]],["body/injectables/AudioStateService.html",[3,0.18,4,0.18,9,0.157,19,0.28,20,1.629,22,1.09,27,1.397,29,1.267,30,0.025,31,0.814,32,0.474,33,1.267,35,1.915,36,3.176,37,0.579,38,0.364,45,0.18,46,0.394,47,2.847,72,1.807,87,0.014,88,0.014,99,2.993,149,1.849,163,1.12,165,1.379,167,1.052,168,2.405,170,2.405,175,2.148,190,2.481,191,1.435,192,1.687,193,2.148,195,0.931,210,3.255,211,2.405,212,2.769,213,2.405,214,2.769,217,2.405,224,1.285,229,2.405,234,5.345,235,2.405,236,4.823,237,4.823,238,4.823,239,4.103,240,3.482,241,2.833,242,4.103,243,2.833,244,2.833,245,2.833,246,4.103,247,4.103,248,4.103,249,2.833,250,4.103,251,2.833,252,4.823,253,2.833,254,2.833,255,2.833,256,2.833,257,3.453,258,2.833,259,2.405,260,2.833,261,1.202,262,2.833,263,2.123,264,2.833,265,2.833,266,2.769,267,2.405,268,0.991,269,2.405,270,2.833,271,2.833,272,2.833,273,2.833,274,4.103,275,2.833,276,6.608,277,2.833,278,2.833,279,2.833,280,2.833,281,5.85,282,2.73,283,5.85,284,3.074,285,2.833,286,4.103,287,2.123,288,2.833,289,2.123,290,2.833,291,1.604,292,3.074,293,2.833,294,3.074,295,2.833]],["title/components/ButtonsSelectComponent.html",[0,0.556,61,1.063]],["body/components/ButtonsSelectComponent.html",[0,0.754,1,0.826,2,1.009,3,0.17,4,0.17,5,1.063,6,1.063,7,1.063,8,1.063,9,0.148,11,1.063,12,2.597,13,2.436,15,1.563,17,1.563,19,0.265,20,1.563,22,1.055,27,1.296,29,0.826,30,0.024,31,0.926,32,0.514,33,0.826,35,1.063,36,2.227,37,0.265,38,0.344,45,0.17,46,0.372,53,0.989,54,1.063,55,1.563,56,1.563,57,1.063,58,2.044,59,1.063,60,1.063,61,1.589,62,2.127,63,1.063,64,0.777,65,1.063,66,0.826,67,0.645,68,1.063,69,0.777,70,1.063,71,0.826,72,0.826,73,1.063,74,0.826,75,1.063,76,0.826,77,1.063,78,0.826,79,1.063,80,0.777,81,1.063,82,0.826,83,0.879,84,0.826,85,1.063,86,1.063,87,0.013,88,0.013,149,0.936,191,1.632,192,2.005,193,2.061,232,1.647,291,2.227,296,4.441,297,4.441,298,4.441,299,2.271,300,1.669,301,1.669,302,3.935,303,4.667,304,3.935,305,3.935,306,2.061,307,4.667,308,4.667,309,2.948,310,4.667,311,3.935,312,1.302,313,2.676,314,2.676,315,2.676,316,3.497,317,3.935,318,2.676,319,1.135,320,2.695,321,2.948,322,4.667,323,2.676,324,2.676,325,2.676,326,2.676,327,3.935,328,2.676,329,2.676,330,2.676,331,3.935,332,2.656,333,3.15,334,2.676,335,1.647,336,2.005,337,2.676,338,1.302,339,1.302,340,2.271,341,2.676,342,1.401,343,2.676,344,2.676,345,2.676,346,2.676,347,2.676,348,3.935,349,4.655,350,3.34,351,3.34,352,2.642,353,3.34,354,2.444,355,2.676,356,2.271,357,2.676,358,2.676,359,2.676,360,2.271,361,2.271,362,2.676]],["title/modules/ButtonsSelectModule.html",[89,1.802,363,2.118]],["body/modules/ButtonsSelectModule.html",[2,1.146,3,0.284,4,0.284,9,0.247,30,0.024,37,0.631,38,0.575,45,0.284,46,0.622,61,2.175,62,1.563,87,0.019,88,0.019,91,1.896,92,2.717,98,3.436,99,2.531,100,2.752,102,3.768,103,2.341,107,2.924,162,3.768,296,3.35,297,3.35,298,3.35,363,4.179,364,3.795,365,3.795,366,3.795,367,3.795,368,4.471,369,4.183,370,3.017,371,4.183,372,3.017,373,3.017,374,4.471]],["title/components/CategoriesComponent.html",[0,0.556,64,0.999]],["body/components/CategoriesComponent.html",[0,0.821,1,0.963,2,1.127,3,0.198,4,0.198,5,1.239,6,1.239,7,1.239,8,1.239,9,0.173,11,1.239,12,2.668,13,2.502,15,1.745,17,1.745,19,0.308,22,0.705,27,0.993,29,0.963,30,0.024,31,1.01,32,0.394,33,0.963,37,0.576,38,0.401,45,0.198,46,0.434,53,1.078,54,1.239,55,1.745,56,1.745,57,1.239,58,2.193,59,1.239,60,1.239,61,0.963,62,1.091,63,1.239,64,1.603,65,1.239,66,0.963,67,1.058,68,1.239,69,0.905,70,1.239,71,0.963,72,0.963,73,1.239,74,0.963,75,1.239,76,0.963,77,1.239,78,0.963,79,1.239,80,0.905,81,1.239,82,0.963,83,1.444,84,1.357,85,1.239,86,1.239,87,0.015,88,0.015,118,1.025,134,2.562,167,1.127,190,2.157,191,1.091,192,1.091,195,1.025,200,1.518,268,1.091,300,1.863,301,1.863,319,1.323,335,3.131,336,3.292,338,2.138,339,1.518,352,2.88,375,2.647,376,3.82,377,5.087,378,4.394,379,2.105,380,4.394,381,4.394,382,1.633,383,1.92,384,2.337,385,2.105,386,2.337,387,2.647,388,2.105,389,3.292,390,2.337,391,3.73,392,3.292,393,2.337,394,3.119,395,4.526,396,4.394,397,3.119,398,2.647,399,2.647,400,3.119,401,3.73,402,3.119,403,3.119,404,4.394,405,3.119,406,2.647]],["title/guards/CategoriesGuard.html",[407,2.578,408,2.118]],["body/guards/CategoriesGuard.html",[3,0.266,4,0.266,9,0.232,19,0.414,20,2.127,22,0.946,27,1.211,29,1.292,30,0.025,31,0.831,32,0.375,33,1.292,35,1.662,37,0.662,38,0.538,45,0.266,46,0.582,87,0.018,88,0.018,112,2.037,118,1.375,134,2.791,163,1.461,190,2.504,195,1.375,200,2.037,224,1.899,261,1.775,312,2.037,379,2.825,383,2.576,385,2.825,408,3.296,409,2.576,410,3.553,411,4.931,412,4.186,413,4.186,414,4.546,415,4.012,416,2.192,417,2.576,418,2.576,419,3.136,420,2.576,421,4.186,422,4.546,423,4.186,424,3.553]],["title/injectables/CategoriesLoadEffect.html",[163,0.939,425,2.322]],["body/injectables/CategoriesLoadEffect.html",[3,0.241,4,0.241,9,0.21,19,0.375,22,1.135,27,1.135,29,1.17,30,0.025,31,0.752,32,0.34,33,1.17,37,0.646,38,0.487,45,0.241,46,0.527,47,2.443,67,1.356,87,0.017,88,0.017,122,1.984,163,1.37,165,1.844,167,1.287,191,1.325,192,1.325,195,1.245,196,1.984,261,1.607,268,1.325,376,3.089,382,1.984,416,3.422,417,3.688,418,2.332,425,3.387,426,4.778,427,2.557,428,2.839,429,3.422,430,3.216,431,4.217,432,3.761,433,5.019,434,4.217,435,5.019,436,5.019,437,3.798,438,3.761,439,5.019,440,3.216,441,2.839,442,1.984,443,2.839,444,2.557,445,2.839]],["title/interfaces/Category.html",[67,0.829,446,0.939]],["body/interfaces/Category.html",[3,0.304,4,0.304,9,0.265,19,0.473,30,0.024,31,1.296,32,0.585,45,0.304,67,1.402,87,0.02,88,0.02,167,1.493,179,3.224,446,1.305,447,2.17,448,4.061,449,5.542,450,4.892,451,4.892]],["title/components/CategoryCardComponent.html",[0,0.556,66,1.063]],["body/components/CategoryCardComponent.html",[0,0.866,1,1.064,2,1.208,3,0.219,4,0.219,5,1.369,6,1.369,7,1.369,8,1.369,9,0.191,11,1.369,12,2.711,13,2.542,15,1.87,17,1.87,19,0.341,22,1.213,27,1.065,30,0.024,31,0.935,32,0.309,37,0.466,38,0.443,45,0.219,46,0.479,53,1.137,54,1.369,55,1.87,56,1.87,57,1.369,58,2.29,59,1.369,60,1.369,61,1.064,62,1.205,63,1.369,64,1.001,65,1.369,66,1.781,67,1.654,68,1.369,69,1.001,70,1.369,71,1.064,72,1.064,73,1.369,74,1.064,75,1.369,76,1.064,77,1.369,78,1.064,79,1.369,80,1.001,81,1.369,82,1.064,83,1.132,84,1.064,85,1.369,86,1.369,87,0.016,88,0.016,268,1.205,300,1.997,301,1.997,306,2.466,319,1.462,320,2.466,332,3.178,333,2.326,342,1.805,360,2.926,382,1.805,390,2.582,401,4.554,452,4.554,453,4.019,454,2.926,455,5.365,456,4.71,457,4.71,458,3.997,459,3.447,460,3.447,461,3.447,462,3.447,463,3.447]],["title/components/HomeComponent.html",[0,0.556,69,0.999]],["body/components/HomeComponent.html",[0,0.842,1,1.009,2,1.164,3,0.208,4,0.208,5,1.298,6,1.298,7,1.298,8,1.298,9,0.181,11,1.298,12,2.688,13,2.521,15,1.803,17,1.803,19,0.323,22,0.739,27,1.026,29,1.009,30,0.024,31,1.036,32,0.407,33,1.009,37,0.558,38,0.42,45,0.208,46,0.455,52,2.953,53,1.106,54,1.298,55,1.803,56,1.803,57,1.298,58,2.239,59,1.298,60,1.298,61,1.009,62,1.143,63,1.298,64,0.949,65,1.298,66,1.009,67,0.787,68,1.298,69,1.636,70,1.298,71,1.009,72,1.009,73,1.298,74,1.009,75,1.298,76,1.009,77,1.298,78,1.009,79,1.298,80,0.949,81,1.298,82,1.009,83,1.492,84,1.009,85,1.298,86,1.298,87,0.015,88,0.015,118,1.074,134,2.6,167,1.164,190,2.212,191,1.143,192,1.143,195,1.074,200,1.59,300,1.925,301,1.925,319,1.386,338,2.209,339,2.209,342,2.377,352,2.57,354,1.711,356,2.774,379,2.205,383,2.011,388,2.205,389,2.448,398,2.774,399,2.774,464,2.774,465,5.217,466,4.54,467,2.687,468,4.54,469,4.54,470,2.448,471,3.268,472,3.854,473,2.448,474,3.268,475,2.774,476,2.448,477,3.268,478,3.268,479,3.268,480,3.268,481,2.448]],["title/modules/HomeModule.html",[89,1.802,482,2.322]],["body/modules/HomeModule.html",[2,0.978,3,0.242,4,0.242,9,0.211,30,0.025,37,0.681,38,0.49,39,1.998,45,0.242,46,0.531,69,1.863,87,0.017,88,0.017,91,1.618,92,2.454,98,3.103,99,2.16,100,2.348,102,3.403,103,2.641,107,2.641,117,2.859,118,1.254,121,2.859,122,1.998,123,3.778,125,1.857,127,2.859,134,2.138,142,3.778,196,1.998,369,3.778,370,2.575,371,3.778,372,2.575,373,2.575,482,4.582,483,3.239,484,3.239,485,3.239,486,3.239,487,3.95,488,3.633,489,3.815,490,4.28,491,2.859,492,3.815,493,3.239,494,3.239,495,2.575,496,2.854,497,3.815,498,2.575,499,3.815,500,3.239,501,3.815,502,3.815]],["title/interfaces/HomeModuleState.html",[446,0.939,503,2.322]],["body/interfaces/HomeModuleState.html",[3,0.295,4,0.295,9,0.257,19,0.46,30,0.024,32,0.417,37,0.613,45,0.411,52,3.825,87,0.019,88,0.019,118,1.527,134,1.971,149,2.167,167,1.467,446,1.268,447,2.109,495,3.137,496,2.631,503,3.86,504,3.483,505,3.979,506,3.945,507,5.72,508,3.507,509,3.483,510,3.945]],["title/modules/HomePageRoutingModule.html",[89,1.802,487,2.118]],["body/modules/HomePageRoutingModule.html",[0,0.779,2,1.238,3,0.307,4,0.307,9,0.267,30,0.024,37,0.623,38,0.62,45,0.307,46,0.671,69,1.699,87,0.02,88,0.02,91,2.047,103,2.527,107,3.065,112,2.348,125,3.065,146,3.616,148,4.385,149,1.688,150,3.616,162,3.257,487,3.602,493,4.096,511,4.826,512,4.096]],["title/interfaces/HomeState.html",[446,0.939,505,2.118]],["body/interfaces/HomeState.html",[3,0.216,4,0.216,9,0.188,19,0.337,30,0.025,32,0.514,37,0.462,45,0.404,87,0.016,88,0.016,118,1.118,149,2.223,167,1.197,177,4.625,179,2.418,282,3.017,291,3.718,312,3.197,416,1.782,446,0.929,447,1.544,467,2.885,505,4.13,508,1.927,513,2.55,514,5.496,515,5.496,516,5.496,517,3.871,518,3.498,519,3.151,520,3.151,521,3.151,522,2.889,523,3.993,524,3.151,525,2.095,526,2.55,527,2.095,528,2.889,529,2.55,530,2.889,531,2.55,532,2.889,533,2.55,534,2.889,535,2.55,536,2.889]],["title/components/MediaContentComponent.html",[0,0.556,71,1.063]],["body/components/MediaContentComponent.html",[0,0.738,1,0.798,2,0.983,3,0.164,4,0.164,5,1.026,6,1.026,7,1.026,8,1.026,9,0.143,11,1.026,12,2.58,13,2.419,15,1.523,17,1.523,19,0.256,22,1.034,27,1.325,30,0.024,31,0.761,32,0.508,37,0.5,38,0.332,45,0.164,46,0.359,53,1.304,54,1.026,55,1.523,56,1.523,57,1.026,58,2.009,59,1.026,60,1.026,61,0.798,62,0.903,63,1.026,64,0.75,65,1.026,66,0.798,67,0.622,68,1.026,69,0.75,70,1.026,71,1.562,72,1.985,73,1.026,74,0.798,75,1.026,76,0.798,77,1.026,78,0.798,79,1.026,80,0.75,81,1.026,82,0.798,83,0.849,84,1.412,85,1.026,86,1.026,87,0.013,88,0.013,185,2.36,191,0.903,192,0.903,193,2.394,232,1.59,257,2.814,266,3.085,267,2.193,268,0.903,269,2.193,300,1.626,301,1.626,306,2.008,309,2.873,316,4.391,319,1.096,320,2.649,321,3.79,333,3.955,335,2.36,338,2.225,339,2.462,342,2.649,349,2.193,350,2.193,351,2.193,352,2.588,353,2.193,354,2.394,392,2.873,393,1.935,473,3.79,475,2.193,537,5.11,538,4.511,539,1.935,540,3.881,541,3.254,542,3.881,543,4.572,544,4.572,545,4.572,546,3.834,547,2.583,548,2.583,549,2.583,550,2.583,551,2.583,552,1.353,553,3.834,554,3.834,555,2.583,556,2.583,557,2.583,558,2.583,559,2.583,560,3.834,561,3.834,562,2.583,563,2.193,564,2.583,565,2.583,566,2.583,567,2.583,568,3.834,569,1.743,570,3.881,571,2.583,572,2.583,573,2.583,574,2.583,575,2.583,576,2.193,577,2.583,578,2.583,579,2.583,580,2.193]],["title/interfaces/MediaState.html",[257,2.118,446,0.939]],["body/interfaces/MediaState.html",[3,0.275,4,0.275,9,0.239,19,0.428,30,0.024,32,0.612,45,0.275,87,0.019,88,0.019,167,1.403,179,3.124,185,4.086,210,4.254,212,4.254,214,4.254,257,3.368,284,4.723,287,4.723,289,4.723,292,4.723,294,4.723,312,3.35,446,1.181,447,1.964,581,3.675]],["title/interfaces/Meditation.html",[53,0.729,446,0.939]],["body/interfaces/Meditation.html",[3,0.262,4,0.262,9,0.228,19,0.408,30,0.024,32,0.598,45,0.373,53,1.124,72,2.024,83,2.154,84,1.638,87,0.018,88,0.018,149,1.855,167,1.36,179,3.228,386,4.638,446,1.125,447,1.87,450,4.638,451,4.638,525,4.2,582,2.782,583,4.638,584,2.782,585,5.304,586,4.122]],["title/components/MeditationHeaderComponent.html",[0,0.556,74,1.063]],["body/components/MeditationHeaderComponent.html",[0,0.841,1,1.007,2,1.163,3,0.207,4,0.207,5,1.295,6,1.295,7,1.295,8,1.295,9,0.18,11,1.295,12,2.688,13,2.521,15,1.801,17,1.801,19,0.323,22,1.178,27,1.025,30,0.024,31,0.9,32,0.292,37,0.448,38,0.419,45,0.207,46,0.454,53,1.397,54,1.295,55,1.801,56,1.801,57,1.295,58,2.237,59,1.295,60,1.295,61,1.007,62,1.141,63,1.295,64,0.947,65,1.295,66,1.007,67,1.514,68,1.295,69,0.947,70,1.295,71,1.007,72,1.007,73,1.295,74,1.739,75,1.295,76,1.007,77,1.295,78,1.007,79,1.295,80,0.947,81,1.295,82,1.007,83,1.072,84,1.007,85,1.295,86,1.295,87,0.015,88,0.015,268,1.141,300,1.923,301,1.923,306,2.374,319,1.383,320,2.374,332,3.06,335,2.007,338,2.741,339,2.536,342,2.374,354,1.708,382,1.708,387,2.768,392,3.397,393,2.444,458,3.848,476,2.444,569,2.201,580,2.768,587,3.904,588,3.904,589,2.768,590,3.904,591,5.211,592,4.534,593,4.534,594,4.534,595,3.262,596,3.262,597,3.848,598,3.262,599,2.768,600,2.444,601,3.262]],["title/components/MeditationItemComponent.html",[0,0.556,76,1.063]],["body/components/MeditationItemComponent.html",[0,0.828,1,0.978,2,1.139,3,0.201,4,0.201,5,1.258,6,1.258,7,1.258,8,1.258,9,0.175,11,1.258,12,2.675,13,2.509,15,1.764,17,1.764,19,0.313,22,1.16,27,1.257,30,0.024,31,0.882,32,0.398,37,0.439,38,0.407,45,0.201,46,0.441,53,1.453,54,1.258,55,1.764,56,1.764,57,1.258,58,2.208,59,1.258,60,1.258,61,0.978,62,1.107,63,1.258,64,0.919,65,1.258,66,0.978,67,0.763,68,1.258,69,0.919,70,1.258,71,0.978,72,0.978,73,1.258,74,0.978,75,1.258,76,1.717,77,1.258,78,0.978,79,1.258,80,0.919,81,1.258,82,0.978,83,1.04,84,1.925,85,1.258,86,1.258,87,0.015,88,0.015,167,1.139,191,1.107,192,1.107,193,1.658,268,1.107,300,1.884,301,1.884,306,2.326,309,3.328,316,3.843,319,1.343,320,2.326,321,3.328,332,2.997,333,2.137,338,2.161,339,2.161,342,1.658,354,1.658,361,4.354,473,2.373,552,1.658,563,2.688,569,2.137,587,4.387,600,2.373,602,4.387,603,2.688,604,5.13,605,5.13,606,4.442,607,4.442,608,3.167,609,3.167,610,3.77,611,3.167,612,3.167,613,3.167,614,3.167]],["title/components/MeditationModalComponent.html",[0,0.556,78,1.063]],["body/components/MeditationModalComponent.html",[0,0.622,1,0.605,2,0.795,3,0.125,4,0.125,5,0.778,6,0.778,7,0.778,8,0.778,9,0.108,11,0.778,12,2.43,13,2.279,15,1.232,17,1.232,19,0.194,20,1.232,22,0.701,27,1.431,29,1.189,30,0.025,31,0.947,32,0.494,33,1.189,35,2.11,36,3.463,37,0.526,38,0.252,39,1.026,45,0.125,46,0.273,47,0.954,53,1.341,54,0.778,55,1.232,56,1.232,57,0.778,58,1.738,59,0.778,60,0.778,61,0.605,62,0.685,63,0.778,64,0.569,65,0.778,66,0.605,67,0.472,68,0.778,69,0.569,70,0.778,71,0.605,72,0.605,73,0.778,74,0.605,75,0.778,76,0.605,77,0.778,78,1.352,79,0.778,80,0.569,81,0.778,82,0.605,83,1.019,84,1.641,85,0.778,86,0.778,87,0.01,88,0.01,164,3.007,167,0.795,175,2.497,185,1.909,190,1.632,191,1.346,192,1.668,195,0.644,196,1.026,198,1.468,224,0.889,240,2.633,261,0.831,268,0.685,300,1.315,301,1.315,306,1.624,312,0.954,319,0.831,320,1.624,336,1.468,338,0.954,339,0.954,340,2.633,352,1.109,354,1.624,388,1.323,389,1.468,390,2.884,391,1.663,395,1.468,420,1.909,442,1.026,481,1.468,527,1.909,542,3.267,552,1.026,584,3.718,590,1.468,597,2.633,599,1.663,600,1.468,610,2.633,615,5.419,616,4.308,617,1.663,618,3.267,619,3.849,620,2.324,621,3.849,622,3.102,623,3.267,624,3.267,625,5.072,626,4.815,627,4.769,628,4.377,629,4.377,630,3.715,631,3.102,632,4.377,633,4.377,634,3.849,635,3.849,636,1.663,637,1.96,638,1.96,639,1.96,640,1.96,641,1.96,642,3.102,643,1.96,644,2.633,645,1.96,646,1.96,647,1.96,648,1.96,649,3.102,650,3.102,651,3.102,652,3.102,653,3.102,654,3.849,655,1.96,656,1.96,657,3.267,658,3.715,659,1.96,660,1.96,661,1.96,662,1.96,663,1.96,664,1.96,665,1.468,666,1.96,667,1.663,668,1.663,669,1.96,670,1.96,671,3.102,672,3.102,673,1.96,674,1.96,675,3.102,676,1.96,677,1.96,678,1.96,679,1.96,680,1.96,681,1.96,682,1.96,683,1.96,684,3.102,685,1.96,686,1.96,687,1.96,688,1.96,689,1.96]],["title/modules/MeditationModule.html",[89,1.802,690,2.322]],["body/modules/MeditationModule.html",[2,0.692,3,0.171,4,0.171,9,0.149,30,0.025,37,0.687,38,0.347,39,1.413,45,0.171,46,0.375,62,0.943,64,1.669,66,1.776,71,1.776,74,1.776,76,1.776,78,1.882,80,1.669,82,1.776,87,0.013,88,0.013,91,1.679,92,1.927,98,2.437,99,1.527,100,1.661,102,2.672,103,2.073,107,2.073,117,2.021,118,0.886,121,2.021,122,1.413,123,2.966,127,2.021,134,1.679,142,2.966,164,3.255,175,3.012,196,1.413,198,2.021,363,3.539,367,2.29,369,2.966,370,1.821,371,2.966,372,1.821,373,1.821,408,2.437,409,1.661,425,2.672,429,3.012,445,2.021,453,2.021,490,3.361,491,2.021,496,2.241,500,3.361,538,2.021,588,2.021,602,2.021,616,1.821,667,2.29,668,2.29,690,4.739,691,2.29,692,2.29,693,2.29,694,2.29,695,3.539,696,2.698,697,3.959,698,2.698,699,2.698,700,4.67,701,2.29,702,2.698,703,2.021,704,3.959,705,2.698,706,2.698,707,2.698,708,2.29,709,2.29,710,2.698,711,2.698,712,1.821,713,2.698,714,2.29,715,1.821,716,2.698,717,2.698,718,2.29,719,2.437,720,2.29,721,2.698,722,2.698]],["title/interfaces/MeditationModuleState.html",[446,0.939,723,2.322]],["body/interfaces/MeditationModuleState.html",[3,0.295,4,0.295,9,0.257,19,0.46,30,0.024,32,0.417,37,0.613,45,0.411,53,1.432,87,0.019,88,0.019,118,1.527,134,1.971,149,2.167,167,1.467,446,1.268,447,2.109,496,3.237,506,3.945,508,3.237,712,3.137,723,3.86,724,3.483,725,3.979,726,5.72,727,3.483,728,3.945]],["title/modules/MeditationRoutingModule.html",[89,1.802,695,2.118]],["body/modules/MeditationRoutingModule.html",[0,0.889,2,1.122,3,0.278,4,0.278,9,0.242,30,0.025,37,0.659,38,0.562,45,0.278,46,0.609,64,1.599,80,1.599,87,0.019,88,0.019,91,1.855,103,2.291,107,2.884,112,2.129,125,2.934,146,3.278,148,4.127,149,1.53,150,4.517,151,3.714,152,3.714,153,3.714,162,2.953,376,3.39,408,3.39,409,2.693,411,4.127,512,3.714,695,3.39,708,3.714,709,3.714,718,3.714,719,3.39,720,3.714,729,4.375,730,2.476]],["title/interfaces/MeditationState.html",[446,0.939,725,2.118]],["body/interfaces/MeditationState.html",[3,0.168,4,0.168,9,0.147,19,0.262,30,0.025,32,0.544,37,0.507,45,0.406,53,1.086,67,1.234,87,0.013,88,0.013,118,0.871,149,2.233,167,1.002,177,4.665,268,0.927,282,3.234,291,3.824,312,3.287,376,3.637,382,1.388,416,1.388,417,2.405,418,1.631,437,2.637,444,2.637,446,0.723,447,1.202,508,1.5,517,3.457,518,2.927,523,3.477,524,2.637,525,2.405,527,1.631,552,1.388,725,4.158,730,3.345,731,1.986,732,5.148,733,5.148,734,5.148,735,5.148,736,5.148,737,5.148,738,2.405,739,2.637,740,2.637,741,1.986,742,2.249,743,1.986,744,2.249,745,1.986,746,2.249,747,1.986,748,2.249,749,1.986,750,2.249,751,1.986,752,2.249,753,1.986,754,2.249,755,1.986,756,2.249,757,1.986,758,2.249]],["title/components/MeditationsComponent.html",[0,0.556,80,0.999]],["body/components/MeditationsComponent.html",[0,0.774,1,0.716,2,1.099,3,0.147,4,0.147,5,0.921,6,0.921,7,0.921,8,0.921,9,0.128,11,0.921,12,2.524,13,2.367,15,1.404,17,1.404,19,0.229,20,1.404,22,0.799,27,1.317,29,1.323,30,0.025,31,1.024,32,0.487,33,1.323,35,1.702,36,2.002,37,0.613,38,0.298,39,1.215,45,0.147,46,0.323,47,2.645,53,1.385,54,0.921,55,1.404,56,1.404,57,0.921,58,1.903,59,0.921,60,0.921,61,0.716,62,0.811,63,0.921,64,0.674,65,0.921,66,0.716,67,1.243,68,0.921,69,0.674,70,0.921,71,0.716,72,1.092,73,0.921,74,0.716,75,0.921,76,0.716,77,0.921,78,1.323,79,0.921,80,1.391,81,0.921,82,0.716,83,0.762,84,1.092,85,0.921,86,0.921,87,0.012,88,0.012,112,1.129,118,0.762,134,2.397,149,1.499,167,0.907,190,2.188,191,1.237,192,1.237,193,1.852,195,0.762,224,1.944,259,3.637,261,0.984,268,0.811,282,1.313,291,1.313,300,1.5,301,1.5,319,0.984,352,1.313,382,1.215,383,1.428,385,1.566,395,1.738,406,1.969,415,1.738,420,2.177,442,1.215,472,3.637,525,2.177,527,1.428,552,1.215,583,1.738,584,3.482,590,1.738,616,1.566,618,3.637,620,1.738,623,3.637,624,3.637,626,4.615,630,4.068,636,1.969,657,3.002,658,3.002,665,1.738,700,1.969,701,1.969,730,3.299,759,1.969,760,4.285,761,3.536,762,4.285,763,3.536,764,4.285,765,4.793,766,3.536,767,2.32,768,5.436,769,2.32,770,2.32,771,3.536,772,2.32,773,3.536,774,2.32,775,2.32,776,2.32,777,1.738,778,2.32,779,3.536,780,1.738,781,2.32,782,2.32,783,2.32,784,2.32,785,2.32,786,2.32,787,2.32,788,2.32,789,1.738,790,2.32,791,2.32,792,3.536,793,2.32,794,2.32,795,2.32,796,2.32,797,3.536]],["title/guards/MeditationsGuard.html",[407,2.578,719,2.118]],["body/guards/MeditationsGuard.html",[3,0.266,4,0.266,9,0.232,19,0.414,20,2.127,22,0.946,27,1.211,29,1.292,30,0.025,31,0.831,32,0.375,33,1.292,35,1.662,37,0.662,38,0.538,45,0.266,46,0.582,87,0.018,88,0.018,112,2.037,118,1.375,134,2.791,163,1.461,190,2.504,195,1.375,200,2.037,224,1.899,261,1.775,312,2.037,379,2.825,383,2.576,385,2.825,409,2.576,411,4.931,414,4.546,415,4.012,416,2.192,418,2.576,420,2.576,422,4.546,424,3.553,719,3.296,738,2.576,798,3.553,799,4.186,800,4.186,801,3.136,802,4.186,803,4.186]],["title/injectables/MeditationsLoadEffect.html",[163,0.939,715,2.322]],["body/injectables/MeditationsLoadEffect.html",[3,0.241,4,0.241,9,0.21,19,0.375,22,1.135,27,1.135,29,1.17,30,0.025,31,0.752,32,0.34,33,1.17,37,0.646,38,0.487,45,0.241,46,0.527,47,2.443,53,1.193,87,0.017,88,0.017,122,1.984,163,1.37,165,1.844,167,1.287,191,1.325,192,1.325,195,1.245,196,1.984,261,1.607,268,1.325,416,3.422,418,2.332,427,2.557,428,2.839,429,3.422,430,3.216,431,4.217,432,3.761,434,4.217,438,3.761,440,3.216,441,2.839,442,1.984,443,2.839,445,2.839,552,1.984,715,3.387,730,2.841,738,3.688,739,2.557,740,3.798,804,4.778,805,5.019,806,5.019,807,5.019,808,5.019]],["title/injectables/MeditationsService.html",[163,0.939,429,1.802]],["body/injectables/MeditationsService.html",[3,0.257,4,0.257,9,0.224,19,0.401,20,2.083,22,0.916,27,1.314,29,1.251,30,0.025,31,0.804,32,0.363,33,1.251,35,2.083,37,0.645,38,0.521,45,0.257,46,0.564,53,0.859,67,0.976,87,0.018,88,0.018,114,3.035,163,1.431,165,1.971,190,2.701,195,1.331,200,1.971,224,2.379,261,1.718,268,1.417,382,2.121,429,2.746,442,2.121,552,2.121,789,3.929,809,3.439,810,6.15,811,6.15,812,3.439,813,5.22,814,4.051,815,4.451,816,4.051,817,4.051,818,4.936,819,4.451,820,4.051,821,5.244,822,5.244,823,5.244,824,4.051]],["title/interfaces/Quote.html",[446,0.939,467,1.561]],["body/interfaces/Quote.html",[3,0.321,4,0.321,9,0.279,19,0.499,30,0.023,32,0.539,45,0.321,84,2.053,87,0.02,88,0.02,167,1.542,179,2.914,312,3.125,446,1.378,447,2.291,467,2.728,825,4.286,826,5.643]],["title/injectables/QuoteLoadEffect.html",[163,0.939,498,2.322]],["body/injectables/QuoteLoadEffect.html",[3,0.232,4,0.232,9,0.202,19,0.361,20,1.946,22,0.826,27,1.249,29,1.128,30,0.025,31,0.725,32,0.328,33,1.128,35,1.451,37,0.641,38,0.47,45,0.232,46,0.508,47,1.778,87,0.017,88,0.017,118,1.2,122,1.913,163,1.337,165,1.778,167,1.256,179,2.223,191,1.278,192,1.278,195,1.2,196,1.913,200,1.778,224,1.658,261,1.55,416,3.391,420,2.249,427,2.466,428,2.738,431,4.141,432,3.671,434,4.141,438,3.671,441,2.738,442,1.913,443,2.738,467,2.223,488,3.666,494,3.102,498,3.306,517,3.73,519,4.156,520,2.466,521,3.73,522,3.102,827,5.013,828,5.906,829,3.654,830,3.654,831,4.899,832,4.899,833,4.159,834,4.899,835,3.654,836,4.899]],["title/injectables/QuoteService.html",[163,0.939,488,1.948]],["body/injectables/QuoteService.html",[3,0.268,4,0.268,9,0.233,19,0.417,20,2.137,22,0.953,27,1.217,29,1.302,30,0.024,31,0.837,32,0.378,33,1.302,35,1.675,37,0.638,38,0.542,45,0.268,46,0.587,87,0.018,88,0.018,114,3.16,163,1.469,165,2.052,190,2.513,195,1.386,200,2.052,224,1.914,261,1.789,268,1.475,282,2.387,442,2.818,467,2.442,488,3.046,789,3.16,812,3.58,813,5.299,815,4.568,818,4.568,819,3.58,833,3.58,837,3.58,838,6.243,839,4.218,840,4.218,841,5.382,842,4.218,843,4.218,844,4.218,845,4.218,846,4.218,847,4.218,848,4.218,849,4.218]],["title/components/TextContentComponent.html",[0,0.556,82,1.063]],["body/components/TextContentComponent.html",[0,0.872,1,1.078,2,1.218,3,0.222,4,0.222,5,1.386,6,1.386,7,1.386,8,1.386,9,0.193,11,1.386,12,2.716,13,2.547,15,1.887,17,1.887,19,0.345,22,1.221,27,1.074,30,0.024,31,0.943,32,0.313,37,0.345,38,0.449,45,0.222,46,0.486,53,1.145,54,1.386,55,1.887,56,1.887,57,1.386,58,2.302,59,1.386,60,1.386,61,1.078,62,1.221,63,1.386,64,1.013,65,1.386,66,1.078,67,0.841,68,1.386,69,1.013,70,1.386,71,1.078,72,1.078,73,1.386,74,1.078,75,1.386,76,1.078,77,1.386,78,1.078,79,1.386,80,1.013,81,1.386,82,1.79,83,2.271,84,1.668,85,1.386,86,1.386,87,0.016,88,0.016,179,2.155,300,2.015,301,2.015,306,2.488,319,1.48,320,2.488,335,2.148,338,1.699,339,1.699,342,1.828,354,1.828,388,2.356,476,2.615,481,2.615,539,2.615,540,4.584,541,4.032,569,2.356,576,2.963,703,4.046,850,4.584,851,4.75,852,3.491,853,3.491,854,3.491,855,3.491]],["title/coverage.html",[856,3.993]],["body/coverage.html",[0,0.959,1,0.61,9,0.109,10,1.675,30,0.024,32,0.177,53,0.418,61,0.61,64,0.573,66,0.61,67,0.475,69,0.573,71,0.61,74,0.61,76,0.61,78,0.61,80,0.573,82,0.61,84,0.61,87,0.011,88,0.011,129,2.337,163,1.454,164,1.117,166,1.675,175,1.034,193,1.034,232,4.431,234,1.675,235,1.675,257,1.215,263,1.479,266,1.332,296,1.479,297,1.479,298,1.479,299,1.675,375,1.675,384,1.479,407,2.337,408,1.215,410,1.675,417,1.215,419,1.479,425,1.332,426,1.675,427,2.61,429,1.034,437,1.332,444,1.332,446,1.507,448,1.675,452,1.675,453,1.479,454,1.675,464,1.675,467,0.896,470,1.479,488,1.117,495,1.332,496,1.766,498,1.332,503,1.332,504,3.293,505,1.215,508,1.766,509,1.479,513,4.138,519,1.332,520,1.332,521,1.332,524,2.105,526,1.479,529,1.479,531,1.479,533,1.479,535,1.479,537,1.675,538,1.479,539,2.337,581,1.675,582,2.105,587,2.337,588,1.479,589,1.675,602,1.479,603,1.675,615,1.675,616,1.332,617,1.675,703,1.479,712,1.332,715,1.332,719,1.215,723,1.332,724,3.293,725,1.215,727,1.479,731,4.526,738,1.215,739,1.332,740,1.332,741,1.479,743,1.479,745,1.479,747,1.479,749,1.479,751,1.479,753,1.479,755,1.479,757,1.479,759,1.675,777,1.479,780,1.479,798,1.675,801,1.479,804,1.675,809,1.675,825,1.675,827,1.675,837,1.675,850,1.675,856,1.675,857,1.675,858,1.974,859,1.974,860,6.041,861,3.868,862,1.675,863,7.089,864,1.675,865,7.089,866,3.283,867,3.119,868,3.868,869,3.119,870,4.062,871,1.675,872,1.675,873,1.675,874,1.675,875,3.119,876,1.675,877,1.675,878,1.675,879,1.675,880,1.675,881,3.868,882,1.974,883,4.319,884,5.042,885,1.675,886,1.675,887,1.675,888,1.675,889,1.675,890,1.675,891,1.675,892,1.675,893,1.675,894,1.974,895,1.974]],["title/dependencies.html",[92,2.015,896,2.87]],["body/dependencies.html",[30,0.025,38,0.523,39,2.132,40,3.933,41,3.05,43,3.05,87,0.018,88,0.018,92,1.981,109,4.466,110,3.55,112,1.981,118,1.728,120,3.456,122,2.132,132,2.747,195,1.338,370,2.747,372,2.747,373,2.747,491,3.05,570,4.466,897,4.071,898,4.071,899,6.534,900,4.071,901,4.071,902,4.071,903,4.071,904,4.071,905,4.071,906,5.829,907,4.071,908,5.261,909,4.071,910,4.071,911,5.261,912,4.071,913,4.071,914,4.071,915,4.071,916,5.829,917,4.071,918,4.071,919,5.829,920,4.071,921,4.071,922,4.071,923,4.071,924,4.071,925,4.071,926,4.071,927,4.071,928,4.071,929,4.071,930,4.071,931,4.071,932,4.071,933,4.071,934,4.071,935,4.071,936,4.071]],["title/index.html",[19,0.284,937,2.87,938,2.87]],["body/index.html",[13,1.78,30,0.018,32,0.316,40,3.224,52,1.993,53,1.013,67,0.848,72,1.087,83,1.157,87,0.016,88,0.016,92,2.325,110,3.224,132,2.376,194,2.988,467,1.597,620,2.638,644,2.988,665,2.638,730,1.993,857,4.056,939,3.521,940,3.521,941,4.778,942,3.521,943,4.778,944,3.521,945,3.521,946,3.521,947,3.521,948,3.521,949,4.056,950,3.521,951,3.521,952,3.521,953,4.778,954,3.521,955,3.521,956,3.521,957,3.521,958,3.521,959,3.521,960,3.521,961,3.521,962,3.521,963,4.778,964,5.817,965,5.817,966,3.521,967,3.521,968,7.042,969,6.887,970,4.778,971,3.521,972,3.521,973,3.521,974,4.778,975,4.778,976,4.778,977,3.521,978,6.081,979,3.521,980,6.69,981,3.521,982,3.521,983,3.521,984,3.521,985,3.521,986,3.521,987,5.817,988,6.272,989,2.988,990,3.521,991,4.778,992,3.521,993,3.521,994,3.521,995,4.778,996,3.521,997,4.778,998,3.521,999,4.778,1000,3.521,1001,5.424,1002,3.521,1003,4.778,1004,3.521,1005,3.521,1006,3.521,1007,3.521,1008,3.521,1009,3.521,1010,3.521,1011,3.521]],["title/modules.html",[91,1.995]],["body/modules.html",[30,0.02,87,0.02,88,0.02,90,3.397,91,2.135,97,3.098,110,4.482,363,3.098,482,3.397,487,3.098,690,3.397,695,3.098,1012,6.642,1013,6.642,1014,6.959,1015,6.414,1016,6.414]],["title/overview.html",[1017,3.993]],["body/overview.html",[1,1.989,2,0.917,30,0.024,61,1.989,64,1.587,66,1.688,69,1.587,71,1.688,74,1.688,76,1.688,78,1.688,80,1.587,82,1.688,87,0.016,88,0.016,90,4.346,91,1.516,92,2.349,93,3.034,94,3.034,95,3.034,96,3.034,97,3.364,98,2.971,99,2.023,100,2.2,125,1.739,164,3.094,165,1.739,175,2.862,363,3.877,364,3.034,365,3.034,366,3.034,409,2.2,429,2.862,447,1.622,482,4.42,483,3.034,484,3.034,485,3.034,486,3.034,487,3.364,488,3.094,690,4.83,691,3.034,692,3.034,693,3.034,694,3.034,695,3.364,1017,3.034,1018,4.827,1019,3.574,1020,3.574,1021,3.574,1022,3.574]],["title/routes.html",[125,2.289]],["body/routes.html",[30,0.022,87,0.022,88,0.022,125,2.716]],["title/miscellaneous/typealiases.html",[1023,1.937,1024,4.141]],["body/miscellaneous/typealiases.html",[19,0.539,30,0.021,32,0.489,87,0.021,88,0.021,582,3.679,584,4.245,1023,3.679,1025,5.452,1026,4.627]],["title/miscellaneous/variables.html",[1023,1.937,1027,3.515]],["body/miscellaneous/variables.html",[19,0.124,30,0.025,31,0.426,32,0.472,52,1.885,53,1.142,67,0.902,72,0.869,83,0.924,84,0.869,87,0.007,88,0.007,129,2.495,132,1.448,149,0.438,177,4.412,179,1.852,185,0.772,191,2.392,192,2.392,210,0.846,212,0.846,214,0.846,232,1.321,263,1.608,266,1.448,282,2.906,284,0.939,287,0.939,289,0.939,291,3.63,292,0.939,294,1.608,376,2.956,384,2.107,386,1.608,417,1.731,419,1.608,437,1.898,444,1.898,449,1.821,450,2.495,451,1.608,467,2.087,470,1.608,495,1.448,496,1.885,503,0.846,504,0.939,505,2.956,508,2.31,509,2.107,510,1.064,513,0.939,514,2.827,515,2.827,516,2.827,517,2.754,518,1.608,519,1.898,520,1.898,521,1.898,523,1.608,524,2.754,525,1.731,526,1.608,527,1.321,528,1.064,529,2.107,530,1.064,531,2.107,532,1.064,533,2.107,534,1.064,535,2.107,536,1.064,582,0.846,583,3.268,712,1.448,714,1.064,723,0.846,724,0.939,725,3.498,727,2.107,728,1.064,730,2.719,731,0.939,732,2.827,733,2.827,734,2.827,735,2.827,736,2.827,737,2.827,738,1.731,739,1.898,740,1.898,741,1.608,742,1.064,743,2.107,744,1.064,745,2.107,746,1.064,747,2.107,748,1.064,749,2.107,750,1.064,751,2.107,752,1.064,753,2.107,754,1.064,755,2.107,756,1.064,757,2.107,758,1.064,777,1.608,780,1.608,801,1.608,826,1.064,862,1.064,864,1.821,866,1.064,870,1.064,871,3.178,872,1.821,873,1.821,874,1.821,876,1.064,877,1.064,878,1.821,879,1.064,880,1.821,883,1.064,884,1.064,885,1.821,886,1.821,887,1.821,888,2.388,889,1.821,890,4.227,891,1.064,892,1.064,893,1.064,949,1.821,989,1.064,1023,0.846,1026,1.064,1027,1.064,1028,5.133,1029,1.254,1030,1.254,1031,1.254,1032,1.254,1033,2.813,1034,4.362,1035,1.254,1036,4.081,1037,2.813,1038,2.813,1039,1.254,1040,1.254,1041,5.133,1042,3.744,1043,1.254,1044,3.744,1045,2.146,1046,2.146,1047,2.146,1048,2.146,1049,2.146,1050,4.081,1051,2.146,1052,2.146,1053,2.146,1054,2.146,1055,2.146,1056,2.146,1057,2.146,1058,2.146,1059,2.146,1060,2.146,1061,2.146,1062,2.146,1063,1.254,1064,1.254,1065,1.254,1066,2.146,1067,4.6,1068,4.803,1069,4.081,1070,2.813,1071,4.081,1072,2.813,1073,1.254,1074,1.254,1075,1.254,1076,1.254,1077,2.146,1078,1.254,1079,1.254,1080,1.254,1081,1.254,1082,1.254,1083,1.254,1084,1.254,1085,1.254,1086,1.254,1087,1.254,1088,2.813,1089,1.254,1090,1.254,1091,2.146,1092,1.254,1093,1.254,1094,1.254,1095,1.254,1096,1.254,1097,1.254,1098,1.254,1099,1.254,1100,1.254,1101,1.254,1102,1.254,1103,1.254,1104,1.254,1105,1.254,1106,1.254,1107,1.254,1108,1.254,1109,1.254,1110,1.254,1111,1.254,1112,1.254,1113,1.254,1114,1.254,1115,1.254,1116,1.254,1117,1.254,1118,1.254,1119,1.254,1120,1.254,1121,1.254,1122,1.254,1123,1.254,1124,1.254,1125,1.254,1126,1.254,1127,1.254,1128,1.254,1129,1.254,1130,1.254,1131,1.254,1132,1.254,1133,1.254,1134,1.254,1135,1.254,1136,1.254,1137,1.254,1138,1.254,1139,5.595,1140,1.254,1141,1.254,1142,1.254,1143,1.254,1144,1.254,1145,1.254,1146,1.254]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"injectables/AudioService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0000001f",{"_index":346,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["00:00",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":687,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["1.0.2",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["1000).format(format",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1019,"title":{},"body":{"overview.html":{}}}],["111b22",{"_index":595,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["11px",{"_index":566,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["12.0.0",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["12.2.9",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["12.4.0",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":340,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{}}}],["13px",{"_index":614,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["145px",{"_index":460,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["14px",{"_index":569,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["15px",{"_index":351,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["168px",{"_index":334,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["16px",{"_index":852,"title":{},"body":{"components/TextContentComponent.html":{}}}],["18px",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{}}}],["19px",{"_index":855,"title":{},"body":{"components/TextContentComponent.html":{}}}],["1:661526611463:web:ad4d2587d5cc613fab8ca2",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1f1f1f",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["1px",{"_index":347,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["2",{"_index":1020,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["245px",{"_index":459,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["25",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":597,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["270px",{"_index":598,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["27px",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["28px",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["2px",{"_index":348,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["3.18.1",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":343,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["315px",{"_index":574,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["32px",{"_index":576,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["38px",{"_index":560,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["3px",{"_index":573,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["400",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["45px",{"_index":596,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["4e6b8c",{"_index":561,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["5",{"_index":1022,"title":{},"body":{"overview.html":{}}}],["5.36.0",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":562,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["500",{"_index":580,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["5cd18",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.appspot.com",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseapp.com",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseio.com",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":613,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["616469",{"_index":611,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["661526611463",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":355,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["7",{"_index":1018,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":341,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["7px",{"_index":577,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8",{"_index":1021,"title":{},"body":{"overview.html":{}}}],["808289",{"_index":685,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["85",{"_index":558,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8px",{"_index":336,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["9.1.1",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["999da1",{"_index":579,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["9eb4bb",{"_index":362,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__back",{"_index":599,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["__button",{"_index":337,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__content",{"_index":853,"title":{},"body":{"components/TextContentComponent.html":{}}}],["__description",{"_index":601,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["__icon",{"_index":563,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["__image",{"_index":556,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__play",{"_index":559,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__progress",{"_index":578,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__quote",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["__range",{"_index":567,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__title",{"_index":600,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["accessors",{"_index":240,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{}}}],["action",{"_index":517,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":416,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["activated",{"_index":359,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["activatedroute",{"_index":765,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["active",{"_index":572,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["actual_component",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["ad",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addevents",{"_index":215,"title":{},"body":{"injectables/AudioService.html":{}}}],["addevents(this.audioobj",{"_index":231,"title":{},"body":{"injectables/AudioService.html":{}}}],["adipiscing",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasya02y_nqiilec4",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":1025,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["aliqua",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliquip",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["android",{"_index":974,"title":{},"body":{"index.html":{}}}],["angular",{"_index":962,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/compat",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/firestore",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angular/flex",{"_index":372,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":491,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/CategoriesGuard.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"dependencies.html":{}}}],["angularfiremodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":813,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angularfirestoremodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["anim",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/meditation/services/audio",{"_index":197,"title":{},"body":{"injectables/AudioService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":944,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":90,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":97,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["asobservable",{"_index":247,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["async",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationsComponent.html":{}}}],["audio",{"_index":194,"title":{},"body":{"injectables/AudioService.html":{},"index.html":{}}}],["audioobj",{"_index":168,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["audioobj.currenttime",{"_index":293,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioobj.duration",{"_index":288,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioservice",{"_index":164,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"overview.html":{}}}],["audiostateservice",{"_index":175,"title":{"injectables/AudioStateService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"overview.html":{}}}],["aute",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authdomain",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":461,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["automatically",{"_index":1005,"title":{},"body":{"index.html":{}}}],["available",{"_index":1016,"title":{},"body":{"modules.html":{}}}],["await",{"_index":792,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["background",{"_index":352,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["bar",{"_index":570,"title":{},"body":{"components/MediaContentComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base",{"_index":942,"title":{},"body":{"index.html":{}}}],["bebdbd",{"_index":358,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["behaviorsubject",{"_index":259,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationsComponent.html":{}}}],["behaviorsubject(initial_media_state",{"_index":250,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["beta.35",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":312,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"interfaces/Quote.html":{}}}],["bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":349,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["bottom",{"_index":555,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["box",{"_index":344,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["break",{"_index":283,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["browse",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1006,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["buttonsselectcomponent",{"_index":61,"title":{"components/ButtonsSelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonsselectmodule",{"_index":363,"title":{"modules/ButtonsSelectModule.html":{}},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{},"modules.html":{},"overview.html":{}}}],["canactivate",{"_index":411,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{}}}],["canplay",{"_index":212,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["card.component",{"_index":707,"title":{},"body":{"modules/MeditationModule.html":{}}}],["card.component.html",{"_index":456,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.scss",{"_index":455,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.ts",{"_index":454,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":457,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card/category",{"_index":453,"title":{},"body":{"components/CategoryCardComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["case",{"_index":281,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["catcherror",{"_index":441,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["catcherror((error",{"_index":438,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["categories",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["categories'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["categories.component.html",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.find((category",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoriescomponent",{"_index":64,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoriesdata",{"_index":745,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorieserrorstate",{"_index":751,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesguard",{"_index":408,"title":{"guards/CategoriesGuard.html":{}},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"coverage.html":{}}}],["categoriesloadedstate",{"_index":749,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesloadeffect",{"_index":425,"title":{"injectables/CategoriesLoadEffect.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["categoriesloadingstate",{"_index":747,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":67,"title":{"interfaces/Category.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["category.description",{"_index":594,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["category.id",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category.name",{"_index":458,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["categorycardcomponent",{"_index":66,"title":{"components/CategoryCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryid",{"_index":583,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["categorymock",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{}}}],["changedetection",{"_index":300,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy",{"_index":319,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":301,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["child",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["choose",{"_index":954,"title":{},"body":{"index.html":{}}}],["cillum",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["cluster_appmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule",{"_index":364,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule_declarations",{"_index":365,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule_exports",{"_index":366,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":483,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":485,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":486,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_providers",{"_index":484,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_meditationmodule",{"_index":691,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_declarations",{"_index":692,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_imports",{"_index":693,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_providers",{"_index":694,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["col",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["collection('meditation_categories",{"_index":820,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('meditations",{"_index":824,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('quotes",{"_index":843,"title":{},"body":{"injectables/QuoteService.html":{}}}],["collectionreference",{"_index":841,"title":{},"body":{"injectables/QuoteService.html":{}}}],["color",{"_index":354,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["column",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["combinelatest",{"_index":779,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["commands",{"_index":557,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["commodo",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":369,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["compodoc",{"_index":965,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["componentprops",{"_index":794,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"overview.html":{}}}],["config",{"_index":1002,"title":{},"body":{"index.html":{}}}],["consectetur",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequat",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consists",{"_index":945,"title":{},"body":{"index.html":{}}}],["const",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":265,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["constructor(actions",{"_index":428,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["constructor(firestore",{"_index":812,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["constructor(modalcontroller",{"_index":636,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["constructor(platform",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"injectables/AudioService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["constructor(state",{"_index":174,"title":{},"body":{"injectables/AudioService.html":{}}}],["constructor(store",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{}}}],["content",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"interfaces/Quote.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component",{"_index":704,"title":{},"body":{"modules/MeditationModule.html":{}}}],["content.component.html",{"_index":541,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.scss",{"_index":540,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.ts",{"_index":539,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:11",{"_index":851,"title":{},"body":{"components/TextContentComponent.html":{}}}],["content.component.ts:22",{"_index":548,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:25",{"_index":549,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:28",{"_index":547,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:31",{"_index":551,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:34",{"_index":550,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:37",{"_index":546,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.media",{"_index":657,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content.text",{"_index":658,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content/media",{"_index":538,"title":{},"body":{"components/MediaContentComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["content/text",{"_index":703,"title":{},"body":{"modules/MeditationModule.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content[keyof",{"_index":586,"title":{},"body":{"interfaces/Meditation.html":{}}}],["contents",{"_index":644,"title":{},"body":{"components/MeditationModalComponent.html":{},"index.html":{}}}],["contents[0",{"_index":674,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["contenttypes",{"_index":584,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["core",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":856,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":431,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["createfeatureselector",{"_index":506,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/MeditationModuleState.html":{}}}],["createfeatureselector(homefeaturekey",{"_index":510,"title":{},"body":{"interfaces/HomeModuleState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(meditationfeaturekey",{"_index":728,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"miscellaneous/variables.html":{}}}],["createreducer",{"_index":518,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selecthomestate",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["culpa",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cupidatat",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":826,"title":{},"body":{"interfaces/Quote.html":{},"miscellaneous/variables.html":{}}}],["customevent",{"_index":229,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["cypress",{"_index":963,"title":{},"body":{"index.html":{}}}],["cypress:open",{"_index":996,"title":{},"body":{"index.html":{}}}],["d3dae2",{"_index":571,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["daily",{"_index":952,"title":{},"body":{"index.html":{}}}],["data",{"_index":523,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddf0fe",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["debug",{"_index":990,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["default",{"_index":191,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"miscellaneous/variables.html":{}}}],["deserunt",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":993,"title":{},"body":{"index.html":{}}}],["development",{"_index":972,"title":{},"body":{"index.html":{}}}],["devices",{"_index":976,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["directives",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["dismissmodal",{"_index":628,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["distinctuntilchanged",{"_index":654,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["doc.data",{"_index":823,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["docs:json",{"_index":1011,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":857,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dolor",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dolore",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["duis",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duration",{"_index":284,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["durationsec",{"_index":287,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":995,"title":{},"body":{"index.html":{}}}],["e7f4fd",{"_index":689,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["ea",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effects",{"_index":714,"title":{},"body":{"modules/MeditationModule.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([meditationsloadeffect",{"_index":722,"title":{},"body":{"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([quoteloadeffect",{"_index":502,"title":{},"body":{"modules/HomeModule.html":{}}}],["effectsmodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["eiusmod",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["elit",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ended",{"_index":208,"title":{},"body":{"injectables/AudioService.html":{}}}],["enim",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":697,"title":{},"body":{"modules/MeditationModule.html":{}}}],["environment",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":209,"title":{},"body":{"injectables/AudioService.html":{}}}],["eslint",{"_index":999,"title":{},"body":{"index.html":{}}}],["esse",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["est",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["et",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eu",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":228,"title":{},"body":{"injectables/AudioService.html":{}}}],["event.target",{"_index":278,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["event.type",{"_index":280,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["eventemitter",{"_index":316,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["eventkeys",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{}}}],["eventkeys.foreach((event",{"_index":220,"title":{},"body":{"injectables/AudioService.html":{}}}],["events",{"_index":207,"title":{},"body":{"injectables/AudioService.html":{}}}],["ex",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excepteur",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercitation",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["f9eedb",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationsComponent.html":{}}}],["failure",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":291,"title":{},"body":{"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":353,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["filter",{"_index":665,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"index.html":{}}}],["filter((value",{"_index":651,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["filtermeditations",{"_index":762,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["filtermeditations(meditations",{"_index":767,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["firebase",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":815,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["first",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["flexlayoutmodule",{"_index":371,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["focus",{"_index":462,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["font",{"_index":338,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["format",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formattime",{"_index":263,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formattime(audioobj.currenttime",{"_index":295,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formattime(audioobj.duration",{"_index":285,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formsmodule",{"_index":490,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["fugiat",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["functionalities",{"_index":948,"title":{},"body":{"index.html":{}}}],["geneate",{"_index":1009,"title":{},"body":{"index.html":{}}}],["getdailyquote",{"_index":838,"title":{},"body":{"injectables/QuoteService.html":{}}}],["getmedia",{"_index":254,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["getmeditationcategories",{"_index":810,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getmeditations",{"_index":811,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getshowbuttons",{"_index":663,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["getting",{"_index":937,"title":{"index.html":{}},"body":{}}],["globalthis",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":1015,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["guard",{"_index":407,"title":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":409,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"overview.html":{}}}],["guide",{"_index":958,"title":{},"body":{"index.html":{}}}],["handler",{"_index":219,"title":{},"body":{"injectables/AudioService.html":{}}}],["header",{"_index":590,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["header'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["header.component",{"_index":710,"title":{},"body":{"modules/MeditationModule.html":{}}}],["header.component.html",{"_index":592,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.scss",{"_index":591,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.ts",{"_index":589,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:14",{"_index":593,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header/meditation",{"_index":588,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["height",{"_index":342,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["home.component.html",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home",{"_index":492,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/models/quote.model",{"_index":842,"title":{},"body":{"injectables/QuoteService.html":{}}}],["home/pages/home/home.component",{"_index":493,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home/services/quote.service",{"_index":494,"title":{},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/actions/home.actions",{"_index":522,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/effects/quote",{"_index":499,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/reducers/home.reducer",{"_index":507,"title":{},"body":{"interfaces/HomeModuleState.html":{}}}],["home/store/reducers/home.state",{"_index":497,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/selectors/home.selector",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":69,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homefeaturekey",{"_index":495,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homemodule",{"_index":482,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homemodulestate",{"_index":503,"title":{"interfaces/HomeModuleState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homepageroutingmodule",{"_index":487,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["homereducer",{"_index":526,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homereducer(state",{"_index":528,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["homestate",{"_index":505,"title":{"interfaces/HomeState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["howler",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["htmlaudioelement",{"_index":217,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["http://domain.com",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclientmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["https://domain.com",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://meditify",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/seed/picsum/400/600",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":960,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":420,"title":{},"body":{"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["import('./modules/home/home.module').then((m",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/meditation/meditation.module').then",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["incididunt",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["init",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial_media_state",{"_index":266,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["initializestate",{"_index":239,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestate($obs",{"_index":242,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestream",{"_index":169,"title":{},"body":{"injectables/AudioService.html":{}}}],["initializestream(url",{"_index":178,"title":{},"body":{"injectables/AudioService.html":{}}}],["initialstate",{"_index":524,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"overview.html":{}}}],["input",{"_index":320,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["inputs",{"_index":306,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["install",{"_index":970,"title":{},"body":{"index.html":{}}}],["installation",{"_index":966,"title":{},"body":{"index.html":{}}}],["interact",{"_index":955,"title":{},"body":{"index.html":{}}}],["interface",{"_index":446,"title":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{}},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"coverage.html":{}}}],["interfaces",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"overview.html":{}}}],["introduction",{"_index":939,"title":{},"body":{"index.html":{}}}],["ion",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["ionic",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["ionicmodule.forroot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":564,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["ionicroutestrategy",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["ios",{"_index":975,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irure",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscategorieserror",{"_index":732,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloaded",{"_index":733,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloading",{"_index":734,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isloaded",{"_index":422,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["ismeditationserror",{"_index":735,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloaded",{"_index":736,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloading",{"_index":737,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isquoteerror",{"_index":514,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloaded",{"_index":515,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloading",{"_index":516,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["italic",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":604,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["item.component",{"_index":711,"title":{},"body":{"modules/MeditationModule.html":{}}}],["item.component.html",{"_index":606,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.scss",{"_index":605,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts",{"_index":603,"title":{},"body":{"components/MeditationItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":609,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:22",{"_index":608,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:25",{"_index":607,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item/meditation",{"_index":602,"title":{},"body":{"components/MeditationItemComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["js",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1010,"title":{},"body":{"index.html":{}}}],["justify",{"_index":854,"title":{},"body":{"components/TextContentComponent.html":{}}}],["knob",{"_index":568,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["labore",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laboris",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laborum",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["layout",{"_index":373,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["left",{"_index":686,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["legend",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["lib/buttons",{"_index":297,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["lint",{"_index":1003,"title":{},"body":{"index.html":{}}}],["lint:fix",{"_index":1004,"title":{},"body":{"index.html":{}}}],["linting",{"_index":997,"title":{},"body":{"index.html":{}}}],["load",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load.effect",{"_index":500,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["load.effect.ts",{"_index":427,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["load.effect.ts:21",{"_index":835,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:23",{"_index":440,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:35",{"_index":829,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:37",{"_index":430,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:39",{"_index":830,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["loadcategories",{"_index":417,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriesfailure",{"_index":444,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriessuccess",{"_index":437,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedmetadata",{"_index":213,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["loadmeditations",{"_index":738,"title":{},"body":{"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationsfailure",{"_index":739,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationssuccess",{"_index":740,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquote",{"_index":519,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotefailure",{"_index":520,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotesuccess",{"_index":521,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadstart",{"_index":214,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["logonly",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["lorem",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homemodule",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.meditationmodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["magna",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":947,"title":{},"body":{"index.html":{}}}],["make",{"_index":982,"title":{},"body":{"index.html":{}}}],["map",{"_index":442,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map(([meditations",{"_index":790,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["map((categories",{"_index":436,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["map((meditations",{"_index":807,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["map((quote",{"_index":833,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map((snapshot",{"_index":821,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["map((value",{"_index":652,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["margin",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/MeditationModalComponent.html":{}}}],["matching",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(value",{"_index":653,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["max",{"_index":575,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["maxage",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["media(value",{"_index":272,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["media.duration",{"_index":554,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["media.time",{"_index":553,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["mediacontentcomponent",{"_index":71,"title":{"components/MediaContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediaoptions",{"_index":623,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediaselection",{"_index":624,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediastate",{"_index":257,"title":{"interfaces/MediaState.html":{}},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"coverage.html":{}}}],["mediasubject",{"_index":237,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["mediatype",{"_index":289,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["meditation",{"_index":53,"title":{"interfaces/Meditation.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meditation.categoryid",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditation.title",{"_index":610,"title":{},"body":{"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["meditation/components/category",{"_index":706,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/components/meditation",{"_index":700,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["meditation/constants/media.constants",{"_index":267,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/guards/categories.guard",{"_index":718,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/guards/meditations.guard",{"_index":720,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/meditation",{"_index":698,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/models/category.model",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{}}}],["meditation/models/media.model",{"_index":269,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/models/meditation.model",{"_index":552,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{}}}],["meditation/pages/categories/categories.component",{"_index":708,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/pages/meditations/meditations.component",{"_index":709,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/services/audio",{"_index":667,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/audio.service",{"_index":668,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/meditations.service",{"_index":445,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/actions/meditation.actions",{"_index":418,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/effects/categories",{"_index":717,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/effects/meditations",{"_index":716,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/reducers/meditation.reducer",{"_index":726,"title":{},"body":{"interfaces/MeditationModuleState.html":{}}}],["meditation/store/reducers/meditation.state",{"_index":713,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/selectors/meditation.selector",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["meditation/utils/time.utils",{"_index":264,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["meditation[media",{"_index":797,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationfeaturekey",{"_index":712,"title":{},"body":{"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationheadercomponent",{"_index":74,"title":{"components/MeditationHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationitemcomponent",{"_index":76,"title":{"components/MeditationItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationmock",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationmodalcomponent",{"_index":78,"title":{"components/MeditationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationmodule",{"_index":690,"title":{"modules/MeditationModule.html":{}},"body":{"modules/MeditationModule.html":{},"modules.html":{},"overview.html":{}}}],["meditationmodulestate",{"_index":723,"title":{"interfaces/MeditationModuleState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer",{"_index":741,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer(state",{"_index":742,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["meditationroutingmodule",{"_index":695,"title":{"modules/MeditationRoutingModule.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["meditations",{"_index":730,"title":{},"body":{"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meditations'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["meditations.component.html",{"_index":761,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.component.scss",{"_index":760,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.filter",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditations.filter((meditation",{"_index":796,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationscomponent",{"_index":80,"title":{"components/MeditationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationsdata",{"_index":743,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationserrorstate",{"_index":757,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsguard",{"_index":719,"title":{"guards/MeditationsGuard.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["meditationsloadedstate",{"_index":755,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsloadeffect",{"_index":715,"title":{"injectables/MeditationsLoadEffect.html":{}},"body":{"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["meditationsloadingstate",{"_index":753,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsservice",{"_index":429,"title":{"injectables/MeditationsService.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"coverage.html":{},"overview.html":{}}}],["meditationstate",{"_index":725,"title":{"interfaces/MeditationState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditify",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mergemap",{"_index":434,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["messagingsenderid",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["min",{"_index":612,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["minim",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1023,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm:ss",{"_index":286,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["mobile",{"_index":943,"title":{},"body":{"index.html":{}}}],["modal",{"_index":620,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"index.html":{}}}],["modal'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["modal.component",{"_index":701,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["modal.component.html",{"_index":622,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.scss",{"_index":621,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts",{"_index":617,"title":{},"body":{"components/MeditationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":640,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:32",{"_index":656,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:35",{"_index":638,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:37",{"_index":659,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:38",{"_index":660,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:40",{"_index":655,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:47",{"_index":664,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:52",{"_index":637,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:55",{"_index":661,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:56",{"_index":662,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:60",{"_index":641,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:67",{"_index":643,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:75",{"_index":646,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:83",{"_index":645,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:87",{"_index":648,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:95",{"_index":639,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.present",{"_index":795,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["modal/media",{"_index":705,"title":{},"body":{"modules/MeditationModule.html":{}}}],["modal/meditation",{"_index":616,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"coverage.html":{}}}],["modal/text",{"_index":702,"title":{},"body":{"modules/MeditationModule.html":{}}}],["modalcontroller",{"_index":626,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mode",{"_index":991,"title":{},"body":{"index.html":{}}}],["models",{"_index":268,"title":{},"body":{"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["module",{"_index":89,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}},"body":{}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mollit",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["moment.utc(time",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["motivational",{"_index":951,"title":{},"body":{"index.html":{}}}],["mp3",{"_index":290,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["multiple",{"_index":307,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["native/core",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationsComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["ngondestroy",{"_index":629,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["ngoninit",{"_index":630,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["ngrx/effects",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrxoniniteffects",{"_index":828,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["nisi",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":360,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{}}}],["nostrud",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":969,"title":{},"body":{"index.html":{}}}],["null",{"_index":525,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["nulla",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":185,"title":{},"body":{"injectables/AudioService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":216,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.addeventlistener(event",{"_index":221,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.removeeventlistener(event",{"_index":223,"title":{},"body":{"injectables/AudioService.html":{}}}],["object",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":244,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["obs.subscribe((event",{"_index":277,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["observable",{"_index":190,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["observable((observer",{"_index":225,"title":{},"body":{"injectables/AudioService.html":{}}}],["observer.next(event",{"_index":230,"title":{},"body":{"injectables/AudioService.html":{}}}],["occaecat",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(loadcategoriesfailure(error",{"_index":439,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["of(loadmeditationsfailure(error",{"_index":808,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["of(loadquotefailure(error",{"_index":834,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["of(true",{"_index":424,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["officia",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype",{"_index":443,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["oftype(loadcategories",{"_index":433,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["oftype(loadmeditations",{"_index":805,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["oftype(loadquote",{"_index":831,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["ondestroy",{"_index":619,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["oninit",{"_index":618,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["oniniteffects",{"_index":836,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["onmediaselectionchange",{"_index":631,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onmediaselectionchange(contents",{"_index":642,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onpause",{"_index":632,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onplay",{"_index":633,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend",{"_index":634,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend(undefined",{"_index":647,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["opacity",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":978,"title":{},"body":{"index.html":{}}}],["open:android",{"_index":986,"title":{},"body":{"index.html":{}}}],["open:ios",{"_index":985,"title":{},"body":{"index.html":{}}}],["opens",{"_index":956,"title":{},"body":{"index.html":{}}}],["option",{"_index":331,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["options",{"_index":308,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}],["outline",{"_index":463,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["output",{"_index":321,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["outputs",{"_index":309,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["overview",{"_index":1017,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":896,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":335,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["page",{"_index":949,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["pariatur",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pathmatch",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pause",{"_index":170,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["pauseaudio",{"_index":543,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["performed",{"_index":998,"title":{},"body":{"index.html":{}}}],["personal",{"_index":940,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":789,"title":{},"body":{"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["pipe(filter((meditations",{"_index":787,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["pipe(sharereplay",{"_index":248,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["platform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":171,"title":{},"body":{"injectables/AudioService.html":{}}}],["playaudio",{"_index":544,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["playing",{"_index":210,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["pluck",{"_index":666,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["pluck('timesec",{"_index":650,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["practice",{"_index":957,"title":{},"body":{"index.html":{}}}],["preloadallmodules",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prerequisites",{"_index":984,"title":{},"body":{"index.html":{}}}],["presentmodal",{"_index":763,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["presentmodal(meditation",{"_index":771,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["prettier",{"_index":1001,"title":{},"body":{"index.html":{}}}],["private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["production",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proident",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":941,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":773,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["properties",{"_index":167,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{}}}],["props",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":199,"title":{},"body":{"injectables/AudioService.html":{}}}],["providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["public",{"_index":625,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["querysnapshot",{"_index":818,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["qui",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quis",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quote",{"_index":467,"title":{"interfaces/Quote.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/HomeState.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["quote.content",{"_index":849,"title":{},"body":{"injectables/QuoteService.html":{}}}],["quotedata",{"_index":529,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteerrorstate",{"_index":535,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadedstate",{"_index":533,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadeffect",{"_index":498,"title":{"injectables/QuoteLoadEffect.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["quoteloadingstate",{"_index":531,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quotemock",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteservice",{"_index":488,"title":{"injectables/QuoteService.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"overview.html":{}}}],["r",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":350,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["readonly",{"_index":236,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["redirectto",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["reducer",{"_index":508,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reducers",{"_index":496,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":844,"title":{},"body":{"injectables/QuoteService.html":{}}}],["ref.where('current",{"_index":845,"title":{},"body":{"injectables/QuoteService.html":{}}}],["removeevents",{"_index":222,"title":{},"body":{"injectables/AudioService.html":{}}}],["removeevents(this.audioobj",{"_index":233,"title":{},"body":{"injectables/AudioService.html":{}}}],["reprehenderit",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":971,"title":{},"body":{"index.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AudioStateService.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}],["results",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":224,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{}}}],["root'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["route",{"_index":764,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["routereusestrategy",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":512,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":125,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["routing.module.ts",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["run",{"_index":968,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":261,"title":{},"body":{"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["s",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["seconds",{"_index":187,"title":{},"body":{"injectables/AudioService.html":{}}}],["sed",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seekbarvalue",{"_index":542,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{}}}],["seekend",{"_index":545,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["seekto",{"_index":172,"title":{},"body":{"injectables/AudioService.html":{}}}],["seekto(seconds",{"_index":184,"title":{},"body":{"injectables/AudioService.html":{}}}],["select",{"_index":302,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["select(selectmeditationsbycategoryid(categoryid",{"_index":786,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["select.component",{"_index":374,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select.component.html",{"_index":304,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.scss",{"_index":303,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts",{"_index":299,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:17",{"_index":314,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:20",{"_index":313,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:23",{"_index":315,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:26",{"_index":311,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:30",{"_index":318,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.module",{"_index":699,"title":{},"body":{"modules/MeditationModule.html":{}}}],["select.module.ts",{"_index":368,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select/buttons",{"_index":367,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{}}}],["select/components/buttons",{"_index":298,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["selectcategories",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorieshaserror",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorybyid",{"_index":777,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":361,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationItemComponent.html":{}}}],["selectedmedia",{"_index":768,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["selecthomemodulestate",{"_index":509,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecthomestate",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":322,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.add(type",{"_index":327,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.clear",{"_index":328,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.delete(type",{"_index":326,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.has(type",{"_index":325,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selectiscategoriesloaded",{"_index":419,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectiscategoriesloading",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloaded",{"_index":801,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloading",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloaded",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloading",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationmodulestate",{"_index":727,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditations",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationsbycategoryid",{"_index":780,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationshaserror",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationstate",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["selectors",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["selectquote",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectquotehaserror",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":973,"title":{},"body":{"index.html":{}}}],["services",{"_index":196,"title":{},"body":{"injectables/AudioService.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["set",{"_index":271,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["set(this.value",{"_index":323,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["setmedia(value",{"_index":256,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["shadow",{"_index":345,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["sharereplay",{"_index":260,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["showbuttons",{"_index":635,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["shows",{"_index":950,"title":{},"body":{"index.html":{}}}],["simply",{"_index":979,"title":{},"body":{"index.html":{}}}],["simulators",{"_index":977,"title":{},"body":{"index.html":{}}}],["sint",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sit",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":339,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["snapshot",{"_index":846,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs",{"_index":847,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs.map((doc",{"_index":822,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["snapshot.docs[0].data",{"_index":848,"title":{},"body":{"injectables/QuoteService.html":{}}}],["solid",{"_index":357,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["splashscreen",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/.../category.mock.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.actions.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.reducer.ts",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.selector.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.state.ts",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../media.constants.ts",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.actions.ts",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.mock.ts",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.model.ts",{"_index":1026,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../meditation.reducer.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.selector.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.state.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quote.mock.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../time.utils.ts",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/ui",{"_index":296,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["src/app/modules/home/home",{"_index":511,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/modules/home/home.module.ts",{"_index":489,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/modules/home/mocks/quote.mock.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/models/quote.model.ts",{"_index":825,"title":{},"body":{"interfaces/Quote.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts:16",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/home/services/quote.service.ts",{"_index":837,"title":{},"body":{"injectables/QuoteService.html":{},"coverage.html":{}}}],["src/app/modules/home/services/quote.service.ts:15",{"_index":839,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/services/quote.service.ts:18",{"_index":840,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/store/actions/home.actions.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/effects/quote",{"_index":827,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/home/store/reducers/home.reducer.ts",{"_index":513,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/reducers/home.state.ts",{"_index":504,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/selectors/home.selector.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/components/category",{"_index":452,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/media",{"_index":537,"title":{},"body":{"components/MediaContentComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/meditation",{"_index":587,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/text",{"_index":850,"title":{},"body":{"components/TextContentComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/constants/media.constants.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts",{"_index":410,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:16",{"_index":412,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:19",{"_index":413,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts",{"_index":798,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:16",{"_index":799,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:19",{"_index":800,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/meditation",{"_index":729,"title":{},"body":{"modules/MeditationRoutingModule.html":{}}}],["src/app/modules/meditation/meditation.module.ts",{"_index":696,"title":{},"body":{"modules/MeditationModule.html":{}}}],["src/app/modules/meditation/mocks/category.mock.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/mocks/meditation.mock.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/models/category.model.ts",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/media.model.ts",{"_index":581,"title":{},"body":{"interfaces/MediaState.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/meditation.model.ts",{"_index":582,"title":{},"body":{"interfaces/Meditation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts:20",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/modules/meditation/pages/meditation",{"_index":615,"title":{},"body":{"components/MeditationModalComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts",{"_index":759,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:33",{"_index":776,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:35",{"_index":775,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:36",{"_index":774,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:37",{"_index":766,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:45",{"_index":770,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:62",{"_index":772,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:71",{"_index":769,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/services/audio",{"_index":234,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts",{"_index":166,"title":{},"body":{"injectables/AudioService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:12",{"_index":176,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:16",{"_index":183,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:20",{"_index":182,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:24",{"_index":186,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:28",{"_index":180,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:33",{"_index":189,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts",{"_index":809,"title":{},"body":{"injectables/MeditationsService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:15",{"_index":814,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:18",{"_index":816,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:29",{"_index":817,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/store/actions/meditation.actions.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/effects/categories",{"_index":426,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/effects/meditations",{"_index":804,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.reducer.ts",{"_index":731,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.state.ts",{"_index":724,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/selectors/meditation.selector.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/utils/time.utils.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":981,"title":{},"body":{"index.html":{}}}],["started",{"_index":938,"title":{"index.html":{}},"body":{}}],["state",{"_index":177,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.categories",{"_index":746,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.home",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.iscategorieserror",{"_index":752,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloaded",{"_index":750,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloading",{"_index":748,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationserror",{"_index":758,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloaded",{"_index":756,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloading",{"_index":754,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteerror",{"_index":536,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloaded",{"_index":534,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloading",{"_index":532,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.meditation",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.meditations",{"_index":744,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.quote",{"_index":530,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.service",{"_index":198,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["state.service.ts",{"_index":235,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["state.service.ts:17",{"_index":253,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:18",{"_index":251,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:20",{"_index":249,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:24",{"_index":255,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:27",{"_index":258,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:29",{"_index":241,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:33",{"_index":245,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:40",{"_index":243,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["statements",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":627,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["statusbar",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["storagebucket",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["store/selectors/meditation.selector",{"_index":778,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["storedevtoolsmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["storemodule.forfeature(homefeaturekey",{"_index":501,"title":{},"body":{"modules/HomeModule.html":{}}}],["storemodule.forfeature(meditationfeaturekey",{"_index":721,"title":{},"body":{"modules/MeditationModule.html":{}}}],["storemodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["stories",{"_index":1007,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":964,"title":{},"body":{"index.html":{}}}],["storybook:build",{"_index":1008,"title":{},"body":{"index.html":{}}}],["stream",{"_index":204,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable",{"_index":173,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable(url",{"_index":188,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamsubscription",{"_index":238,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Category.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":565,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["style",{"_index":356,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["success",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":983,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":279,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["switchmap",{"_index":414,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["table",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":415,"title":{},"body":{"guards/CategoriesGuard.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["target",{"_index":679,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["technologies",{"_index":961,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["tempo",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":989,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:debug",{"_index":992,"title":{},"body":{"index.html":{}}}],["test:develop",{"_index":994,"title":{},"body":{"index.html":{}}}],["tests",{"_index":988,"title":{},"body":{"index.html":{}}}],["text",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textcontentcomponent",{"_index":82,"title":{"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this.$category",{"_index":782,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$mediaselection",{"_index":788,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$meditations",{"_index":784,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.actions$.pipe",{"_index":432,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["this.audioobj.currenttime",{"_index":203,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.load",{"_index":227,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.pause",{"_index":202,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.play",{"_index":201,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.src",{"_index":226,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioservice.initializestream(this.meditation.media",{"_index":678,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.pause",{"_index":675,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.play",{"_index":677,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.seekto(target.value",{"_index":680,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.filtermeditations(meditations",{"_index":791,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.firestore",{"_index":819,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["this.initializeapp",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["this.media",{"_index":276,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediaselection",{"_index":672,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.mediasubject",{"_index":246,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.next(value",{"_index":273,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.value",{"_index":270,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.meditation.imageurl",{"_index":671,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation.media",{"_index":673,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.media",{"_index":670,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.text",{"_index":669,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditationsservice.getmeditationcategories().pipe",{"_index":435,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["this.meditationsservice.getmeditations().pipe",{"_index":806,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["this.modalcontroller.create",{"_index":793,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":683,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.multiple",{"_index":324,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.onplay",{"_index":682,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.platform.ready().then",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quoteservice.getdailyquote().pipe",{"_index":832,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["this.route.snapshot.queryparams",{"_index":781,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.splashscreen.hide",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.state.initializestate($stream",{"_index":206,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.stateservice.$media.pipe",{"_index":649,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.mediatype",{"_index":676,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.playing",{"_index":681,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.reset",{"_index":684,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.statusbar.styledefault",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store",{"_index":785,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.dispatch(loadcategories",{"_index":423,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.dispatch(loadmeditations",{"_index":803,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectcategories",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.store.select(selectcategorybyid(categoryid",{"_index":783,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.select(selectiscategoriesloaded).pipe",{"_index":421,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.select(selectismeditationsloaded).pipe",{"_index":802,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectquote",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.streamobservable(url",{"_index":205,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.streamsubscription",{"_index":274,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.value",{"_index":329,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.valuechange.emit([...selection",{"_index":330,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["through",{"_index":959,"title":{},"body":{"index.html":{}}}],["time",{"_index":294,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timesec",{"_index":292,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timeupdate",{"_index":211,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["title",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["titlecase",{"_index":332,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{}}}],["together",{"_index":1000,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":305,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["toggle(type",{"_index":317,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["toolbar",{"_index":688,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["tr_cw1hcbfay3uzw78i",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["true",{"_index":282,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/QuoteService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":946,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1024,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":585,"title":{},"body":{"interfaces/Meditation.html":{}}}],["types/howler",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["ullamco",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":527,"title":{},"body":{"interfaces/HomeState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":987,"title":{},"body":{"index.html":{}}}],["unt",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":181,"title":{},"body":{"injectables/AudioService.html":{}}}],["url('../../../../../assets/images/mountains.jpg",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["usage",{"_index":967,"title":{},"body":{"index.html":{}}}],["use",{"_index":980,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":953,"title":{},"body":{"index.html":{}}}],["ut",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils",{"_index":262,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["value",{"_index":192,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["valuechange",{"_index":310,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["var",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["variable",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1027,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velit",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["veniam",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["voluptate",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["width",{"_index":333,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["zone.js",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Home\n      \n\n      \n        \n        Meditation\n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                            Meditation            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n// Routes\nimport { AppRoutingModule } from 'app/app-routing.module';\n\n// Components\nimport { AppComponent } from 'app/app.component';\n\n// Environment\nimport { environment } from '@environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    IonicModule.forRoot(),\n    // firebase\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    // store\n    StoreModule.forRoot({}, {}),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: () =>\n      \"import('./modules/home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'meditation',\n    loadChildren: () =>\n      \"import('./modules/meditation/meditation.module').then(\\\n        (m) => m.MeditationModule,\\\n      )\",\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                audioObj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeStream\n                            \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                seekTo\n                            \n                            \n                                    Private\n                                streamObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AudioStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeStream\n                        \n                    \n                \n            \n            \n                \ninitializeStream(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekTo\n                        \n                    \n                \n            \n            \n                \nseekTo(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        streamObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamObservable(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        audioObj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from 'app/modules/meditation/services/audio-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioService {\n  private audioObj = new Audio();\n\n  constructor(private state: AudioStateService) {}\n\n  play(): void {\n    this.audioObj.play();\n  }\n\n  pause(): void {\n    this.audioObj.pause();\n  }\n\n  seekTo(seconds: number): void {\n    this.audioObj.currentTime = seconds;\n  }\n\n  initializeStream(url: string): void {\n    const $stream = this.streamObservable(url);\n    this.state.initializeState($stream);\n  }\n\n  private streamObservable(url: string): Observable {\n    const events = [\n      'ended',\n      'error',\n      'play',\n      'playing',\n      'pause',\n      'timeupdate',\n      'canplay',\n      'loadedmetadata',\n      'loadstart',\n    ];\n\n    const addEvents = (obj: HTMLAudioElement, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.addEventListener(event, handler);\n      });\n    };\n\n    const removeEvents = (obj, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.removeEventListener(event, handler);\n      });\n    };\n\n    return new Observable((observer) => {\n      this.audioObj.src = url;\n      this.audioObj.load();\n      this.audioObj.play();\n\n      const handler = (event: CustomEvent) => observer.next(event);\n      addEvents(this.audioObj, events, handler);\n\n      return () => {\n        this.audioObj.pause();\n        this.audioObj.currentTime = 0;\n\n        removeEvents(this.audioObj, events, handler);\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioStateService.html":{"url":"injectables/AudioStateService.html","title":"injectable - AudioStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                $media\n                            \n                            \n                                    Private\n                                mediaSubject\n                            \n                            \n                                    Private\n                                streamSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeState\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    media\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState($obs: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $obs\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        $media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay())\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mediaSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(INITIAL_MEDIA_STATE)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n\n                \n                    \n                        getmedia()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:24\n                                \n                            \n\n                \n                    \n                        setmedia(value: MediaState)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            MediaState\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n// Utils\nimport { formatTime } from '@meditation/utils/time.utils';\n\n// Constants\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\n\n@Injectable()\nexport class AudioStateService {\n  private streamSubscription: Subscription;\n  private mediaSubject = new BehaviorSubject(INITIAL_MEDIA_STATE);\n\n  readonly $media: Observable = this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay());\n\n  get media(): MediaState {\n    return this.mediaSubject.value;\n  }\n  set media(value: MediaState) {\n    this.mediaSubject.next(value);\n  }\n\n  constructor() {}\n\n  reset(): void {\n    if (this.streamSubscription) {\n      this.streamSubscription.unsubscribe();\n    }\n    this.media = INITIAL_MEDIA_STATE;\n  }\n\n  initializeState($obs: Observable): void {\n    this.streamSubscription = $obs.subscribe((event: CustomEvent) => {\n      const audioObj = event.target as HTMLAudioElement;\n\n      switch (event.type) {\n        case 'canplay':\n          this.media = { ...this.media, canPlay: true };\n          break;\n\n        case 'loadedmetadata':\n          const duration = formatTime(audioObj.duration, 'mm:ss');\n\n          this.media = {\n            ...this.media,\n            duration,\n            durationSec: audioObj.duration,\n            mediaType: 'mp3',\n          };\n          break;\n\n        case 'playing':\n          this.media = { ...this.media, playing: true };\n          break;\n\n        case 'pause':\n          this.media = { ...this.media, playing: false };\n          break;\n\n        case 'timeupdate':\n          const timeSec = audioObj.currentTime;\n          const time = formatTime(audioObj.currentTime, 'mm:ss');\n          this.media = { ...this.media, time, timeSec };\n          break;\n\n        case 'loadstart':\n          this.media = { ...this.media, loadStart: true };\n          break;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsSelectComponent.html":{"url":"components/ButtonsSelectComponent.html","title":"component - ButtonsSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons-select\n            \n\n            \n                styleUrls\n                ./buttons-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./buttons-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                multiple\n                            \n                            \n                                options\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(type: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-buttons-select',\n  templateUrl: './buttons-select.component.html',\n  styleUrls: ['./buttons-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonsSelectComponent {\n  @Input()\n  options: any[] = [];\n\n  @Input()\n  multiple = false;\n\n  @Input()\n  value: any[] = [];\n\n  @Output()\n  valueChange = new EventEmitter();\n\n  constructor() {}\n\n  toggle(type: any): void {\n    const selection = new Set(this.value);\n\n    if (this.multiple) {\n      selection.has(type) ? selection.delete(type) : selection.add(type);\n    } else {\n      selection.clear();\n      selection.add(type);\n    }\n\n    this.value = [...selection];\n    this.valueChange.emit([...selection]);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ option | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./buttons-select.component.scss\n                \n                .selection {\n  width: 168px;\n  padding: 8px;\n\n  &__button {\n    font-size: 12px;\n    width: 70px;\n    height: 30px;\n    box-shadow: #0000001f 0 1px 2px;\n    border-radius: 15px;\n    --background: #fff;\n    --color: #666;\n    --border-width: 2px;\n    --border-style: solid;\n    --border-color: #bebdbd;\n    --background-activated: none;\n    --border-radius: 15px;\n\n    &-selected {\n      --background: #9eb4bb;\n      --color: #fff;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ option | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonsSelectModule.html":{"url":"modules/ButtonsSelectModule.html","title":"module - ButtonsSelectModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonsSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/common/ui-lib/buttons-select/buttons-select.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Components\nimport { ButtonsSelectComponent } from '@buttons-select/components/buttons-select.component';\n\n@NgModule({\n  declarations: [ButtonsSelectComponent],\n  imports: [CommonModule, FlexLayoutModule],\n  exports: [ButtonsSelectComponent],\n})\nexport class ButtonsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/categories/categories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                ./categories.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $categories\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectCategories)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n// Selectors\nimport { selectCategories } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoriesComponent {\n  $categories: Observable = this.store.select(selectCategories);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    Categories\n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./categories.component.scss\n                \n                .title {\n  font-size: 28px;\n  text-align: center;\n  margin-top: 20px;\n  font-weight: 400;\n}\n\nion-content {\n  --padding-top: 20px;\n  --ion-grid-padding: 8px;\n  --ion-grid-column-padding: 8px;\n  --background: url('../../../../../assets/images/mountains.jpg') center / cover;\n\n  ion-col {\n    --ion-card-background: #ddf0fe;\n\n    &:first-child,\n    &:last-child {\n      --ion-card-background: #f9eedb;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Categories                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CategoriesGuard.html":{"url":"guards/CategoriesGuard.html","title":"guard - CategoriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CategoriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/categories.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/categories.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadCategories } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsCategoriesLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class CategoriesGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsCategoriesLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadCategories()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesLoadEffect.html":{"url":"injectables/CategoriesLoadEffect.html","title":"injectable - CategoriesLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/categories-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadCategories,\n  loadCategoriesFailure,\n  loadCategoriesSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class CategoriesLoadEffect {\n  loadCategories$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/category.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Category {\n  id: string;\n  name: string;\n  description: string;\n  imageUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryCardComponent.html":{"url":"components/CategoryCardComponent.html","title":"component - CategoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/category-card/category-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-card\n            \n\n            \n                styleUrls\n                ./category-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryCardComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n    {{ category.name | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./category-card.component.scss\n                \n                .card {\n  height: 245px;\n  width: 145px;\n  margin: auto;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ category.name | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/home/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $quote\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $quote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectQuote)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n// Selectors\nimport { selectQuote } from '@home/store/selectors/home.selector';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent {\n  $quote: Observable = this.store.select(selectQuote);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    {{ $quote | async }}\n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home {\n  height: 100%;\n  background: url('../../../../../assets/images/mountains.jpg');\n  background-size: cover;\n\n  &__quote {\n    font-size: 18px;\n    line-height: 27px;\n    font-style: italic;\n    opacity: 0.8;\n    color: #1f1f1f;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ $quote | async }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            QuoteService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { IonicModule } from '@ionic/angular';\n\n// Routes\nimport { HomePageRoutingModule } from '@home/home-routing.module';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n// Store\nimport { homeFeatureKey, reducers } from '@home/store/reducers/home.state';\nimport { QuoteLoadEffect } from '@home/store/effects/quote-load.effect';\n\n@NgModule({\n  declarations: [HomeComponent],\n  providers: [QuoteService],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(homeFeatureKey, reducers),\n    EffectsModule.forFeature([QuoteLoadEffect]),\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeModuleState.html":{"url":"interfaces/HomeModuleState.html","title":"interface - HomeModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            home\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        home\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        home:         HomeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HomeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { HomeState } from '@home/store/reducers/home.reducer';\n\n// Reducer\nimport { reducer } from '@home/store/reducers/home.reducer';\n\nexport const homeFeatureKey = 'home';\n\nexport interface HomeModuleState {\n  home: HomeState;\n}\n\nexport const reducers = {\n  home: reducer,\n};\n\nexport const selectHomeModuleState =\n  createFeatureSelector(homeFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeState.html":{"url":"interfaces/HomeState.html","title":"interface - HomeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isQuoteError\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoaded\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoading\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\nexport interface HomeState {\n  // data\n  quote: string;\n  // state\n  isQuoteLoading: boolean;\n  isQuoteLoaded: boolean;\n  isQuoteError: boolean;\n}\n\nexport const initialState: HomeState = {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n};\n\nconst homeReducer = createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action);\n\n// Data\nexport const quoteData = (state: HomeState) => state.quote;\n// State\nexport const quoteLoadingState = (state: HomeState) => state.isQuoteLoading;\nexport const quoteLoadedState = (state: HomeState) => state.isQuoteLoaded;\nexport const quoteErrorState = (state: HomeState) => state.isQuoteError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaContentComponent.html":{"url":"components/MediaContentComponent.html","title":"component - MediaContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MediaContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/media-content/media-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-media-content\n            \n\n            \n                styleUrls\n                ./media-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                media\n                            \n                            \n                                meditation\n                            \n                            \n                                seekbarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pauseAudio\n                            \n                            \n                                playAudio\n                            \n                            \n                                seekEnd\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n                \n                    \n                        Type :         MediaState\n\n                    \n                \n                \n                    \n                        Default value : INITIAL_MEDIA_STATE\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekbarValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pauseAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-media-content',\n  templateUrl: './media-content.component.html',\n  styleUrls: ['./media-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaContentComponent {\n  @Input()\n  meditation: Meditation;\n\n  @Input()\n  seekbarValue: number;\n\n  @Input()\n  media: MediaState = INITIAL_MEDIA_STATE;\n\n  @Output()\n  playAudio = new EventEmitter();\n\n  @Output()\n  pauseAudio = new EventEmitter();\n\n  @Output()\n  seekEnd = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n\n      \n    \n\n    \n    \n\n    \n      {{ media.time }}\n      {{ media.duration }}\n    \n  \n\n\n    \n\n    \n                \n                    ./media-content.component.scss\n                \n                .media {\n  padding-bottom: 20px;\n  height: 100%;\n\n  &__image {\n    width: 100%;\n  }\n}\n\n.commands {\n  width: 85%;\n\n  &__play {\n    width: 38px;\n    height: 38px;\n    background-color: #4e6b8c;\n    border-radius: 50%;\n  }\n\n  &__icon {\n    --ionicon-stroke-width: 11px;\n    font-size: 20px;\n    color: #fff;\n  }\n\n  &__range {\n    --knob-size: 14px;\n    --bar-background: #d3dae2;\n    --bar-background-active: #4e6b8c;\n    --bar-height: 3px;\n    --knob-size: 18px;\n    width: 315px;\n    max-height: 32px;\n    padding: 0 7px;\n    width: 100%;\n  }\n\n  &__progress {\n    width: 100%;\n    color: #999da1;\n    font-weight: 500;\n    font-size: 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ media.time }}      {{ media.duration }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MediaContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaState.html":{"url":"interfaces/MediaState.html","title":"interface - MediaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/media.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canPlay\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            durationSec\n                                        \n                                \n                                \n                                        \n                                            loadStart\n                                        \n                                \n                                \n                                        \n                                            mediaType\n                                        \n                                \n                                \n                                        \n                                            playing\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            timeSec\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        durationSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        durationSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadStart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediaType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mediaType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MediaState {\n  canPlay: boolean;\n  duration: string;\n  durationSec: number;\n  time: string;\n  timeSec: number;\n  mediaType: string;\n  loadStart: boolean;\n  playing: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meditation.html":{"url":"interfaces/Meditation.html","title":"interface - Meditation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meditation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/meditation.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Meditation {\n  id: string;\n  categoryId: string;\n  title: string;\n  text: string | null;\n  media: string | null;\n  imageUrl: string | null;\n}\n\nexport const content = {\n  media: 'media',\n  text: 'text',\n} as const;\n\nexport type ContentTypes = typeof content[keyof typeof content];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationHeaderComponent.html":{"url":"components/MeditationHeaderComponent.html","title":"component - MeditationHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-header\n            \n\n            \n                styleUrls\n                ./meditation-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-meditation-header',\n  templateUrl: './meditation-header.component.html',\n  styleUrls: ['./meditation-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationHeaderComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      {{ category.name | titlecase }}\n\n      {{ category.description }}\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-header.component.scss\n                \n                .header {\n  color: #111b22;\n  padding: 45px 25px 25px;\n  height: 270px;\n\n  &__back {\n    font-size: 20px;\n  }\n\n  &__title {\n    font-size: 28px;\n    font-weight: 500;\n  }\n\n  &__description {\n    font-size: 14px;\n    line-height: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ category.name | titlecase }}      {{ category.description }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationItemComponent.html":{"url":"components/MeditationItemComponent.html","title":"component - MeditationItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-item\n            \n\n            \n                styleUrls\n                ./meditation-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n// Models\nimport { content, Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-item',\n  templateUrl: './meditation-item.component.html',\n  styleUrls: ['./meditation-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationItemComponent {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  @Output()\n  selected = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    {{ meditation.title | titlecase }}\n\n    \n      \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-item.component.scss\n                \n                .item {\n  color: #616469;\n  width: 100%;\n  --min-height: 60px;\n\n  &__title {\n    font-size: 14px;\n  }\n\n  &__icon {\n    font-size: 13px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ meditation.title | titlecase }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationModalComponent.html":{"url":"components/MeditationModalComponent.html","title":"component - MeditationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-modal\n            \n\n            \n                styleUrls\n                ./meditation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $seekbarValue\n                            \n                            \n                                content\n                            \n                            \n                                mediaOptions\n                            \n                            \n                                mediaSelection\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                stateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissModal\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMediaSelectionChange\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onSeekEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showButtons\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, stateService: AudioStateService, audioService: AudioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        audioService\n                                                  \n                                                        \n                                                                        AudioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissModal\n                        \n                    \n                \n            \n            \n                \ndismissModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMediaSelectionChange\n                        \n                    \n                \n            \n            \n                \nonMediaSelectionChange(contents: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contents\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeekEnd\n                        \n                    \n                \n            \n            \n                \nonSeekEnd(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $seekbarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModalController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stateService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioStateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showButtons\n                    \n                \n\n                \n                    \n                        getshowButtons()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { distinctUntilChanged, filter, map, pluck } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { AudioService } from '@meditation/services/audio.service';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-modal',\n  templateUrl: './meditation-modal.component.html',\n  styleUrls: ['./meditation-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationModalComponent implements OnInit, OnDestroy {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  mediaOptions: ContentTypes[] = [content.media, content.text];\n  mediaSelection: ContentTypes[];\n\n  $seekbarValue: Observable = this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  );\n\n  get showButtons(): boolean {\n    return !!(\n      this.meditation[content.text] &&\n      (this.meditation[content.media] || this.meditation.imageUrl)\n    );\n  }\n\n  constructor(\n    public modalController: ModalController,\n    public stateService: AudioStateService,\n    private audioService: AudioService,\n  ) {}\n\n  ngOnInit() {\n    this.mediaSelection =\n      this.meditation.media || this.meditation.imageUrl\n        ? [content.media]\n        : [content.text];\n  }\n\n  onMediaSelectionChange(contents: ContentTypes[]): void {\n    this.mediaSelection = contents;\n\n    if (contents[0] === content.text) {\n      this.audioService.pause();\n    }\n  }\n\n  onPlay(): void {\n    if (this.stateService.media.mediaType) {\n      this.audioService.play();\n    } else {\n      this.audioService.initializeStream(this.meditation.media);\n    }\n  }\n\n  onPause(): void {\n    this.audioService.pause();\n  }\n\n  onSeekEnd({ target }): void {\n    this.audioService.seekTo(target.value);\n\n    if (this.stateService.media.playing) {\n      this.onPlay();\n    }\n  }\n\n  dismissModal(): void {\n    this.modalController.dismiss();\n    this.stateService.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.stateService.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ meditation.title }}\n\n    \n      \n    \n  \n\n\n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./meditation-modal.component.scss\n                \n                .header {\n  &__back {\n    font-size: 25px;\n    color: #808289;\n    margin-left: 12px;\n    margin-top: 12px;\n  }\n\n  &__title {\n    margin: 0px 25px 8px;\n    text-align: center;\n    color: #1f1f1f;\n  }\n}\n\nion-toolbar {\n  --background: #e7f4fd;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ meditation.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationModule.html":{"url":"modules/MeditationModule.html","title":"module - MeditationModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesComponent\n                        \n                        \n                            CategoryCardComponent\n                        \n                        \n                            MediaContentComponent\n                        \n                        \n                            MeditationHeaderComponent\n                        \n                        \n                            MeditationItemComponent\n                        \n                        \n                            MeditationModalComponent\n                        \n                        \n                            MeditationsComponent\n                        \n                        \n                            TextContentComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MeditationModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AudioService\n                        \n                        \n                            AudioStateService\n                        \n                        \n                            MeditationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonsSelectModule\n                        \n                        \n                            MeditationRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n// Modules\nimport { MeditationRoutingModule } from '@meditation/meditation-routing.module';\nimport { ButtonsSelectModule } from '@buttons-select/buttons-select.module';\n\n// Services\nimport { AudioService } from '@meditation/services/audio.service';\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/components/meditation-modal/meditation-modal.component';\nimport { TextContentComponent } from '@meditation/components/meditation-modal/text-content/text-content.component';\nimport { MediaContentComponent } from '@meditation/components/meditation-modal/media-content/media-content.component';\nimport { CategoryCardComponent } from '@meditation/components/category-card/category-card.component';\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\nimport { MeditationHeaderComponent } from '@meditation/components/meditation-header/meditation-header.component';\nimport { MeditationItemComponent } from '@meditation/components/meditation-item/meditation-item.component';\n\n// Store\nimport {\n  meditationFeatureKey,\n  reducers,\n} from '@meditation/store/reducers/meditation.state';\n\n// Effects\nimport { MeditationsLoadEffect } from '@meditation/store/effects/meditations-load.effect';\nimport { CategoriesLoadEffect } from '@meditation/store/effects/categories-load.effect';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MeditationRoutingModule,\n    ButtonsSelectModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(meditationFeatureKey, reducers),\n    EffectsModule.forFeature([MeditationsLoadEffect, CategoriesLoadEffect]),\n  ],\n  declarations: [\n    MeditationsComponent,\n    CategoriesComponent,\n    MediaContentComponent,\n    TextContentComponent,\n    MeditationModalComponent,\n    CategoryCardComponent,\n    MeditationHeaderComponent,\n    MeditationItemComponent,\n  ],\n  entryComponents: [MeditationModalComponent],\n  providers: [\n    AudioService,\n    AudioStateService,\n    MeditationsService,\n    MeditationsGuard,\n    CategoriesGuard,\n  ],\n})\nexport class MeditationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationModuleState.html":{"url":"interfaces/MeditationModuleState.html","title":"interface - MeditationModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            meditation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        meditation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditation:         MeditationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MeditationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { MeditationState } from '@meditation/store/reducers/meditation.reducer';\n\n// Reducers\nimport { reducer } from '@meditation/store/reducers/meditation.reducer';\n\nexport const meditationFeatureKey = 'meditation';\n\nexport interface MeditationModuleState {\n  meditation: MeditationState;\n}\n\nexport const reducers = {\n  meditation: reducer,\n};\n\nexport const selectMeditationModuleState =\n  createFeatureSelector(meditationFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationRoutingModule.html":{"url":"modules/MeditationRoutingModule.html","title":"module - MeditationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'categories', pathMatch: 'full' },\n  {\n    path: 'categories',\n    component: CategoriesComponent,\n    canActivate: [CategoriesGuard],\n  },\n  {\n    path: 'meditations',\n    component: MeditationsComponent,\n    canActivate: [MeditationsGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MeditationRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationState.html":{"url":"interfaces/MeditationState.html","title":"interface - MeditationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            isCategoriesError\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoaded\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoading\n                                        \n                                \n                                \n                                        \n                                            isMeditationsError\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoaded\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoading\n                                        \n                                \n                                \n                                        \n                                            meditations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         Category[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meditations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditations:         Meditation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meditation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadCategoriesSuccess,\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n  loadCategories,\n  loadCategoriesFailure,\n} from '@meditation/store/actions/meditation.actions';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\nexport interface MeditationState {\n  // data\n  meditations: Meditation[];\n  categories: Category[];\n  // state\n  isCategoriesLoading: boolean;\n  isCategoriesLoaded: boolean;\n  isCategoriesError: boolean;\n  isMeditationsLoading: boolean;\n  isMeditationsLoaded: boolean;\n  isMeditationsError: boolean;\n}\n\nexport const initialState: MeditationState = {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n};\n\nconst meditationReducer = createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action);\n\n// Data\nexport const meditationsData = (state: MeditationState) => state.meditations;\nexport const categoriesData = (state: MeditationState) => state.categories;\n// State\nexport const categoriesLoadingState = (state: MeditationState) =>\n  state.isCategoriesLoading;\nexport const categoriesLoadedState = (state: MeditationState) =>\n  state.isCategoriesLoaded;\nexport const categoriesErrorState = (state: MeditationState) =>\n  state.isCategoriesError;\nexport const meditationsLoadingState = (state: MeditationState) =>\n  state.isMeditationsLoading;\nexport const meditationsLoadedState = (state: MeditationState) =>\n  state.isMeditationsLoaded;\nexport const meditationsErrorState = (state: MeditationState) =>\n  state.isMeditationsError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationsComponent.html":{"url":"components/MeditationsComponent.html","title":"component - MeditationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/meditations/meditations.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditations\n            \n\n            \n                styleUrls\n                ./meditations.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditations.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $category\n                            \n                            \n                                $mediaSelection\n                            \n                            \n                                $meditations\n                            \n                            \n                                mediaOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterMeditations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, route: ActivatedRoute, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterMeditations\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterMeditations(meditations: Meditation[], selectedMedia: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditations\n                                    \n                                                Meditation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedMedia\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Meditation[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentModal(meditation: Meditation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditation\n                                    \n                                                Meditation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $meditations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { selectCategoryById } from './../../store/selectors/meditation.selector';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/components/meditation-modal/meditation-modal.component';\n\n// Selectors\nimport { selectMeditationsByCategoryId } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-meditations',\n  templateUrl: './meditations.component.html',\n  styleUrls: ['./meditations.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationsComponent implements OnInit {\n  mediaOptions = [content.media, content.text];\n\n  $mediaSelection = new BehaviorSubject([]);\n  $category: Observable;\n  $meditations: Observable;\n\n  constructor(\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private store: Store,\n  ) {}\n\n  ngOnInit(): void {\n    const { categoryId } = this.route.snapshot.queryParams;\n\n    this.$category = this.store.select(selectCategoryById(categoryId));\n\n    this.$meditations = combineLatest([\n      this.store\n        .select(selectMeditationsByCategoryId(categoryId))\n        .pipe(filter((meditations) => meditations !== null)),\n      this.$mediaSelection,\n    ]).pipe(\n      map(([meditations, selectedMedia]: [Meditation[], ContentTypes[]]) =>\n        this.filterMeditations(meditations, selectedMedia),\n      ),\n    );\n  }\n\n  async presentModal(meditation: Meditation): Promise {\n    const modal = await this.modalController.create({\n      component: MeditationModalComponent,\n      componentProps: { meditation },\n    });\n\n    await modal.present();\n  }\n\n  private filterMeditations(\n    meditations: Meditation[],\n    selectedMedia: ContentTypes[],\n  ): Meditation[] {\n    return meditations.filter((meditation: Meditation) => {\n      for (const media of selectedMedia) {\n        if (meditation[media] === undefined || meditation[media] === null) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./meditations.component.scss\n                \n                ion-header {\n  background: #f9eedb;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MeditationsGuard.html":{"url":"guards/MeditationsGuard.html","title":"guard - MeditationsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MeditationsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/meditations.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/meditations.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadMeditations } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsMeditationsLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class MeditationsGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsMeditationsLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadMeditations()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsLoadEffect.html":{"url":"injectables/MeditationsLoadEffect.html","title":"injectable - MeditationsLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/meditations-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadMeditations$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Injectable()\nexport class MeditationsLoadEffect {\n  loadMeditations$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsService.html":{"url":"injectables/MeditationsService.html","title":"injectable - MeditationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/meditations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMeditationCategories\n                            \n                            \n                                getMeditations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/meditations.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditationCategories\n                        \n                    \n                \n            \n            \n                \ngetMeditationCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditations\n                        \n                    \n                \n            \n            \n                \ngetMeditations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class MeditationsService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getMeditationCategories(): Observable {\n    return this.firestore\n      .collection('meditation_categories')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n\n  getMeditations(): Observable {\n    return this.firestore\n      .collection('meditations')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quote.html":{"url":"interfaces/Quote.html","title":"interface - Quote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/models/quote.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Quote {\n  content: string;\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteLoadEffect.html":{"url":"injectables/QuoteLoadEffect.html","title":"injectable - QuoteLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/effects/quote-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadQuote$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngrxOnInitEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, quoteService: QuoteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quoteService\n                                                  \n                                                        \n                                                                        QuoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngrxOnInitEffects\n                        \n                    \n                \n            \n            \n                \nngrxOnInitEffects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/store/effects/quote-load.effect.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Action\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuote$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n@Injectable()\nexport class QuoteLoadEffect implements OnInitEffects {\n  loadQuote$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(private actions$: Actions, private quoteService: QuoteService) {}\n\n  ngrxOnInitEffects(): Action {\n    return loadQuote();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteService.html":{"url":"injectables/QuoteService.html","title":"injectable - QuoteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/services/quote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDailyQuote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/services/quote.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDailyQuote\n                        \n                    \n                \n            \n            \n                \ngetDailyQuote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/services/quote.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  CollectionReference,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Quote } from '@home/models/quote.model';\n\n@Injectable()\nexport class QuoteService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getDailyQuote(): Observable {\n    return this.firestore\n      .collection('quotes', (ref: CollectionReference) =>\n        ref.where('current', '==', true),\n      )\n      .get()\n      .pipe(\n        map(\n          (snapshot: QuerySnapshot) =>\n            snapshot.docs && snapshot.docs[0].data(),\n        ),\n        map((quote: Quote) => quote.content),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextContentComponent.html":{"url":"components/TextContentComponent.html","title":"component - TextContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/text-content/text-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-content\n            \n\n            \n                styleUrls\n                ./text-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/text-content/text-content.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/text-content/text-content.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-content',\n  templateUrl: './text-content.component.html',\n  styleUrls: ['./text-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextContentComponent {\n  @Input()\n  text: string;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n    \n                \n                    ./text-content.component.scss\n                \n                .text {\n  padding: 16px 32px;\n  color: #1f1f1f;\n\n  &__content {\n    text-align: justify;\n    font-size: 14px;\n    line-height: 19px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n            \n            component\n            ButtonsSelectComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/home/mocks/quote.mock.ts\n            \n            variable\n            quoteMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/models/quote.model.ts\n            \n            interface\n            Quote\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/services/quote.service.ts\n            \n            injectable\n            QuoteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/effects/quote-load.effect.ts\n            \n            injectable\n            QuoteLoadEffect\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            interface\n            HomeState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            homeReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            interface\n            HomeModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            homeFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            selectHomeModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectHomeState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuoteHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/category-card/category-card.component.ts\n            \n            component\n            CategoryCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/media-content/media-content.component.ts\n            \n            component\n            MediaContentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n            \n            component\n            MeditationHeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n            \n            component\n            MeditationItemComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/text-content/text-content.component.ts\n            \n            component\n            TextContentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/constants/media.constants.ts\n            \n            variable\n            INITIAL_MEDIA_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n            guard\n            CategoriesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n            guard\n            MeditationsGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/category.mock.ts\n            \n            variable\n            categoryMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/meditation.mock.ts\n            \n            variable\n            meditationMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/category.model.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/media.model.ts\n            \n            interface\n            MediaState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            interface\n            Meditation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            variable\n            content\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts\n            \n            component\n            MeditationModalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/meditations/meditations.component.ts\n            \n            component\n            MeditationsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio-state.service.ts\n            \n            injectable\n            AudioStateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio.service.ts\n            \n            injectable\n            AudioService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/meditations.service.ts\n            \n            injectable\n            MeditationsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/categories-load.effect.ts\n            \n            injectable\n            CategoriesLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/meditations-load.effect.ts\n            \n            injectable\n            MeditationsLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            interface\n            MeditationState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            interface\n            MeditationModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            meditationFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            selectMeditationModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoriesHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoryById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsByCategoryId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/utils/time.utils.ts\n            \n            variable\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^12.2.9\n        \n            @angular/common : ~12.1.1\n        \n            @angular/core : ~12.1.1\n        \n            @angular/fire : ~7.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~12.1.1\n        \n            @angular/platform-browser : ~12.1.1\n        \n            @angular/platform-browser-dynamic : ~12.1.1\n        \n            @angular/router : ~12.1.1\n        \n            @capacitor/android : 3.2.5\n        \n            @capacitor/app : 1.0.5\n        \n            @capacitor/core : 3.2.5\n        \n            @capacitor/haptics : 1.1.2\n        \n            @capacitor/ios : 3.2.5\n        \n            @capacitor/keyboard : 1.1.2\n        \n            @capacitor/status-bar : 1.0.5\n        \n            @ionic-native/core : ^5.36.0\n        \n            @ionic-native/splash-screen : ^5.36.0\n        \n            @ionic-native/status-bar : ^5.36.0\n        \n            @ionic/angular : ^5.5.2\n        \n            @ngrx/effects : ^12.4.0\n        \n            @ngrx/store : ^12.4.0\n        \n            @ngrx/store-devtools : ^12.4.0\n        \n            @types/howler : ^2.2.4\n        \n            core-js : ^3.18.1\n        \n            firebase : ^9.1.1\n        \n            globalthis : ^1.0.2\n        \n            howler : ^2.2.3\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIntroduction\nThis is a personal project and a base for a mobile application. It consists of two main functionalities: a Home page, that shows a motivational daily quote; a Meditation page, where the user can choose a meditation category, filter the meditations by type, and interact with the media in the modal that opens. Every practice can guide the user through text contents, audio and images.\nTechnologies\n\nIonic\nAngular\nFirebase\nCypress\nStorybook\nCompodoc\n\nInstallation and usage\nDependencies\nRun npm install to install all the required dependencies.\nDevelopment server\nThe app can be run in the browser or in Android and iOS devices / simulators. To open it in the browser, simply use npm run start\nTo open it in mobile devices, make sure you have all the prerequisites, from the Ionic documentation for Android and iOS and then use npm run open:ios or npm run open:android\nUnit Tests\nTo run unit tests, use npm run test.\nTo run unit tests in debug mode, use npm run test:debug\nTo run unit tests in dev mode, use npm run test:develop\nE2E Tests\nTo open Cypress e2e tests app, use npm run cypress:open\nLinting\nLinting is performed by ESLint together with Prettier and eslint-config-prettier.\nRun npm run lint to lint the project, or npm run lint:fix to run Prettier automatically.\nStorybook\nTo open Storybook, use npm run storybook.\nTo build Stories, use npm run storybook:build.\nCompodoc\nTo open Compodoc, use npm run compodoc.\nTo geneate the documentation json, use npm run docs:json.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ButtonsSelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContentTypes   (src/.../meditation.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n    \n        \n            \n                \n                    \n                    ContentTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            categoriesData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoryMock   (src/.../category.mock.ts)\n                        \n                        \n                            content   (src/.../meditation.model.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            formatTime   (src/.../time.utils.ts)\n                        \n                        \n                            homeFeatureKey   (src/.../home.state.ts)\n                        \n                        \n                            homeReducer   (src/.../home.reducer.ts)\n                        \n                        \n                            INITIAL_MEDIA_STATE   (src/.../media.constants.ts)\n                        \n                        \n                            initialState   (src/.../home.reducer.ts)\n                        \n                        \n                            initialState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            loadCategories   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditations   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadQuote   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteFailure   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteSuccess   (src/.../home.actions.ts)\n                        \n                        \n                            meditationFeatureKey   (src/.../meditation.state.ts)\n                        \n                        \n                            meditationMock   (src/.../meditation.mock.ts)\n                        \n                        \n                            meditationReducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            quoteData   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteErrorState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadedState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadingState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteMock   (src/.../quote.mock.ts)\n                        \n                        \n                            reducer   (src/.../home.reducer.ts)\n                        \n                        \n                            reducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            reducers   (src/.../home.state.ts)\n                        \n                        \n                            reducers   (src/.../meditation.state.ts)\n                        \n                        \n                            selectCategories   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoriesHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoryById   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectHomeModuleState   (src/.../home.state.ts)\n                        \n                        \n                            selectHomeState   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsQuoteLoaded   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsQuoteLoading   (src/.../home.selector.ts)\n                        \n                        \n                            selectMeditationModuleState   (src/.../meditation.state.ts)\n                        \n                        \n                            selectMeditations   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsByCategoryId   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationState   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectQuote   (src/.../home.selector.ts)\n                        \n                        \n                            selectQuoteHasError   (src/.../home.selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/store/reducers/meditation.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoriesData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.categories\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeditationState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.meditations\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/category.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoryMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'categoryId',\n  name: 'Category Name',\n  description: 'Category Description',\n  imageUrl: 'http://domain.com',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  media: 'media',\n  text: 'text',\n} as const\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/utils/time.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (time: number, format: string): string =>\n  moment.utc(time * 1000).format(format)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  home: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHomeModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(homeFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HomeState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.quote\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/constants/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_MEDIA_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  canPlay: false,\n  duration: '00:00',\n  durationSec: 0,\n  time: '00:00',\n  timeSec: 0,\n  mediaType: '',\n  loadStart: false,\n  playing: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/actions/meditation.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Categories Page] Load Categories',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Meditations Page] Load Meditations',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/actions/home.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home | Effects Init] Load Quote')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/reducers/meditation.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'meditation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  meditation: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(meditationFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/meditation.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'id',\n  categoryId: 'categoryId',\n  title: 'Meditation title',\n  text: `\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempo\n  r incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \n  nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n  Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n  eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, s\n  unt in culpa qui officia deserunt mollit anim id est laborum.\n  `,\n  media: 'https://domain.com',\n  imageUrl: 'https://picsum.photos/seed/picsum/400/600',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/mocks/quote.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        quoteMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quote\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'Test quote',\n  current: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/selectors/meditation.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoriesHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoryById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectCategories,\n    (categories: Category[]) =>\n      categories &&\n      categories.find((category: Category) => category.id === categoryId),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsByCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectMeditations,\n    (meditations: Meditation[]) =>\n      meditations &&\n      meditations.filter(\n        (meditation: Meditation) => meditation.categoryId === categoryId,\n      ),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationModuleState,\n  (state: MeditationModuleState) => state.meditation,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/selectors/home.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectHomeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeModuleState,\n  (state: HomeModuleState) => state.home,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectHomeState, quoteData)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuoteHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteErrorState,\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
