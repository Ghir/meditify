var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.53,1,1.035]],["body/components/AppComponent.html",[0,0.821,1,1.727,2,1.16,3,0.192,4,0.192,5,1.32,6,1.32,7,1.32,8,1.32,9,0.164,10,2.847,11,1.32,12,2.657,13,2.657,14,3.914,15,1.814,16,5.275,17,1.814,18,4.616,19,0.311,20,1.814,21,5.681,22,1.019,23,3.358,24,6.154,25,5.344,26,5.344,27,1.019,28,3.358,29,1.021,30,0.025,31,1.018,32,0.311,33,1.021,34,3.358,35,1.32,36,1.891,37,0.527,38,0.412,39,1.748,40,3.451,41,2.51,42,2.847,43,2.51,44,2.847,45,0.192,46,0.447,47,2.548,48,3.358,49,3.358,50,3.358,51,3.358,52,2.829,53,1.315,54,1.32,55,1.814,56,1.814,57,1.32,58,2.233,59,1.32,60,1.32,61,1.021,62,1.159,63,1.32,64,0.959,65,1.32,66,1.021,67,0.844,68,1.32,69,0.959,70,1.32,71,1.021,72,1.088,73,1.32,74,1.021,75,1.32,76,1.021,77,1.32,78,1.021,79,1.32,80,0.959,81,1.32,82,1.021,83,1.159,84,1.021,85,1.32,86,1.32,87,0.016,88,0.016]],["title/modules/AppModule.html",[89,1.771,90,2.289]],["body/modules/AppModule.html",[1,2.053,2,0.875,3,0.199,4,0.199,9,0.17,25,4.011,26,4.011,30,0.025,37,0.637,38,0.427,39,1.811,40,3.537,41,2.602,42,2.951,43,2.602,44,2.951,45,0.199,46,0.464,87,0.016,88,0.016,90,4.416,91,1.462,92,2.462,93,2.951,94,2.951,95,2.951,96,2.951,97,3.812,98,2.899,99,1.96,100,2.133,101,3.481,102,3.182,103,2.462,104,4.731,105,4.731,106,3.481,107,2.462,108,4.731,109,2.951,110,2.602,111,4.731,112,1.682,113,4.731,114,2.602,115,3.481,116,3.481,117,2.602,118,1.533,119,3.481,120,2.951,121,2.602,122,1.811,123,2.602,124,4.731,125,1.682,126,3.481,127,2.602,128,3.481,129,3.537,130,3.481,131,3.481,132,2.602,133,3.481,134,1.462,135,3.481,136,3.481,137,3.481,138,3.481,139,3.481,140,3.481,141,3.481,142,2.602,143,3.481,144,3.481]],["title/modules/AppRoutingModule.html",[89,1.771,97,2.086]],["body/modules/AppRoutingModule.html",[3,0.255,4,0.255,9,0.218,30,0.025,37,0.517,38,0.548,45,0.255,46,0.596,52,3.413,53,0.987,87,0.019,88,0.019,91,1.878,97,3.413,103,2.327,107,2.898,112,2.16,125,2.93,145,4.471,146,3.342,147,5.569,148,4.163,149,1.544,150,4.534,151,3.791,152,3.791,153,3.791,154,5.569,155,4.471,156,4.471,157,4.471,158,4.471,159,4.471,160,4.471,161,4.471,162,3.007]],["title/injectables/AudioService.html",[163,0.912,164,1.916]],["body/injectables/AudioService.html",[3,0.17,4,0.17,9,0.146,14,2.527,19,0.276,20,1.669,22,0.658,27,1.346,29,1.64,30,0.025,31,1.041,32,0.5,33,1.64,35,2.24,36,3.509,37,0.459,38,0.365,45,0.17,46,0.397,47,2.862,87,0.015,88,0.015,149,1.968,163,1.138,164,2.391,165,1.44,166,2.527,167,1.067,168,4.194,169,4.247,170,4.832,171,5.7,172,4.247,173,4.247,174,2.981,175,2.806,176,4.247,177,2.857,178,4.247,179,2.894,180,2.981,181,4.948,182,2.981,183,2.981,184,4.247,185,3.032,186,2.981,187,4.247,188,4.247,189,2.981,190,2.079,191,1.029,192,1.029,193,2.575,194,4.247,195,0.966,196,1.551,197,2.981,198,2.228,199,2.981,200,1.44,201,4.247,202,4.247,203,4.247,204,2.981,205,2.981,206,2.981,207,4.948,208,2.981,209,2.981,210,2.005,211,2.527,212,2.005,213,2.527,214,2.005,215,2.981,216,4.247,217,2.527,218,4.247,219,6.097,220,4.247,221,2.981,222,2.981,223,2.981,224,1.911,225,2.981,226,2.981,227,2.981,228,2.981,229,2.527,230,2.981,231,2.981,232,1.827,233,2.981]],["title/injectables/AudioStateService.html",[163,0.912,175,1.771]],["body/injectables/AudioStateService.html",[3,0.16,4,0.16,9,0.137,19,0.26,20,1.598,22,1.056,27,1.354,29,1.236,30,0.025,31,0.785,32,0.486,33,1.236,35,1.879,36,3.134,37,0.538,38,0.344,45,0.16,46,0.374,47,2.804,72,1.88,87,0.014,88,0.014,99,2.952,149,1.81,163,1.089,165,1.355,167,1.022,168,2.378,170,2.378,175,2.116,190,2.439,191,1.404,192,1.651,193,2.116,195,0.909,210,3.216,211,2.378,212,2.735,213,2.378,214,2.735,217,2.378,224,1.262,229,2.378,234,5.298,235,2.378,236,4.782,237,4.782,238,4.782,239,4.066,240,3.447,241,2.805,242,4.066,243,2.805,244,2.805,245,2.805,246,4.066,247,4.066,248,4.066,249,2.805,250,4.066,251,2.805,252,4.782,253,2.805,254,2.805,255,2.805,256,2.805,257,3.411,258,2.805,259,2.378,260,2.805,261,1.179,262,2.805,263,2.097,264,2.805,265,2.805,266,2.735,267,2.378,268,0.969,269,2.378,270,2.805,271,2.805,272,2.805,273,2.805,274,4.066,275,2.805,276,6.559,277,2.805,278,2.805,279,2.805,280,2.805,281,5.804,282,2.692,283,5.804,284,3.039,285,2.805,286,4.066,287,2.097,288,2.805,289,2.097,290,2.805,291,1.58,292,3.039,293,2.805,294,3.039,295,2.805]],["title/components/ButtonsSelectComponent.html",[0,0.53,61,1.035]],["body/components/ButtonsSelectComponent.html",[0,0.72,1,0.806,2,0.98,3,0.151,4,0.151,5,1.041,6,1.041,7,1.041,8,1.041,9,0.129,11,1.041,12,2.551,13,2.551,15,1.532,17,1.532,19,0.246,20,1.532,22,1.021,27,1.256,29,0.806,30,0.025,31,0.893,32,0.528,33,0.806,35,1.041,36,2.195,37,0.246,38,0.325,45,0.151,46,0.353,53,1.021,54,1.041,55,1.532,56,1.532,57,1.041,58,2.006,59,1.041,60,1.041,61,1.552,62,2.083,63,1.041,64,0.756,65,1.041,66,0.806,67,0.666,68,1.041,69,0.756,70,1.041,71,0.806,72,0.858,73,1.041,74,0.806,75,1.041,76,0.806,77,1.041,78,0.806,79,1.041,80,0.756,81,1.041,82,0.806,83,0.915,84,0.806,85,1.041,86,1.041,87,0.014,88,0.014,149,0.915,191,1.597,192,1.964,193,2.029,232,1.624,291,2.195,296,4.396,297,4.396,298,4.396,299,2.246,300,1.638,301,1.638,302,3.899,303,4.627,304,3.899,305,3.899,306,2.029,307,4.627,308,4.627,309,2.915,310,4.627,311,3.899,312,1.28,313,2.649,314,2.649,315,2.649,316,3.459,317,3.899,318,2.649,319,1.113,320,2.656,321,2.915,322,4.627,323,2.649,324,2.649,325,2.649,326,2.649,327,3.899,328,2.649,329,2.649,330,2.649,331,3.899,332,2.915,333,3.112,334,2.649,335,1.624,336,1.98,337,2.649,338,1.28,339,1.28,340,2.246,341,2.649,342,1.379,343,2.649,344,2.649,345,2.649,346,2.649,347,2.649,348,3.899,349,4.611,350,3.306,351,3.306,352,2.836,353,3.306,354,2.408,355,2.649,356,2.246,357,2.649,358,2.649,359,2.649,360,2.246,361,2.246,362,2.649]],["title/modules/ButtonsSelectModule.html",[89,1.771,363,2.086]],["body/modules/ButtonsSelectModule.html",[2,1.115,3,0.253,4,0.253,9,0.217,30,0.025,37,0.587,38,0.544,45,0.253,46,0.591,61,2.127,62,1.531,87,0.019,88,0.019,91,1.863,92,2.883,98,3.395,99,2.497,100,2.718,102,3.727,103,2.308,107,2.883,162,3.727,296,3.315,297,3.315,298,3.315,363,4.132,364,3.759,365,3.759,366,3.759,367,3.759,368,4.434,369,4.142,370,2.983,371,4.142,372,2.983,373,2.983,374,4.434]],["title/components/CategoriesComponent.html",[0,0.53,64,0.972]],["body/components/CategoriesComponent.html",[0,0.786,1,0.939,2,1.095,3,0.176,4,0.176,5,1.214,6,1.214,7,1.214,8,1.214,9,0.151,11,1.214,12,2.621,13,2.621,15,1.712,17,1.712,19,0.286,22,0.682,27,0.962,29,0.939,30,0.025,31,0.974,32,0.404,33,0.939,37,0.536,38,0.379,45,0.176,46,0.411,53,1.114,54,1.214,55,1.712,56,1.712,57,1.214,58,2.153,59,1.214,60,1.214,61,0.939,62,1.066,63,1.214,64,1.564,65,1.214,66,0.939,67,1.095,68,1.214,69,0.882,70,1.214,71,0.939,72,1.001,73,1.214,74,0.939,75,1.214,76,0.939,77,1.214,78,0.939,79,1.214,80,0.882,81,1.214,82,0.939,83,1.504,84,1.324,85,1.214,86,1.214,87,0.015,88,0.015,118,1.001,134,2.518,167,1.095,190,2.12,191,1.066,192,1.066,195,1.001,200,1.492,268,1.066,300,1.83,301,1.83,319,1.298,335,3.092,336,3.256,338,2.104,339,1.492,352,3.092,375,2.619,376,3.775,377,5.045,378,4.356,379,2.078,380,4.356,381,4.356,382,1.608,383,1.893,384,2.309,385,2.078,386,2.309,387,2.619,388,2.078,389,3.256,390,2.078,391,3.693,392,3.256,393,2.309,394,3.089,395,5.082,396,4.356,397,3.089,398,2.619,399,2.619,400,3.089,401,3.693,402,3.089,403,3.089,404,4.356,405,3.089,406,2.619]],["title/guards/CategoriesGuard.html",[407,2.544,408,2.086]],["body/guards/CategoriesGuard.html",[3,0.237,4,0.237,9,0.203,19,0.385,20,2.088,22,0.916,27,1.173,29,1.262,30,0.025,31,0.801,32,0.385,33,1.262,35,1.631,37,0.616,38,0.509,45,0.237,46,0.553,87,0.019,88,0.019,112,2.005,118,1.344,134,2.745,163,1.423,190,2.462,195,1.344,200,2.005,224,1.867,261,1.744,312,2.005,379,2.792,383,2.543,385,2.792,408,3.256,409,2.543,410,3.518,411,4.885,412,4.15,413,4.15,414,4.505,415,3.972,416,2.16,417,2.543,418,2.543,419,3.102,420,2.543,421,4.15,422,4.505,423,4.15,424,3.518]],["title/injectables/CategoriesLoadEffect.html",[163,0.912,425,2.289]],["body/injectables/CategoriesLoadEffect.html",[3,0.215,4,0.215,9,0.183,19,0.348,22,1.099,27,1.099,29,1.142,30,0.025,31,0.725,32,0.348,33,1.142,37,0.602,38,0.46,45,0.215,46,0.5,47,2.405,67,1.404,87,0.017,88,0.017,122,1.954,163,1.334,165,1.814,167,1.251,191,1.297,192,1.297,195,1.217,196,1.954,261,1.578,268,1.297,376,3.051,382,1.954,416,3.376,417,3.644,418,2.301,425,3.349,426,4.735,427,2.526,428,2.807,429,3.376,430,3.184,431,4.175,432,3.721,433,4.979,434,4.175,435,4.979,436,4.979,437,3.756,438,3.721,439,4.979,440,3.184,441,2.807,442,1.954,443,2.807,444,2.526,445,2.807]],["title/interfaces/Category.html",[67,0.855,446,0.912]],["body/interfaces/Category.html",[3,0.271,4,0.271,9,0.232,19,0.44,30,0.024,31,1.251,32,0.601,45,0.271,67,1.452,87,0.02,88,0.02,167,1.452,179,3.175,446,1.272,447,2.136,448,4.024,449,5.496,450,4.846,451,4.846]],["title/components/CategoryCardComponent.html",[0,0.53,66,1.035]],["body/components/CategoryCardComponent.html",[0,0.829,1,1.038,2,1.174,3,0.195,4,0.195,5,1.342,6,1.342,7,1.342,8,1.342,9,0.167,11,1.342,12,2.663,13,2.663,15,1.835,17,1.835,19,0.317,22,1.175,27,1.031,30,0.025,31,0.901,32,0.317,37,0.433,38,0.419,45,0.195,46,0.455,53,1.175,54,1.342,55,1.835,56,1.835,57,1.342,58,2.248,59,1.342,60,1.342,61,1.038,62,1.179,63,1.342,64,0.975,65,1.342,66,1.74,67,1.713,68,1.342,69,0.975,70,1.342,71,1.038,72,1.106,73,1.342,74,1.038,75,1.342,76,1.038,77,1.342,78,1.038,79,1.342,80,0.975,81,1.342,82,1.038,83,1.179,84,1.038,85,1.342,86,1.342,87,0.016,88,0.016,268,1.179,300,1.962,301,1.962,306,2.43,319,1.435,320,2.43,332,3.491,333,2.297,342,1.777,360,2.895,382,1.777,390,2.297,401,4.512,452,4.512,453,3.978,454,2.895,455,5.322,456,4.67,457,4.67,458,3.959,459,3.415,460,3.415,461,3.415,462,3.415,463,3.415]],["title/components/HomeComponent.html",[0,0.53,69,0.972]],["body/components/HomeComponent.html",[0,0.806,1,0.984,2,1.131,3,0.185,4,0.185,5,1.272,6,1.272,7,1.272,8,1.272,9,0.158,11,1.272,12,2.641,13,2.641,15,1.769,17,1.769,19,0.3,22,0.715,27,0.994,29,0.984,30,0.025,31,0.999,32,0.417,33,0.984,37,0.519,38,0.397,45,0.185,46,0.431,52,3.171,53,1.142,54,1.272,55,1.769,56,1.769,57,1.272,58,2.198,59,1.272,60,1.272,61,0.984,62,1.118,63,1.272,64,0.924,65,1.272,66,0.984,67,0.814,68,1.272,69,1.596,70,1.272,71,0.984,72,1.049,73,1.272,74,0.984,75,1.272,76,0.984,77,1.272,78,0.984,79,1.272,80,0.924,81,1.272,82,0.984,83,1.554,84,0.984,85,1.272,86,1.272,87,0.016,88,0.016,118,1.049,134,2.556,167,1.131,190,2.174,191,1.118,192,1.118,195,1.049,200,1.564,300,1.891,301,1.891,319,1.36,338,2.174,339,2.174,342,2.342,352,2.758,354,1.685,356,2.745,379,2.177,383,1.984,388,2.177,389,2.42,398,2.745,399,2.745,464,2.745,465,5.174,466,4.501,467,2.839,468,4.501,469,4.501,470,2.42,471,3.237,472,3.816,473,2.42,474,3.237,475,2.745,476,2.42,477,3.237,478,3.237,479,3.237,480,3.237,481,2.42]],["title/modules/HomeModule.html",[89,1.771,482,2.289]],["body/modules/HomeModule.html",[2,0.951,3,0.216,4,0.216,9,0.185,30,0.025,37,0.634,38,0.464,39,1.968,45,0.216,46,0.504,69,1.819,87,0.017,88,0.017,91,1.589,92,2.603,98,3.065,99,2.129,100,2.318,102,3.364,103,2.603,107,2.603,117,2.827,118,1.225,121,2.827,122,1.968,123,3.739,125,1.827,127,2.827,134,2.101,142,3.739,196,1.968,369,3.739,370,2.544,371,3.739,372,2.544,373,2.544,482,4.534,483,3.206,484,3.206,485,3.206,486,3.206,487,3.905,488,3.587,489,3.782,490,4.24,491,2.827,492,3.782,493,3.206,494,3.206,495,2.544,496,2.816,497,3.782,498,2.544,499,3.782,500,3.206,501,3.782,502,3.782]],["title/interfaces/HomeModuleState.html",[446,0.912,503,2.289]],["body/interfaces/HomeModuleState.html",[3,0.263,4,0.263,9,0.225,19,0.428,30,0.025,32,0.428,37,0.57,45,0.367,52,4.112,87,0.02,88,0.02,118,1.494,134,1.937,149,2.123,167,1.427,446,1.235,447,2.075,495,3.102,496,2.596,503,3.818,504,3.447,505,3.933,506,3.909,507,5.677,508,3.463,509,3.447,510,3.909]],["title/modules/HomePageRoutingModule.html",[89,1.771,487,2.086]],["body/modules/HomePageRoutingModule.html",[0,0.746,2,1.204,3,0.274,4,0.274,9,0.234,30,0.025,37,0.58,38,0.587,45,0.274,46,0.638,69,1.658,87,0.02,88,0.02,91,2.012,103,2.492,107,3.023,112,2.313,125,3.021,146,3.58,148,4.342,149,1.653,150,3.58,162,3.221,487,3.56,493,4.06,511,4.789,512,4.06]],["title/interfaces/HomeState.html",[446,0.912,505,2.086]],["body/interfaces/HomeState.html",[3,0.193,4,0.193,9,0.165,19,0.313,30,0.025,32,0.528,37,0.429,45,0.36,87,0.016,88,0.016,118,1.092,149,2.179,167,1.164,177,4.577,179,2.379,282,2.977,291,3.672,312,3.15,416,1.755,446,0.903,447,1.517,467,3.049,505,4.083,508,1.899,513,2.521,514,5.449,515,5.449,516,5.449,517,3.828,518,3.461,519,3.114,520,3.114,521,3.114,522,2.859,523,3.952,524,3.114,525,2.067,526,2.521,527,2.067,528,2.859,529,2.521,530,2.859,531,2.521,532,2.859,533,2.521,534,2.859,535,2.521,536,2.859]],["title/components/MediaContentComponent.html",[0,0.53,71,1.035]],["body/components/MediaContentComponent.html",[0,0.7,1,0.768,2,0.946,3,0.144,4,0.144,5,0.992,6,0.992,7,0.992,8,0.992,9,0.123,11,0.992,12,2.528,13,2.528,15,1.479,17,1.479,19,0.234,22,0.993,27,1.278,30,0.025,31,0.726,32,0.518,37,0.462,38,0.31,45,0.144,46,0.336,53,1.343,54,0.992,55,1.479,56,1.479,57,0.992,58,1.959,59,0.992,60,0.992,61,0.768,62,0.872,63,0.992,64,0.721,65,0.992,66,0.768,67,0.635,68,0.992,69,0.721,70,0.992,71,1.516,72,2.061,73,0.992,74,0.768,75,0.992,76,0.768,77,0.992,78,0.768,79,0.992,80,0.721,81,0.992,82,0.768,83,0.872,84,1.368,85,0.992,86,0.992,87,0.013,88,0.013,185,2.306,191,0.872,192,0.872,193,2.341,232,2.306,257,2.757,266,3.026,267,2.141,268,0.872,269,2.141,300,1.581,301,1.581,306,1.958,309,2.813,316,4.329,319,1.061,320,2.594,321,3.727,333,3.76,335,1.548,338,2.173,339,2.408,342,2.775,349,2.141,350,2.141,351,2.141,352,2.757,353,2.141,354,2.341,390,1.699,392,1.888,393,1.888,473,3.363,475,2.141,537,3.351,538,4.449,539,4.449,540,1.888,541,3.814,542,3.19,543,3.814,544,4.498,545,4.498,546,4.498,547,3.763,548,2.525,549,2.525,550,2.525,551,2.525,552,2.525,553,1.314,554,3.763,555,3.763,556,2.141,557,2.525,558,2.525,559,2.525,560,2.525,561,2.525,562,3.763,563,3.763,564,2.525,565,2.141,566,2.525,567,2.525,568,2.525,569,2.525,570,3.763,571,1.699,572,3.814,573,2.525,574,2.525,575,2.525,576,2.525,577,2.525,578,2.141,579,2.525,580,2.525,581,2.525,582,2.141]],["title/interfaces/MediaState.html",[257,2.086,446,0.912]],["body/interfaces/MediaState.html",[3,0.245,4,0.245,9,0.21,19,0.398,30,0.024,32,0.628,45,0.245,87,0.019,88,0.019,167,1.365,179,3.076,185,4.04,210,4.209,212,4.209,214,4.209,257,3.327,284,4.677,287,4.677,289,4.677,292,4.677,294,4.677,312,3.302,446,1.15,447,1.932,583,3.64]],["title/interfaces/Meditation.html",[53,0.751,446,0.912]],["body/interfaces/Meditation.html",[3,0.233,4,0.233,9,0.2,19,0.379,30,0.025,32,0.614,45,0.332,53,1.162,72,2.108,83,2.247,84,1.6,87,0.018,88,0.018,149,1.817,167,1.322,179,3.179,386,4.593,446,1.095,447,1.839,450,4.593,451,4.593,525,4.152,584,2.749,585,4.593,586,2.749,587,5.262,588,4.087]],["title/components/MeditationHeaderComponent.html",[0,0.53,74,1.035]],["body/components/MeditationHeaderComponent.html",[0,0.807,1,0.986,2,1.133,3,0.185,4,0.185,5,1.275,6,1.275,7,1.275,8,1.275,9,0.158,11,1.275,12,2.642,13,2.642,15,1.771,17,1.771,19,0.301,22,1.143,27,0.995,30,0.025,31,0.87,32,0.301,37,0.418,38,0.398,45,0.185,46,0.432,53,1.445,54,1.275,55,1.771,56,1.771,57,1.275,58,2.2,59,1.275,60,1.275,61,0.986,62,1.12,63,1.275,64,0.926,65,1.275,66,0.986,67,1.569,68,1.275,69,0.926,70,1.275,71,0.986,72,1.051,73,1.275,74,1.702,75,1.275,76,0.986,77,1.275,78,0.986,79,1.275,80,0.926,81,1.275,82,0.986,83,1.12,84,0.986,85,1.275,86,1.275,87,0.016,88,0.016,268,1.12,300,1.894,301,1.894,306,2.346,319,1.363,320,2.346,332,3.369,335,1.988,338,2.704,339,2.502,342,2.346,354,1.688,382,1.688,387,2.75,392,3.369,393,2.425,458,3.821,476,2.425,537,2.916,571,2.182,582,2.75,589,3.872,590,2.75,591,3.872,592,5.18,593,4.507,594,4.507,595,4.507,596,3.244,597,2.75,598,3.244,599,2.75,600,2.425,601,3.244]],["title/components/MeditationItemComponent.html",[0,0.53,76,1.035]],["body/components/MeditationItemComponent.html",[0,0.796,1,0.961,2,1.113,3,0.181,4,0.181,5,1.243,6,1.243,7,1.243,8,1.243,9,0.154,11,1.243,12,2.631,13,2.631,15,1.74,17,1.74,19,0.293,22,1.128,27,1.222,30,0.025,31,0.854,32,0.411,37,0.411,38,0.387,45,0.181,46,0.421,53,1.504,54,1.243,55,1.74,56,1.74,57,1.243,58,2.175,59,1.243,60,1.243,61,0.961,62,1.091,63,1.243,64,0.902,65,1.243,66,0.961,67,0.795,68,1.243,69,0.902,70,1.243,71,0.961,72,1.024,73,1.243,74,0.961,75,1.243,76,1.683,77,1.243,78,0.961,79,1.243,80,0.902,81,1.243,82,0.961,83,1.091,84,1.885,85,1.243,86,1.243,87,0.015,88,0.015,167,1.113,191,1.091,192,1.091,193,1.645,268,1.091,300,1.86,301,1.86,306,2.304,309,3.309,316,3.819,319,1.328,320,2.304,321,3.309,333,2.126,338,2.139,339,2.139,342,1.645,354,1.645,361,4.331,473,2.363,537,3.281,553,1.645,565,2.68,571,2.126,600,2.363,602,4.355,603,2.68,604,5.109,605,5.109,606,4.427,607,4.427,608,3.161,609,3.161,610,3.753,611,3.161,612,3.161,613,3.161,614,3.161]],["title/components/MeditationModalComponent.html",[0,0.53,78,1.035]],["body/components/MeditationModalComponent.html",[0,0.597,1,0.594,2,0.776,3,0.112,4,0.112,5,0.767,6,0.767,7,0.767,8,0.767,9,0.095,11,0.767,12,2.39,13,2.39,15,1.214,17,1.214,19,0.181,20,1.214,22,0.682,27,1.388,29,1.165,30,0.025,31,0.916,32,0.508,33,1.165,35,2.077,36,3.424,37,0.49,38,0.239,39,1.016,45,0.112,46,0.26,47,0.943,53,1.388,54,0.767,55,1.214,56,1.214,57,0.767,58,1.712,59,0.767,60,0.767,61,0.594,62,0.674,63,0.767,64,0.557,65,0.767,66,0.594,67,0.491,68,0.767,69,0.557,70,0.767,71,0.594,72,0.633,73,0.767,74,0.594,75,0.767,76,0.594,77,0.767,78,1.324,79,0.767,80,0.557,81,0.767,82,0.594,83,1.066,84,1.607,85,0.767,86,0.767,87,0.011,88,0.011,164,2.975,167,0.776,175,2.469,185,1.893,190,1.61,191,1.323,192,1.638,195,0.633,196,1.016,198,1.46,224,0.879,240,2.618,261,0.82,268,0.674,300,1.298,301,1.298,306,1.607,312,0.943,319,0.82,320,1.607,336,1.46,338,0.943,339,0.943,340,2.618,354,1.607,388,1.313,389,1.46,390,2.577,391,1.655,420,1.893,442,1.016,481,1.46,527,1.893,537,3.572,543,3.248,553,1.016,586,3.685,591,1.46,597,2.618,599,1.655,600,1.46,610,2.618,615,4.268,616,1.655,617,3.248,618,3.831,619,2.618,620,3.831,621,3.088,622,3.248,623,3.248,624,5.045,625,4.781,626,4.744,627,4.355,628,4.355,629,3.692,630,3.088,631,4.355,632,4.355,633,3.831,634,3.831,635,1.655,636,1.953,637,1.953,638,1.953,639,1.953,640,1.953,641,3.088,642,1.953,643,3.088,644,1.953,645,1.953,646,1.953,647,1.953,648,3.088,649,3.088,650,3.088,651,3.088,652,3.088,653,3.831,654,1.953,655,1.953,656,3.248,657,3.692,658,1.953,659,1.953,660,1.953,661,1.953,662,1.953,663,1.953,664,1.655,665,1.953,666,1.655,667,1.655,668,1.953,669,1.953,670,3.088,671,3.088,672,1.953,673,1.953,674,3.088,675,1.953,676,1.953,677,1.953,678,1.953,679,1.953,680,1.953,681,1.953,682,1.953,683,3.088,684,1.953,685,1.953,686,1.953]],["title/modules/MeditationModule.html",[89,1.771,687,2.289]],["body/modules/MeditationModule.html",[2,0.671,3,0.153,4,0.153,9,0.13,30,0.025,37,0.64,38,0.327,39,1.39,45,0.153,46,0.356,62,0.922,64,1.629,66,1.735,71,1.735,74,1.735,76,1.735,78,1.839,80,1.629,82,1.735,87,0.014,88,0.014,91,1.648,92,2.041,98,2.404,99,1.504,100,1.637,102,2.639,103,2.041,107,2.041,117,1.997,118,0.865,121,1.997,122,1.39,123,2.932,127,1.997,134,1.648,142,2.932,164,3.212,175,2.969,196,1.39,198,1.997,363,3.496,367,2.265,369,2.932,370,1.797,371,2.932,372,1.797,373,1.797,408,2.404,409,1.637,425,2.639,429,2.969,445,1.997,453,1.997,490,3.326,491,1.997,496,2.209,500,3.326,538,1.997,539,1.997,589,1.997,602,1.997,615,1.797,666,2.265,667,2.265,687,4.69,688,2.265,689,2.265,690,2.265,691,2.265,692,3.496,693,2.671,694,3.923,695,2.671,696,2.671,697,4.627,698,2.265,699,1.997,700,1.997,701,3.923,702,2.671,703,2.671,704,2.265,705,2.265,706,2.671,707,2.671,708,1.797,709,2.671,710,2.265,711,1.797,712,2.671,713,2.671,714,2.265,715,2.404,716,2.265,717,2.671,718,2.671]],["title/interfaces/MeditationModuleState.html",[446,0.912,719,2.289]],["body/interfaces/MeditationModuleState.html",[3,0.263,4,0.263,9,0.225,19,0.428,30,0.025,32,0.428,37,0.57,45,0.367,53,1.481,87,0.02,88,0.02,118,1.494,134,1.937,149,2.123,167,1.427,446,1.235,447,2.075,496,3.196,506,3.909,508,3.196,708,3.102,719,3.818,720,3.447,721,3.933,722,5.677,723,3.447,724,3.909]],["title/modules/MeditationRoutingModule.html",[89,1.771,692,2.086]],["body/modules/MeditationRoutingModule.html",[0,0.851,2,1.091,3,0.248,4,0.248,9,0.212,30,0.025,37,0.613,38,0.532,45,0.248,46,0.578,64,1.56,80,1.56,87,0.019,88,0.019,91,1.823,103,2.258,107,2.844,112,2.096,125,2.891,146,3.244,148,4.086,149,1.498,150,4.473,151,3.679,152,3.679,153,3.679,162,2.919,376,3.35,408,3.35,409,2.659,411,4.086,512,3.679,692,3.35,704,3.679,705,3.679,714,3.679,715,3.35,716,3.679,725,4.339,726,2.659]],["title/interfaces/MeditationState.html",[446,0.912,721,2.086]],["body/interfaces/MeditationState.html",[3,0.15,4,0.15,9,0.128,19,0.243,30,0.025,32,0.558,37,0.471,45,0.362,53,1.121,67,1.277,87,0.013,88,0.013,118,0.85,149,2.188,167,0.973,177,4.617,268,0.906,282,3.192,291,3.776,312,3.24,376,3.593,382,1.365,416,1.365,417,2.372,418,1.608,437,2.604,444,2.604,446,0.703,447,1.18,508,1.477,517,3.416,518,2.894,523,3.439,524,2.604,525,2.372,527,1.608,553,1.365,721,4.11,726,3.593,727,1.961,728,5.102,729,5.102,730,5.102,731,5.102,732,5.102,733,5.102,734,2.372,735,2.604,736,2.604,737,1.961,738,2.224,739,1.961,740,2.224,741,1.961,742,2.224,743,1.961,744,2.224,745,1.961,746,2.224,747,1.961,748,2.224,749,1.961,750,2.224,751,1.961,752,2.224,753,1.961,754,2.224]],["title/components/MeditationsComponent.html",[0,0.53,80,0.972]],["body/components/MeditationsComponent.html",[0,0.74,1,0.698,2,1.067,3,0.131,4,0.131,5,0.902,6,0.902,7,0.902,8,0.902,9,0.112,11,0.902,12,2.479,13,2.479,15,1.377,17,1.377,19,0.213,20,1.377,22,0.773,27,1.276,29,1.291,30,0.025,31,0.987,32,0.5,33,1.291,35,1.669,36,1.972,37,0.57,38,0.281,39,1.195,45,0.131,46,0.306,47,2.605,53,1.432,54,0.902,55,1.377,56,1.377,57,0.902,58,1.867,59,0.902,60,0.902,61,0.698,62,0.793,63,0.902,64,0.655,65,0.902,66,0.698,67,1.286,68,0.902,69,0.655,70,0.902,71,0.698,72,1.135,73,0.902,74,0.698,75,0.902,76,0.698,77,0.902,78,1.291,79,0.902,80,1.356,81,0.902,82,0.698,83,0.793,84,1.065,85,0.902,86,0.902,87,0.012,88,0.012,112,1.109,118,0.744,134,2.356,149,1.466,167,0.88,190,2.149,191,1.209,192,1.209,193,1.823,195,0.744,224,1.911,259,3.6,261,0.965,268,0.793,282,1.293,291,1.293,300,1.472,301,1.472,319,0.965,352,1.407,382,1.195,383,1.407,385,1.544,395,1.947,406,1.947,415,1.716,420,2.147,442,1.195,472,3.6,525,2.147,527,1.407,553,1.195,585,1.716,586,3.441,591,1.716,615,1.544,617,3.6,619,1.947,622,3.6,623,3.6,625,4.571,629,4.028,635,1.947,656,2.97,657,2.97,664,1.947,697,1.947,698,1.947,726,3.543,755,1.947,756,4.247,757,3.503,758,4.247,759,3.503,760,4.247,761,4.751,762,3.503,763,2.296,764,5.392,765,2.296,766,2.296,767,3.503,768,2.296,769,3.503,770,2.296,771,2.296,772,2.296,773,1.716,774,2.296,775,3.503,776,1.716,777,2.296,778,2.296,779,2.296,780,2.296,781,2.296,782,2.296,783,2.296,784,2.296,785,1.716,786,2.296,787,2.296,788,3.503,789,2.296,790,2.296,791,2.296,792,2.296,793,3.503]],["title/guards/MeditationsGuard.html",[407,2.544,715,2.086]],["body/guards/MeditationsGuard.html",[3,0.237,4,0.237,9,0.203,19,0.385,20,2.088,22,0.916,27,1.173,29,1.262,30,0.025,31,0.801,32,0.385,33,1.262,35,1.631,37,0.616,38,0.509,45,0.237,46,0.553,87,0.019,88,0.019,112,2.005,118,1.344,134,2.745,163,1.423,190,2.462,195,1.344,200,2.005,224,1.867,261,1.744,312,2.005,379,2.792,383,2.543,385,2.792,409,2.543,411,4.885,414,4.505,415,3.972,416,2.16,418,2.543,420,2.543,422,4.505,424,3.518,715,3.256,734,2.543,794,3.518,795,4.15,796,4.15,797,3.102,798,4.15,799,4.15]],["title/injectables/MeditationsLoadEffect.html",[163,0.912,711,2.289]],["body/injectables/MeditationsLoadEffect.html",[3,0.215,4,0.215,9,0.183,19,0.348,22,1.099,27,1.099,29,1.142,30,0.025,31,0.725,32,0.348,33,1.142,37,0.602,38,0.46,45,0.215,46,0.5,47,2.405,53,1.233,87,0.017,88,0.017,122,1.954,163,1.334,165,1.814,167,1.251,191,1.297,192,1.297,195,1.217,196,1.954,261,1.578,268,1.297,416,3.376,418,2.301,427,2.526,428,2.807,429,3.376,430,3.184,431,4.175,432,3.721,434,4.175,438,3.721,440,3.184,441,2.807,442,1.954,443,2.807,445,2.807,553,1.954,711,3.349,726,3.051,734,3.644,735,2.526,736,3.756,800,4.735,801,4.979,802,4.979,803,4.979,804,4.979]],["title/injectables/MeditationsService.html",[163,0.912,429,1.771]],["body/injectables/MeditationsService.html",[3,0.229,4,0.229,9,0.196,19,0.372,20,2.045,22,0.887,27,1.274,29,1.221,30,0.025,31,0.775,32,0.372,33,1.221,35,2.045,37,0.601,38,0.492,45,0.229,46,0.535,53,0.887,67,1.009,87,0.018,88,0.018,114,3.002,163,1.394,165,1.94,190,2.656,195,1.301,200,1.94,224,2.341,261,1.687,268,1.387,382,2.09,429,2.707,442,2.09,553,2.09,785,3.889,805,3.405,806,6.104,807,6.104,808,3.405,809,5.175,810,4.016,811,4.411,812,4.016,813,4.016,814,4.892,815,4.411,816,4.016,817,5.202,818,5.202,819,5.202,820,4.016]],["title/interfaces/Quote.html",[446,0.912,467,1.644]],["body/interfaces/Quote.html",[3,0.286,4,0.286,9,0.245,19,0.465,30,0.024,32,0.554,45,0.286,84,2.007,87,0.021,88,0.021,167,1.5,179,2.869,312,3.081,446,1.342,447,2.255,467,2.884,821,4.248,822,5.597]],["title/injectables/QuoteLoadEffect.html",[163,0.912,498,2.289]],["body/injectables/QuoteLoadEffect.html",[3,0.207,4,0.207,9,0.177,19,0.336,20,1.91,22,0.799,27,1.211,29,1.101,30,0.025,31,0.699,32,0.336,33,1.101,35,1.423,37,0.596,38,0.444,45,0.207,46,0.482,47,1.749,87,0.017,88,0.017,118,1.173,122,1.884,163,1.302,165,1.749,167,1.221,179,2.186,191,1.25,192,1.25,195,1.173,196,1.884,200,1.749,224,1.629,261,1.521,416,3.345,420,2.219,427,2.436,428,2.707,431,4.099,432,3.632,434,4.099,438,3.632,441,2.707,442,1.884,443,2.707,467,2.347,488,3.62,494,3.07,498,3.268,517,3.689,519,4.111,520,2.436,521,3.689,522,3.07,823,4.969,824,5.861,825,3.621,826,3.621,827,4.859,828,4.859,829,4.119,830,4.859,831,3.621,832,4.859]],["title/injectables/QuoteService.html",[163,0.912,488,1.916]],["body/injectables/QuoteService.html",[3,0.239,4,0.239,9,0.204,19,0.388,20,2.099,22,0.923,27,1.179,29,1.272,30,0.025,31,0.807,32,0.388,33,1.272,35,1.644,37,0.594,38,0.513,45,0.239,46,0.557,87,0.019,88,0.019,114,3.126,163,1.431,165,2.021,190,2.471,195,1.355,200,2.021,224,1.882,261,1.757,268,1.444,282,2.355,442,2.779,467,2.58,488,3.006,785,3.126,808,3.546,809,5.254,811,4.527,814,4.527,815,3.546,829,3.546,833,3.546,834,6.197,835,4.182,836,4.182,837,5.34,838,4.182,839,4.182,840,4.182,841,4.182,842,4.182,843,4.182,844,4.182,845,4.182]],["title/components/TextContentComponent.html",[0,0.53,82,1.035]],["body/components/TextContentComponent.html",[0,0.831,1,1.045,2,1.179,3,0.196,4,0.196,5,1.351,6,1.351,7,1.351,8,1.351,9,0.168,11,1.351,12,2.666,13,2.666,15,1.843,17,1.843,19,0.319,22,1.179,27,1.035,30,0.025,31,0.905,32,0.319,37,0.319,38,0.421,45,0.196,46,0.458,53,1.179,54,1.351,55,1.843,56,1.843,57,1.351,58,2.254,59,1.351,60,1.351,61,1.045,62,1.186,63,1.351,64,0.981,65,1.351,66,1.045,67,0.864,68,1.351,69,0.981,70,1.351,71,1.045,72,1.113,73,1.351,74,1.045,75,1.351,76,1.045,77,1.351,78,1.045,79,1.351,80,0.981,81,1.351,82,1.744,83,2.367,84,1.623,85,1.351,86,1.351,87,0.016,88,0.016,179,2.11,300,1.97,301,1.97,306,2.441,319,1.444,320,2.441,335,2.106,338,1.66,339,1.66,342,1.788,354,1.788,388,2.312,476,2.569,481,2.569,537,3.006,540,2.569,541,4.526,542,3.976,556,2.913,571,2.312,578,2.913,699,3.991,700,3.991,846,4.69,847,3.437,848,3.437,849,3.437]],["title/coverage.html",[850,3.95]],["body/coverage.html",[0,0.917,1,0.592,9,0.095,10,1.651,30,0.025,32,0.181,53,0.43,61,0.592,64,0.556,66,0.592,67,0.49,69,0.556,71,0.592,74,0.592,76,0.592,78,0.592,80,0.556,82,0.592,84,0.592,87,0.011,88,0.011,129,2.304,163,1.414,164,1.097,166,1.651,175,1.014,193,1.014,232,4.38,234,1.651,235,1.651,257,1.194,263,1.456,266,1.31,296,1.456,297,1.456,298,1.456,299,1.651,375,1.651,384,1.456,407,2.304,408,1.194,410,1.651,417,1.194,419,1.456,425,1.31,426,1.651,427,2.573,429,1.014,437,1.31,444,1.31,446,1.466,448,1.651,452,1.651,453,1.456,454,1.651,464,1.651,467,0.941,470,1.456,488,1.097,495,1.31,496,1.736,498,1.31,503,1.31,504,3.251,505,1.194,508,1.736,509,1.456,513,4.092,519,1.31,520,1.31,521,1.31,524,2.073,526,1.456,529,1.456,531,1.456,533,1.456,535,1.456,537,2.668,538,1.456,539,1.456,540,2.304,583,1.651,584,2.073,589,1.456,590,1.651,602,1.456,603,1.651,615,1.31,616,1.651,699,1.456,700,1.456,708,1.31,711,1.31,715,1.194,719,1.31,720,3.251,721,1.194,723,1.456,727,4.478,734,1.194,735,1.31,736,1.31,737,1.456,739,1.456,741,1.456,743,1.456,745,1.456,747,1.456,749,1.456,751,1.456,753,1.456,755,1.651,773,1.456,776,1.456,794,1.651,797,1.456,800,1.651,805,1.651,821,1.651,823,1.651,833,1.651,850,1.651,851,1.948,852,1.948,853,1.948,854,5.99,855,3.825,856,1.651,857,7.038,858,1.651,859,7.038,860,3.243,861,3.083,862,3.825,863,3.083,864,4.017,865,1.651,866,1.651,867,1.651,868,1.651,869,3.083,870,1.948,871,1.651,872,1.651,873,1.651,874,1.651,875,1.651,876,3.825,877,4.272,878,4.993,879,1.651,880,1.651,881,1.651,882,1.651,883,1.651,884,1.651,885,1.651,886,1.651,887,1.651,888,1.948,889,1.948]],["title/dependencies.html",[92,2.132,890,2.836]],["body/dependencies.html",[30,0.025,38,0.495,39,2.101,40,4.324,41,3.017,43,3.017,87,0.018,88,0.018,92,2.101,109,4.425,110,3.901,112,1.95,118,1.691,120,3.422,122,2.101,132,3.017,195,1.308,370,2.715,372,2.715,373,2.715,491,3.017,572,4.425,891,4.036,892,4.036,893,6.486,894,4.036,895,4.036,896,4.036,897,4.036,898,4.036,899,4.036,900,5.784,901,4.036,902,5.219,903,4.036,904,4.036,905,5.219,906,4.036,907,4.036,908,4.036,909,4.036,910,5.784,911,4.036,912,4.036,913,5.784,914,4.036,915,4.036,916,4.036,917,4.036,918,4.036,919,4.036,920,4.036,921,4.036,922,4.036,923,4.036,924,4.036,925,4.036,926,4.036,927,4.036,928,4.036,929,4.036,930,4.036]],["title/index.html",[19,0.316,931,2.886]],["body/index.html",[1,1.944,2,0.89,30,0.025,61,1.944,64,1.548,66,1.649,69,1.548,71,1.649,74,1.649,76,1.649,78,1.649,80,1.548,82,1.649,87,0.017,88,0.017,90,4.3,91,1.488,92,2.491,93,3.003,94,3.003,95,3.003,96,3.003,97,3.323,98,2.934,99,1.994,100,2.171,125,1.711,164,3.053,165,1.711,175,2.822,363,3.832,364,3.003,365,3.003,366,3.003,409,2.171,429,2.822,447,1.594,482,4.373,483,3.003,484,3.003,485,3.003,486,3.003,487,3.323,488,3.053,687,4.781,688,3.003,689,3.003,690,3.003,691,3.003,692,3.323,931,3.003,932,4.787,933,3.542,934,3.542,935,3.542,936,3.542]],["title/modules.html",[91,1.957]],["body/modules.html",[30,0.021,87,0.021,88,0.021,90,3.36,91,2.099,97,3.061,110,4.93,363,3.061,482,3.36,487,3.061,687,3.36,692,3.061,937,6.595,938,6.595,939,6.911,940,6.368,941,6.368]],["title/routes.html",[125,2.251]],["body/routes.html",[30,0.022,87,0.022,88,0.022,125,2.678]],["title/miscellaneous/typealiases.html",[942,1.907,943,4.098]],["body/miscellaneous/typealiases.html",[19,0.502,30,0.022,32,0.502,87,0.022,88,0.022,584,3.641,586,4.201,942,3.641,944,5.413,945,4.589]],["title/miscellaneous/variables.html",[942,1.907,946,3.474]],["body/miscellaneous/variables.html",[19,0.122,30,0.025,31,0.43,32,0.494,52,2.096,53,1.176,67,0.729,72,0.94,83,1.181,84,0.882,87,0.008,88,0.008,129,2.557,132,1.664,149,0.453,177,4.4,179,1.875,185,0.803,191,2.357,192,2.357,210,0.882,212,0.882,214,0.882,232,1.364,263,1.664,266,1.497,282,2.925,284,0.98,287,0.98,289,0.98,291,3.616,292,0.98,294,1.664,376,2.987,384,2.169,386,1.664,417,1.778,419,1.664,437,1.952,444,1.952,449,1.887,450,2.865,451,1.664,467,2.259,470,1.664,495,1.497,496,1.926,503,0.882,504,0.98,505,2.987,508,2.346,509,2.169,510,1.111,513,0.98,514,2.9,515,2.9,516,2.9,517,2.802,518,1.664,519,1.952,520,1.952,521,1.952,523,1.664,524,2.802,525,1.778,526,1.664,527,1.364,528,1.111,529,2.169,530,1.111,531,2.169,532,1.111,533,2.169,534,1.111,535,2.169,536,1.111,584,0.882,585,2.865,708,1.497,710,1.111,719,0.882,720,0.98,721,3.508,723,2.169,724,1.111,726,2.987,727,0.98,728,2.9,729,2.9,730,2.9,731,2.9,732,2.9,733,2.9,734,1.778,735,1.952,736,1.952,737,1.664,738,1.111,739,2.169,740,1.111,741,2.169,742,1.111,743,2.169,744,1.111,745,2.169,746,1.111,747,2.169,748,1.111,749,2.169,750,1.111,751,2.169,752,1.111,753,2.169,754,1.111,773,1.664,776,1.664,797,1.664,822,1.111,856,1.111,858,1.887,860,1.111,864,1.111,865,3.249,866,1.887,867,1.887,868,1.887,871,1.111,872,1.111,873,1.887,874,1.111,875,1.887,877,1.111,878,1.111,879,1.887,880,1.887,881,1.887,882,2.46,883,1.887,884,4.277,885,1.111,886,1.111,887,1.111,942,0.882,945,1.111,946,1.111,947,5.195,948,1.311,949,1.311,950,1.311,951,1.311,952,2.902,953,4.443,954,1.311,955,4.166,956,2.902,957,2.902,958,1.311,959,1.311,960,5.195,961,3.832,962,1.311,963,3.832,964,2.226,965,2.226,966,2.226,967,2.226,968,2.226,969,4.166,970,2.226,971,2.226,972,2.226,973,2.226,974,2.226,975,2.226,976,2.226,977,2.226,978,2.226,979,2.226,980,2.226,981,2.226,982,1.311,983,1.311,984,1.311,985,2.226,986,4.675,987,2.226,988,4.874,989,4.166,990,2.902,991,4.166,992,2.902,993,1.311,994,1.311,995,1.311,996,1.311,997,1.311,998,5.641,999,1.311,1000,1.311,1001,1.311,1002,1.311,1003,1.311,1004,1.311,1005,1.311]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"injectables/AudioService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0000001f",{"_index":346,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["00:00",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":686,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["1.0.2",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["1000).format(format",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":933,"title":{},"body":{"index.html":{}}}],["111b22",{"_index":596,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["11px",{"_index":568,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["12.0.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["12.2.9",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["12.4.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":340,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{}}}],["13px",{"_index":614,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["145px",{"_index":460,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["14px",{"_index":571,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["15px",{"_index":351,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["168px",{"_index":334,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["16px",{"_index":556,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["18px",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{}}}],["19px",{"_index":849,"title":{},"body":{"components/TextContentComponent.html":{}}}],["1:661526611463:web:ad4d2587d5cc613fab8ca2",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1f1f1f",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["1px",{"_index":347,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["2",{"_index":934,"title":{},"body":{"index.html":{}}}],["2.2.0",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["245px",{"_index":459,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["25",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":597,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["270px",{"_index":598,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["27px",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["28px",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["2px",{"_index":348,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["3.18.1",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":343,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["315px",{"_index":576,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["32px",{"_index":578,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["38px",{"_index":562,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["3px",{"_index":575,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["400",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["4e6b8c",{"_index":563,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["5",{"_index":936,"title":{},"body":{"index.html":{}}}],["5.36.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":564,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["500",{"_index":582,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["5cd18",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.appspot.com",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseapp.com",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseio.com",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":613,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["616469",{"_index":611,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["661526611463",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":355,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["7",{"_index":932,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":341,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["72",{"_index":558,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["7px",{"_index":579,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8",{"_index":935,"title":{},"body":{"index.html":{}}}],["808289",{"_index":684,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["85",{"_index":560,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8px",{"_index":336,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["9.1.1",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["999da1",{"_index":581,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["9eb4bb",{"_index":362,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__back",{"_index":599,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["__button",{"_index":337,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__content",{"_index":847,"title":{},"body":{"components/TextContentComponent.html":{}}}],["__description",{"_index":601,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["__icon",{"_index":565,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["__image",{"_index":557,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__play",{"_index":561,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__progress",{"_index":580,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__quote",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["__range",{"_index":569,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__title",{"_index":600,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["accessors",{"_index":240,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{}}}],["action",{"_index":517,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":416,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["activated",{"_index":359,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["activatedroute",{"_index":761,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["active",{"_index":574,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["actual_component",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["addevents",{"_index":215,"title":{},"body":{"injectables/AudioService.html":{}}}],["addevents(this.audioobj",{"_index":231,"title":{},"body":{"injectables/AudioService.html":{}}}],["aizasya02y_nqiilec4",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["angular/cdk",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/compat",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/firestore",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angular/flex",{"_index":372,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":491,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/CategoriesGuard.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"dependencies.html":{}}}],["angularfiremodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":809,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angularfirestoremodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/meditation/services/audio",{"_index":197,"title":{},"body":{"injectables/AudioService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":90,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":97,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["asobservable",{"_index":247,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["async",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationsComponent.html":{}}}],["audio",{"_index":194,"title":{},"body":{"injectables/AudioService.html":{}}}],["audioobj",{"_index":168,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["audioobj.currenttime",{"_index":293,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioobj.duration",{"_index":288,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioservice",{"_index":164,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"index.html":{}}}],["audiostateservice",{"_index":175,"title":{"injectables/AudioStateService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"index.html":{}}}],["authdomain",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":461,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["available",{"_index":941,"title":{},"body":{"modules.html":{}}}],["await",{"_index":788,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["background",{"_index":352,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationsComponent.html":{}}}],["bar",{"_index":572,"title":{},"body":{"components/MediaContentComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["bebdbd",{"_index":358,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["behaviorsubject",{"_index":259,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationsComponent.html":{}}}],["behaviorsubject(initial_media_state",{"_index":250,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["beta.35",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":312,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"interfaces/Quote.html":{}}}],["bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":349,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["box",{"_index":344,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["break",{"_index":283,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["browse",{"_index":939,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["buttons",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["buttonsselectcomponent",{"_index":61,"title":{"components/ButtonsSelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["buttonsselectmodule",{"_index":363,"title":{"modules/ButtonsSelectModule.html":{}},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{},"index.html":{},"modules.html":{}}}],["canactivate",{"_index":411,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{}}}],["canplay",{"_index":212,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["card.component",{"_index":703,"title":{},"body":{"modules/MeditationModule.html":{}}}],["card.component.html",{"_index":456,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.scss",{"_index":455,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.ts",{"_index":454,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":457,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card/category",{"_index":453,"title":{},"body":{"components/CategoryCardComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["case",{"_index":281,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["catcherror",{"_index":441,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["catcherror((error",{"_index":438,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["categories",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["categories'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["categories.component.html",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.find((category",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoriescomponent",{"_index":64,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesdata",{"_index":741,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorieserrorstate",{"_index":747,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesguard",{"_index":408,"title":{"guards/CategoriesGuard.html":{}},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"coverage.html":{}}}],["categoriesloadedstate",{"_index":745,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesloadeffect",{"_index":425,"title":{"injectables/CategoriesLoadEffect.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["categoriesloadingstate",{"_index":743,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":67,"title":{"interfaces/Category.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.description",{"_index":595,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["category.id",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category.name",{"_index":458,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["categorycardcomponent",{"_index":66,"title":{"components/CategoryCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoryid",{"_index":585,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["categorymock",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{}}}],["changedetection",{"_index":300,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy",{"_index":319,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":301,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["child",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["class",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["cluster_appmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_buttonsselectmodule",{"_index":364,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"index.html":{}}}],["cluster_buttonsselectmodule_declarations",{"_index":365,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"index.html":{}}}],["cluster_buttonsselectmodule_exports",{"_index":366,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"index.html":{}}}],["cluster_homemodule",{"_index":483,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_declarations",{"_index":485,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_imports",{"_index":486,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_providers",{"_index":484,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_meditationmodule",{"_index":688,"title":{},"body":{"modules/MeditationModule.html":{},"index.html":{}}}],["cluster_meditationmodule_declarations",{"_index":689,"title":{},"body":{"modules/MeditationModule.html":{},"index.html":{}}}],["cluster_meditationmodule_imports",{"_index":690,"title":{},"body":{"modules/MeditationModule.html":{},"index.html":{}}}],["cluster_meditationmodule_providers",{"_index":691,"title":{},"body":{"modules/MeditationModule.html":{},"index.html":{}}}],["col",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["collection('meditation_categories",{"_index":816,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('meditations",{"_index":820,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('quotes",{"_index":839,"title":{},"body":{"injectables/QuoteService.html":{}}}],["collectionreference",{"_index":837,"title":{},"body":{"injectables/QuoteService.html":{}}}],["color",{"_index":354,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["column",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["combinelatest",{"_index":775,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["commands",{"_index":559,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["commonmodule",{"_index":369,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["componentprops",{"_index":790,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{}}}],["const",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":265,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["constructor(actions",{"_index":428,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["constructor(firestore",{"_index":808,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["constructor(modalcontroller",{"_index":635,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["constructor(platform",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"injectables/AudioService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["constructor(state",{"_index":174,"title":{},"body":{"injectables/AudioService.html":{}}}],["constructor(store",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{}}}],["content",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"interfaces/Quote.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component",{"_index":701,"title":{},"body":{"modules/MeditationModule.html":{}}}],["content.component.html",{"_index":542,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.scss",{"_index":541,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.ts",{"_index":540,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:11",{"_index":846,"title":{},"body":{"components/TextContentComponent.html":{}}}],["content.component.ts:22",{"_index":549,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:25",{"_index":550,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:28",{"_index":548,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:31",{"_index":552,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:34",{"_index":551,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:37",{"_index":547,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.media",{"_index":656,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content.text",{"_index":657,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content/media",{"_index":539,"title":{},"body":{"components/MediaContentComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["content/text",{"_index":700,"title":{},"body":{"modules/MeditationModule.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content[keyof",{"_index":588,"title":{},"body":{"interfaces/Meditation.html":{}}}],["contents",{"_index":643,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["contents[0",{"_index":673,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["contenttypes",{"_index":586,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["core",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":850,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":431,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["createfeatureselector",{"_index":506,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/MeditationModuleState.html":{}}}],["createfeatureselector(homefeaturekey",{"_index":510,"title":{},"body":{"interfaces/HomeModuleState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(meditationfeaturekey",{"_index":724,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"miscellaneous/variables.html":{}}}],["createreducer",{"_index":518,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selecthomestate",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":822,"title":{},"body":{"interfaces/Quote.html":{},"miscellaneous/variables.html":{}}}],["customevent",{"_index":229,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["d3dae2",{"_index":573,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["data",{"_index":523,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddf0fe",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["default",{"_index":191,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"miscellaneous/variables.html":{}}}],["devtools",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["directives",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["dismissmodal",{"_index":627,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["distinctuntilchanged",{"_index":653,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["doc.data",{"_index":819,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["documentation",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["duration",{"_index":284,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["durationsec",{"_index":287,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["effects",{"_index":710,"title":{},"body":{"modules/MeditationModule.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([meditationsloadeffect",{"_index":718,"title":{},"body":{"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([quoteloadeffect",{"_index":502,"title":{},"body":{"modules/HomeModule.html":{}}}],["effectsmodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["ended",{"_index":208,"title":{},"body":{"injectables/AudioService.html":{}}}],["entrycomponents",{"_index":694,"title":{},"body":{"modules/MeditationModule.html":{}}}],["environment",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":209,"title":{},"body":{"injectables/AudioService.html":{}}}],["event",{"_index":228,"title":{},"body":{"injectables/AudioService.html":{}}}],["event.target",{"_index":278,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["event.type",{"_index":280,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["eventemitter",{"_index":316,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["eventkeys",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{}}}],["eventkeys.foreach((event",{"_index":220,"title":{},"body":{"injectables/AudioService.html":{}}}],["events",{"_index":207,"title":{},"body":{"injectables/AudioService.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["f9eedb",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationsComponent.html":{}}}],["failure",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":291,"title":{},"body":{"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":353,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["filter",{"_index":664,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["filter((value",{"_index":650,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["filtermeditations",{"_index":758,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["filtermeditations(meditations",{"_index":763,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["firebase",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":811,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["first",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["flexlayoutmodule",{"_index":371,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["focus",{"_index":462,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["font",{"_index":338,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["format",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formattime",{"_index":263,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formattime(audioobj.currenttime",{"_index":295,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formattime(audioobj.duration",{"_index":285,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formsmodule",{"_index":490,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["full",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["getdailyquote",{"_index":834,"title":{},"body":{"injectables/QuoteService.html":{}}}],["getmedia",{"_index":254,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["getmeditationcategories",{"_index":806,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getmeditations",{"_index":807,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getshowbuttons",{"_index":662,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["globalthis",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":940,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["guard",{"_index":407,"title":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":409,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"index.html":{}}}],["handler",{"_index":219,"title":{},"body":{"injectables/AudioService.html":{}}}],["header",{"_index":591,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["header'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["header.component",{"_index":706,"title":{},"body":{"modules/MeditationModule.html":{}}}],["header.component.html",{"_index":593,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.scss",{"_index":592,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.ts",{"_index":590,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:14",{"_index":594,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header/meditation",{"_index":589,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["height",{"_index":342,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["home.component.html",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home",{"_index":492,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/models/quote.model",{"_index":838,"title":{},"body":{"injectables/QuoteService.html":{}}}],["home/pages/home/home.component",{"_index":493,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home/services/quote.service",{"_index":494,"title":{},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/actions/home.actions",{"_index":522,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/effects/quote",{"_index":499,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/reducers/home.reducer",{"_index":507,"title":{},"body":{"interfaces/HomeModuleState.html":{}}}],["home/store/reducers/home.state",{"_index":497,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/selectors/home.selector",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":69,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["homefeaturekey",{"_index":495,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homemodule",{"_index":482,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"index.html":{},"modules.html":{}}}],["homemodulestate",{"_index":503,"title":{"interfaces/HomeModuleState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homepageroutingmodule",{"_index":487,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homereducer",{"_index":526,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homereducer(state",{"_index":528,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["homestate",{"_index":505,"title":{"interfaces/HomeState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["howler",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["htmlaudioelement",{"_index":217,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["http://domain.com",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclientmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["https://domain.com",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://meditify",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imageurl",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":420,"title":{},"body":{"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["import('./modules/home/home.module').then((m",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/meditation/meditation.module').then",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["init",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial_media_state",{"_index":266,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["initializestate",{"_index":239,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestate($obs",{"_index":242,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestream",{"_index":169,"title":{},"body":{"injectables/AudioService.html":{}}}],["initializestream(url",{"_index":178,"title":{},"body":{"injectables/AudioService.html":{}}}],["initialstate",{"_index":524,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"index.html":{}}}],["input",{"_index":320,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["inputs",{"_index":306,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["interface",{"_index":446,"title":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{}},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"coverage.html":{}}}],["interfaces",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"index.html":{}}}],["ion",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationsComponent.html":{}}}],["ionic",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["ionicmodule.forroot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":566,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["ionicroutestrategy",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["iscategorieserror",{"_index":728,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloaded",{"_index":729,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloading",{"_index":730,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isloaded",{"_index":422,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["ismeditationserror",{"_index":731,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloaded",{"_index":732,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloading",{"_index":733,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isquoteerror",{"_index":514,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloaded",{"_index":515,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloading",{"_index":516,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["italic",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":604,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["item.component",{"_index":707,"title":{},"body":{"modules/MeditationModule.html":{}}}],["item.component.html",{"_index":606,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.scss",{"_index":605,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts",{"_index":603,"title":{},"body":{"components/MeditationItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":609,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:22",{"_index":608,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:25",{"_index":607,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item/meditation",{"_index":602,"title":{},"body":{"components/MeditationItemComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["js",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":848,"title":{},"body":{"components/TextContentComponent.html":{}}}],["knob",{"_index":570,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["last",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["layout",{"_index":373,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["left",{"_index":685,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["legend",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["lib/buttons",{"_index":297,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["load",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load.effect",{"_index":500,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["load.effect.ts",{"_index":427,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["load.effect.ts:21",{"_index":831,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:23",{"_index":440,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:35",{"_index":825,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:37",{"_index":430,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:39",{"_index":826,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["loadcategories",{"_index":417,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriesfailure",{"_index":444,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriessuccess",{"_index":437,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedmetadata",{"_index":213,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["loadmeditations",{"_index":734,"title":{},"body":{"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationsfailure",{"_index":735,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationssuccess",{"_index":736,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquote",{"_index":519,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotefailure",{"_index":520,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotesuccess",{"_index":521,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadstart",{"_index":214,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["logonly",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homemodule",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.meditationmodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map",{"_index":442,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map(([meditations",{"_index":786,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["map((categories",{"_index":436,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["map((meditations",{"_index":803,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["map((quote",{"_index":829,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map((snapshot",{"_index":817,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["map((value",{"_index":651,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["margin",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{}}}],["matching",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(value",{"_index":652,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["max",{"_index":577,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["maxage",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["media(value",{"_index":272,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["media.duration",{"_index":555,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["media.time",{"_index":554,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["mediacontentcomponent",{"_index":71,"title":{"components/MediaContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["mediaoptions",{"_index":622,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediaselection",{"_index":623,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediastate",{"_index":257,"title":{"interfaces/MediaState.html":{}},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"coverage.html":{}}}],["mediasubject",{"_index":237,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["mediatype",{"_index":289,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["meditation",{"_index":53,"title":{"interfaces/Meditation.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditation.categoryid",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditation.title",{"_index":610,"title":{},"body":{"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["meditation/components/category",{"_index":702,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/components/meditation",{"_index":697,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["meditation/constants/media.constants",{"_index":267,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/guards/categories.guard",{"_index":714,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/guards/meditations.guard",{"_index":716,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/meditation",{"_index":695,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/models/category.model",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{}}}],["meditation/models/media.model",{"_index":269,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/models/meditation.model",{"_index":553,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{}}}],["meditation/pages/categories/categories.component",{"_index":704,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/pages/meditations/meditations.component",{"_index":705,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/services/audio",{"_index":666,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/audio.service",{"_index":667,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/meditations.service",{"_index":445,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/actions/meditation.actions",{"_index":418,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/effects/categories",{"_index":713,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/effects/meditations",{"_index":712,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/reducers/meditation.reducer",{"_index":722,"title":{},"body":{"interfaces/MeditationModuleState.html":{}}}],["meditation/store/reducers/meditation.state",{"_index":709,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/selectors/meditation.selector",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["meditation/utils/time.utils",{"_index":264,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["meditation[media",{"_index":793,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationfeaturekey",{"_index":708,"title":{},"body":{"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationheadercomponent",{"_index":74,"title":{"components/MeditationHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["meditationitemcomponent",{"_index":76,"title":{"components/MeditationItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["meditationmock",{"_index":875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationmodalcomponent",{"_index":78,"title":{"components/MeditationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["meditationmodule",{"_index":687,"title":{"modules/MeditationModule.html":{}},"body":{"modules/MeditationModule.html":{},"index.html":{},"modules.html":{}}}],["meditationmodulestate",{"_index":719,"title":{"interfaces/MeditationModuleState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer",{"_index":737,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer(state",{"_index":738,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["meditationroutingmodule",{"_index":692,"title":{"modules/MeditationRoutingModule.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["meditations",{"_index":726,"title":{},"body":{"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["meditations'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["meditations.component.html",{"_index":757,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.component.scss",{"_index":756,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.filter",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditations.filter((meditation",{"_index":792,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationscomponent",{"_index":80,"title":{"components/MeditationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["meditationsdata",{"_index":739,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationserrorstate",{"_index":753,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsguard",{"_index":715,"title":{"guards/MeditationsGuard.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["meditationsloadedstate",{"_index":751,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsloadeffect",{"_index":711,"title":{"injectables/MeditationsLoadEffect.html":{}},"body":{"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["meditationsloadingstate",{"_index":749,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsservice",{"_index":429,"title":{"injectables/MeditationsService.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"coverage.html":{},"index.html":{}}}],["meditationstate",{"_index":721,"title":{"interfaces/MeditationState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditify",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mergemap",{"_index":434,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["messagingsenderid",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["min",{"_index":612,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["miscellaneous",{"_index":942,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm:ss",{"_index":286,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["modal",{"_index":619,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["modal'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["modal.component",{"_index":698,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["modal.component.html",{"_index":621,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.scss",{"_index":620,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts",{"_index":616,"title":{},"body":{"components/MeditationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":639,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:32",{"_index":655,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:35",{"_index":637,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:37",{"_index":658,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:38",{"_index":659,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:40",{"_index":654,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:47",{"_index":663,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:52",{"_index":636,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:55",{"_index":660,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:56",{"_index":661,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:60",{"_index":640,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:67",{"_index":642,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:75",{"_index":645,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:83",{"_index":644,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:87",{"_index":647,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:95",{"_index":638,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.present",{"_index":791,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["modal/media",{"_index":538,"title":{},"body":{"components/MediaContentComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["modal/meditation",{"_index":615,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"coverage.html":{}}}],["modal/text",{"_index":699,"title":{},"body":{"modules/MeditationModule.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":625,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["models",{"_index":268,"title":{},"body":{"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["module",{"_index":89,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}},"body":{}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["moment.utc(time",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp3",{"_index":290,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["multiple",{"_index":307,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["native/core",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationsComponent.html":{},"coverage.html":{}}}],["ngmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["ngondestroy",{"_index":628,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["ngoninit",{"_index":629,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["ngrx/effects",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrxoniniteffects",{"_index":824,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["none",{"_index":360,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{}}}],["null",{"_index":525,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":185,"title":{},"body":{"injectables/AudioService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":216,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.addeventlistener(event",{"_index":221,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.removeeventlistener(event",{"_index":223,"title":{},"body":{"injectables/AudioService.html":{}}}],["object",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":244,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["obs.subscribe((event",{"_index":277,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["observable",{"_index":190,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["observable((observer",{"_index":225,"title":{},"body":{"injectables/AudioService.html":{}}}],["observer.next(event",{"_index":230,"title":{},"body":{"injectables/AudioService.html":{}}}],["of(loadcategoriesfailure(error",{"_index":439,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["of(loadmeditationsfailure(error",{"_index":804,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["of(loadquotefailure(error",{"_index":830,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["of(true",{"_index":424,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["oftype",{"_index":443,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["oftype(loadcategories",{"_index":433,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["oftype(loadmeditations",{"_index":801,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["oftype(loadquote",{"_index":827,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["ondestroy",{"_index":618,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["oninit",{"_index":617,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["oniniteffects",{"_index":832,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["onmediaselectionchange",{"_index":630,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onmediaselectionchange(contents",{"_index":641,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onpause",{"_index":631,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onplay",{"_index":632,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend",{"_index":633,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend(undefined",{"_index":646,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["opacity",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["option",{"_index":331,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["options",{"_index":308,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"index.html":{}}}],["outline",{"_index":463,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["output",{"_index":321,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["outputs",{"_index":309,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["overview",{"_index":931,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":890,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":335,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["page",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pathmatch",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pause",{"_index":170,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["pauseaudio",{"_index":544,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["pipe",{"_index":785,"title":{},"body":{"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["pipe(filter((meditations",{"_index":783,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["pipe(sharereplay",{"_index":248,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["platform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":171,"title":{},"body":{"injectables/AudioService.html":{}}}],["playaudio",{"_index":545,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["playing",{"_index":210,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["pluck",{"_index":665,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["pluck('timesec",{"_index":649,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["preloadallmodules",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentmodal",{"_index":759,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["presentmodal(meditation",{"_index":767,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["production",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectid",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":769,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["properties",{"_index":167,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{}}}],["props",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":199,"title":{},"body":{"injectables/AudioService.html":{}}}],["providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["public",{"_index":624,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["querysnapshot",{"_index":814,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["quote",{"_index":467,"title":{"interfaces/Quote.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/HomeState.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quote.content",{"_index":845,"title":{},"body":{"injectables/QuoteService.html":{}}}],["quotedata",{"_index":529,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteerrorstate",{"_index":535,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadedstate",{"_index":533,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadeffect",{"_index":498,"title":{"injectables/QuoteLoadEffect.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["quoteloadingstate",{"_index":531,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quotemock",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteservice",{"_index":488,"title":{"injectables/QuoteService.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"index.html":{}}}],["radius",{"_index":350,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["readonly",{"_index":236,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["redirectto",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["reducer",{"_index":508,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reducers",{"_index":496,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":840,"title":{},"body":{"injectables/QuoteService.html":{}}}],["ref.where('current",{"_index":841,"title":{},"body":{"injectables/QuoteService.html":{}}}],["removeevents",{"_index":222,"title":{},"body":{"injectables/AudioService.html":{}}}],["removeevents(this.audioobj",{"_index":233,"title":{},"body":{"injectables/AudioService.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AudioStateService.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"index.html":{}}}],["results",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":224,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{}}}],["root'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["route",{"_index":760,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["routereusestrategy",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":512,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":125,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["routing.module.ts",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":261,"title":{},"body":{"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["screen",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["seconds",{"_index":187,"title":{},"body":{"injectables/AudioService.html":{}}}],["seekbarvalue",{"_index":543,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{}}}],["seekend",{"_index":546,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["seekto",{"_index":172,"title":{},"body":{"injectables/AudioService.html":{}}}],["seekto(seconds",{"_index":184,"title":{},"body":{"injectables/AudioService.html":{}}}],["select",{"_index":302,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["select(selectmeditationsbycategoryid(categoryid",{"_index":782,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["select.component",{"_index":374,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select.component.html",{"_index":304,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.scss",{"_index":303,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts",{"_index":299,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:17",{"_index":314,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:20",{"_index":313,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:23",{"_index":315,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:26",{"_index":311,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:30",{"_index":318,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.module",{"_index":696,"title":{},"body":{"modules/MeditationModule.html":{}}}],["select.module.ts",{"_index":368,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select/buttons",{"_index":367,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{}}}],["select/components/buttons",{"_index":298,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["selectcategories",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorieshaserror",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorybyid",{"_index":773,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":361,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationItemComponent.html":{}}}],["selectedmedia",{"_index":764,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["selecthomemodulestate",{"_index":509,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecthomestate",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":322,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.add(type",{"_index":327,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.clear",{"_index":328,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.delete(type",{"_index":326,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.has(type",{"_index":325,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selectiscategoriesloaded",{"_index":419,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectiscategoriesloading",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloaded",{"_index":797,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloading",{"_index":881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloaded",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloading",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationmodulestate",{"_index":723,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditations",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationsbycategoryid",{"_index":776,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationshaserror",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationstate",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["selectors",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["selectquote",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectquotehaserror",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":196,"title":{},"body":{"injectables/AudioService.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["set",{"_index":271,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["set(this.value",{"_index":323,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["setmedia(value",{"_index":256,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["shadow",{"_index":345,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["sharereplay",{"_index":260,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["showbuttons",{"_index":634,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["size",{"_index":339,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["snapshot",{"_index":842,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs",{"_index":843,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs.map((doc",{"_index":818,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["snapshot.docs[0].data",{"_index":844,"title":{},"body":{"injectables/QuoteService.html":{}}}],["solid",{"_index":357,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["splashscreen",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/.../category.mock.ts",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.actions.ts",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.reducer.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.selector.ts",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.state.ts",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../media.constants.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.actions.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.mock.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.model.ts",{"_index":945,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../meditation.reducer.ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.selector.ts",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.state.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quote.mock.ts",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../time.utils.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/ui",{"_index":296,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["src/app/modules/home/home",{"_index":511,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/modules/home/home.module.ts",{"_index":489,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/modules/home/mocks/quote.mock.ts",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/models/quote.model.ts",{"_index":821,"title":{},"body":{"interfaces/Quote.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts:16",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/home/services/quote.service.ts",{"_index":833,"title":{},"body":{"injectables/QuoteService.html":{},"coverage.html":{}}}],["src/app/modules/home/services/quote.service.ts:15",{"_index":835,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/services/quote.service.ts:18",{"_index":836,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/store/actions/home.actions.ts",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/effects/quote",{"_index":823,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/home/store/reducers/home.reducer.ts",{"_index":513,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/reducers/home.state.ts",{"_index":504,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/selectors/home.selector.ts",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/components/category",{"_index":452,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/meditation",{"_index":537,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/constants/media.constants.ts",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts",{"_index":410,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:16",{"_index":412,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:19",{"_index":413,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts",{"_index":794,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:16",{"_index":795,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:19",{"_index":796,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/meditation",{"_index":725,"title":{},"body":{"modules/MeditationRoutingModule.html":{}}}],["src/app/modules/meditation/meditation.module.ts",{"_index":693,"title":{},"body":{"modules/MeditationModule.html":{}}}],["src/app/modules/meditation/mocks/category.mock.ts",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/mocks/meditation.mock.ts",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/models/category.model.ts",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/media.model.ts",{"_index":583,"title":{},"body":{"interfaces/MediaState.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/meditation.model.ts",{"_index":584,"title":{},"body":{"interfaces/Meditation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts:20",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts",{"_index":755,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:33",{"_index":772,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:35",{"_index":771,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:36",{"_index":770,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:37",{"_index":762,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:45",{"_index":766,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:62",{"_index":768,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:71",{"_index":765,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/services/audio",{"_index":234,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts",{"_index":166,"title":{},"body":{"injectables/AudioService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:12",{"_index":176,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:16",{"_index":183,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:20",{"_index":182,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:24",{"_index":186,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:28",{"_index":180,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:33",{"_index":189,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts",{"_index":805,"title":{},"body":{"injectables/MeditationsService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:15",{"_index":810,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:18",{"_index":812,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:29",{"_index":813,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/store/actions/meditation.actions.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/effects/categories",{"_index":426,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/effects/meditations",{"_index":800,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.reducer.ts",{"_index":727,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.state.ts",{"_index":720,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/selectors/meditation.selector.ts",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/utils/time.utils.ts",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":177,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.categories",{"_index":742,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.home",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.iscategorieserror",{"_index":748,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloaded",{"_index":746,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloading",{"_index":744,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationserror",{"_index":754,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloaded",{"_index":752,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloading",{"_index":750,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteerror",{"_index":536,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloaded",{"_index":534,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloading",{"_index":532,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.meditation",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.meditations",{"_index":740,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.quote",{"_index":530,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.service",{"_index":198,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["state.service.ts",{"_index":235,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["state.service.ts:17",{"_index":253,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:18",{"_index":251,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:20",{"_index":249,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:24",{"_index":255,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:27",{"_index":258,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:29",{"_index":241,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:33",{"_index":245,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:40",{"_index":243,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["statements",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":626,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["statusbar",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["storagebucket",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["store/selectors/meditation.selector",{"_index":774,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["storedevtoolsmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["storemodule.forfeature(homefeaturekey",{"_index":501,"title":{},"body":{"modules/HomeModule.html":{}}}],["storemodule.forfeature(meditationfeaturekey",{"_index":717,"title":{},"body":{"modules/MeditationModule.html":{}}}],["storemodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["stream",{"_index":204,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable",{"_index":173,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable(url",{"_index":188,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamsubscription",{"_index":238,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Category.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":567,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["style",{"_index":356,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["success",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":937,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":938,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":279,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["switchmap",{"_index":414,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["table",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":415,"title":{},"body":{"guards/CategoriesGuard.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["target",{"_index":678,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["test",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["textcontentcomponent",{"_index":82,"title":{"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{}}}],["this.$category",{"_index":778,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$mediaselection",{"_index":784,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$meditations",{"_index":780,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.actions$.pipe",{"_index":432,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["this.audioobj.currenttime",{"_index":203,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.load",{"_index":227,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.pause",{"_index":202,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.play",{"_index":201,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.src",{"_index":226,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioservice.initializestream(this.meditation.media",{"_index":677,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.pause",{"_index":674,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.play",{"_index":676,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.seekto(target.value",{"_index":679,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.filtermeditations(meditations",{"_index":787,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.firestore",{"_index":815,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["this.initializeapp",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["this.media",{"_index":276,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediaselection",{"_index":671,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.mediasubject",{"_index":246,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.next(value",{"_index":273,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.value",{"_index":270,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.meditation.imageurl",{"_index":670,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation.media",{"_index":672,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.media",{"_index":669,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.text",{"_index":668,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditationsservice.getmeditationcategories().pipe",{"_index":435,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["this.meditationsservice.getmeditations().pipe",{"_index":802,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["this.modalcontroller.create",{"_index":789,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":682,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.multiple",{"_index":324,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.onplay",{"_index":681,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.platform.ready().then",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quoteservice.getdailyquote().pipe",{"_index":828,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["this.route.snapshot.queryparams",{"_index":777,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.splashscreen.hide",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.state.initializestate($stream",{"_index":206,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.stateservice.$media.pipe",{"_index":648,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.mediatype",{"_index":675,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.playing",{"_index":680,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.reset",{"_index":683,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.statusbar.styledefault",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store",{"_index":781,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.dispatch(loadcategories",{"_index":423,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.dispatch(loadmeditations",{"_index":799,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectcategories",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.store.select(selectcategorybyid(categoryid",{"_index":779,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.select(selectiscategoriesloaded).pipe",{"_index":421,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.select(selectismeditationsloaded).pipe",{"_index":798,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectquote",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.streamobservable(url",{"_index":205,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.streamsubscription",{"_index":274,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.value",{"_index":329,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.valuechange.emit([...selection",{"_index":330,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["time",{"_index":294,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timesec",{"_index":292,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timeupdate",{"_index":211,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["title",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["titlecase",{"_index":332,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["toggle",{"_index":305,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["toggle(type",{"_index":317,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["tr_cw1hcbfay3uzw78i",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["true",{"_index":282,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/QuoteService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":943,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":587,"title":{},"body":{"interfaces/Meditation.html":{}}}],["types/howler",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":527,"title":{},"body":{"interfaces/HomeState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":181,"title":{},"body":{"injectables/AudioService.html":{}}}],["url('../../../../../assets/images/mountains.jpg",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["utils",{"_index":262,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["value",{"_index":192,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["valuechange",{"_index":310,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["var",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["variable",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["weight",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["width",{"_index":333,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["zone.js",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Home\n      \n\n      \n        \n        Meditation\n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                            Meditation            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n// Routes\nimport { AppRoutingModule } from 'app/app-routing.module';\n\n// Components\nimport { AppComponent } from 'app/app.component';\n\n// Environment\nimport { environment } from '@environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    IonicModule.forRoot(),\n    // firebase\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    // store\n    StoreModule.forRoot({}, {}),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: () =>\n      \"import('./modules/home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'meditation',\n    loadChildren: () =>\n      \"import('./modules/meditation/meditation.module').then(\\\n        (m) => m.MeditationModule,\\\n      )\",\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                audioObj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeStream\n                            \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                seekTo\n                            \n                            \n                                    Private\n                                streamObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AudioStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeStream\n                        \n                    \n                \n            \n            \n                \ninitializeStream(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekTo\n                        \n                    \n                \n            \n            \n                \nseekTo(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        streamObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamObservable(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        audioObj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from 'app/modules/meditation/services/audio-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioService {\n  private audioObj = new Audio();\n\n  constructor(private state: AudioStateService) {}\n\n  play(): void {\n    this.audioObj.play();\n  }\n\n  pause(): void {\n    this.audioObj.pause();\n  }\n\n  seekTo(seconds: number): void {\n    this.audioObj.currentTime = seconds;\n  }\n\n  initializeStream(url: string): void {\n    const $stream = this.streamObservable(url);\n    this.state.initializeState($stream);\n  }\n\n  private streamObservable(url: string): Observable {\n    const events = [\n      'ended',\n      'error',\n      'play',\n      'playing',\n      'pause',\n      'timeupdate',\n      'canplay',\n      'loadedmetadata',\n      'loadstart',\n    ];\n\n    const addEvents = (obj: HTMLAudioElement, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.addEventListener(event, handler);\n      });\n    };\n\n    const removeEvents = (obj, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.removeEventListener(event, handler);\n      });\n    };\n\n    return new Observable((observer) => {\n      this.audioObj.src = url;\n      this.audioObj.load();\n      this.audioObj.play();\n\n      const handler = (event: CustomEvent) => observer.next(event);\n      addEvents(this.audioObj, events, handler);\n\n      return () => {\n        this.audioObj.pause();\n        this.audioObj.currentTime = 0;\n\n        removeEvents(this.audioObj, events, handler);\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioStateService.html":{"url":"injectables/AudioStateService.html","title":"injectable - AudioStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                $media\n                            \n                            \n                                    Private\n                                mediaSubject\n                            \n                            \n                                    Private\n                                streamSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeState\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    media\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState($obs: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $obs\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        $media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay())\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mediaSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(INITIAL_MEDIA_STATE)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n\n                \n                    \n                        getmedia()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:24\n                                \n                            \n\n                \n                    \n                        setmedia(value: MediaState)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            MediaState\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n// Utils\nimport { formatTime } from '@meditation/utils/time.utils';\n\n// Constants\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\n\n@Injectable()\nexport class AudioStateService {\n  private streamSubscription: Subscription;\n  private mediaSubject = new BehaviorSubject(INITIAL_MEDIA_STATE);\n\n  readonly $media: Observable = this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay());\n\n  get media(): MediaState {\n    return this.mediaSubject.value;\n  }\n  set media(value: MediaState) {\n    this.mediaSubject.next(value);\n  }\n\n  constructor() {}\n\n  reset(): void {\n    if (this.streamSubscription) {\n      this.streamSubscription.unsubscribe();\n    }\n    this.media = INITIAL_MEDIA_STATE;\n  }\n\n  initializeState($obs: Observable): void {\n    this.streamSubscription = $obs.subscribe((event: CustomEvent) => {\n      const audioObj = event.target as HTMLAudioElement;\n\n      switch (event.type) {\n        case 'canplay':\n          this.media = { ...this.media, canPlay: true };\n          break;\n\n        case 'loadedmetadata':\n          const duration = formatTime(audioObj.duration, 'mm:ss');\n\n          this.media = {\n            ...this.media,\n            duration,\n            durationSec: audioObj.duration,\n            mediaType: 'mp3',\n          };\n          break;\n\n        case 'playing':\n          this.media = { ...this.media, playing: true };\n          break;\n\n        case 'pause':\n          this.media = { ...this.media, playing: false };\n          break;\n\n        case 'timeupdate':\n          const timeSec = audioObj.currentTime;\n          const time = formatTime(audioObj.currentTime, 'mm:ss');\n          this.media = { ...this.media, time, timeSec };\n          break;\n\n        case 'loadstart':\n          this.media = { ...this.media, loadStart: true };\n          break;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsSelectComponent.html":{"url":"components/ButtonsSelectComponent.html","title":"component - ButtonsSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons-select\n            \n\n            \n                styleUrls\n                ./buttons-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./buttons-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                multiple\n                            \n                            \n                                options\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(type: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-buttons-select',\n  templateUrl: './buttons-select.component.html',\n  styleUrls: ['./buttons-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonsSelectComponent {\n  @Input()\n  options: any[] = [];\n\n  @Input()\n  multiple = false;\n\n  @Input()\n  value: any[] = [];\n\n  @Output()\n  valueChange = new EventEmitter();\n\n  constructor() {}\n\n  toggle(type: any): void {\n    const selection = new Set(this.value);\n\n    if (this.multiple) {\n      selection.has(type) ? selection.delete(type) : selection.add(type);\n    } else {\n      selection.clear();\n      selection.add(type);\n    }\n\n    this.value = [...selection];\n    this.valueChange.emit([...selection]);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ option | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./buttons-select.component.scss\n                \n                .selection {\n  width: 168px;\n  padding: 8px;\n\n  &__button {\n    font-size: 12px;\n    width: 70px;\n    height: 30px;\n    box-shadow: #0000001f 0 1px 2px;\n    border-radius: 15px;\n    --background: #fff;\n    --color: #666;\n    --border-width: 2px;\n    --border-style: solid;\n    --border-color: #bebdbd;\n    --background-activated: none;\n    --border-radius: 15px;\n\n    &-selected {\n      --background: #9eb4bb;\n      --color: #fff;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ option | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonsSelectModule.html":{"url":"modules/ButtonsSelectModule.html","title":"module - ButtonsSelectModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonsSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/common/ui-lib/buttons-select/buttons-select.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Components\nimport { ButtonsSelectComponent } from '@buttons-select/components/buttons-select.component';\n\n@NgModule({\n  declarations: [ButtonsSelectComponent],\n  imports: [CommonModule, FlexLayoutModule],\n  exports: [ButtonsSelectComponent],\n})\nexport class ButtonsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/categories/categories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                ./categories.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $categories\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectCategories)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n// Selectors\nimport { selectCategories } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoriesComponent {\n  $categories: Observable = this.store.select(selectCategories);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    Categories\n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./categories.component.scss\n                \n                .title {\n  font-size: 28px;\n  text-align: center;\n  margin-top: 20px;\n  font-weight: 400;\n}\n\nion-content {\n  --padding-top: 20px;\n  --ion-grid-padding: 8px;\n  --ion-grid-column-padding: 8px;\n  --background: url('../../../../../assets/images/mountains.jpg') center / cover;\n\n  ion-col {\n    --ion-card-background: #ddf0fe;\n\n    &:first-child,\n    &:last-child {\n      --ion-card-background: #f9eedb;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Categories                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CategoriesGuard.html":{"url":"guards/CategoriesGuard.html","title":"guard - CategoriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CategoriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/categories.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/categories.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadCategories } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsCategoriesLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class CategoriesGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsCategoriesLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadCategories()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesLoadEffect.html":{"url":"injectables/CategoriesLoadEffect.html","title":"injectable - CategoriesLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/categories-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadCategories,\n  loadCategoriesFailure,\n  loadCategoriesSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class CategoriesLoadEffect {\n  loadCategories$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/category.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Category {\n  id: string;\n  name: string;\n  description: string;\n  imageUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryCardComponent.html":{"url":"components/CategoryCardComponent.html","title":"component - CategoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/category-card/category-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-card\n            \n\n            \n                styleUrls\n                ./category-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryCardComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ category.name | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./category-card.component.scss\n                \n                .card {\n  height: 245px;\n  width: 145px;\n  margin: auto;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ category.name | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/home/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $quote\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $quote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectQuote)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n// Selectors\nimport { selectQuote } from '@home/store/selectors/home.selector';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent {\n  $quote: Observable = this.store.select(selectQuote);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    {{ $quote | async }}\n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home {\n  height: 100%;\n  background: url('../../../../../assets/images/mountains.jpg');\n  background-size: cover;\n\n  &__quote {\n    font-size: 18px;\n    line-height: 27px;\n    font-style: italic;\n    opacity: 0.8;\n    color: #1f1f1f;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ $quote | async }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            QuoteService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { IonicModule } from '@ionic/angular';\n\n// Routes\nimport { HomePageRoutingModule } from '@home/home-routing.module';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n// Store\nimport { homeFeatureKey, reducers } from '@home/store/reducers/home.state';\nimport { QuoteLoadEffect } from '@home/store/effects/quote-load.effect';\n\n@NgModule({\n  declarations: [HomeComponent],\n  providers: [QuoteService],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(homeFeatureKey, reducers),\n    EffectsModule.forFeature([QuoteLoadEffect]),\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeModuleState.html":{"url":"interfaces/HomeModuleState.html","title":"interface - HomeModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            home\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        home\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        home:         HomeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HomeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { HomeState } from '@home/store/reducers/home.reducer';\n\n// Reducer\nimport { reducer } from '@home/store/reducers/home.reducer';\n\nexport const homeFeatureKey = 'home';\n\nexport interface HomeModuleState {\n  home: HomeState;\n}\n\nexport const reducers = {\n  home: reducer,\n};\n\nexport const selectHomeModuleState =\n  createFeatureSelector(homeFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeState.html":{"url":"interfaces/HomeState.html","title":"interface - HomeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isQuoteError\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoaded\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoading\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\nexport interface HomeState {\n  // data\n  quote: string;\n  // state\n  isQuoteLoading: boolean;\n  isQuoteLoaded: boolean;\n  isQuoteError: boolean;\n}\n\nexport const initialState: HomeState = {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n};\n\nconst homeReducer = createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action);\n\n// Data\nexport const quoteData = (state: HomeState) => state.quote;\n// State\nexport const quoteLoadingState = (state: HomeState) => state.isQuoteLoading;\nexport const quoteLoadedState = (state: HomeState) => state.isQuoteLoaded;\nexport const quoteErrorState = (state: HomeState) => state.isQuoteError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaContentComponent.html":{"url":"components/MediaContentComponent.html","title":"component - MediaContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MediaContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-media-content\n            \n\n            \n                styleUrls\n                ./media-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                media\n                            \n                            \n                                meditation\n                            \n                            \n                                seekbarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pauseAudio\n                            \n                            \n                                playAudio\n                            \n                            \n                                seekEnd\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n                \n                    \n                        Type :         MediaState\n\n                    \n                \n                \n                    \n                        Default value : INITIAL_MEDIA_STATE\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekbarValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pauseAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-media-content',\n  templateUrl: './media-content.component.html',\n  styleUrls: ['./media-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaContentComponent {\n  @Input()\n  meditation: Meditation;\n\n  @Input()\n  seekbarValue: number;\n\n  @Input()\n  media: MediaState = INITIAL_MEDIA_STATE;\n\n  @Output()\n  playAudio = new EventEmitter();\n\n  @Output()\n  pauseAudio = new EventEmitter();\n\n  @Output()\n  seekEnd = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n\n      \n    \n\n    \n    \n\n    \n      {{ media.time }}\n      {{ media.duration }}\n    \n  \n\n\n    \n\n    \n                \n                    ./media-content.component.scss\n                \n                .media {\n  margin: 0 16px;\n  height: 100%;\n\n  &__image {\n    height: 72%;\n  }\n}\n\n.commands {\n  width: 85%;\n\n  &__play {\n    width: 38px;\n    height: 38px;\n    background-color: #4e6b8c;\n    border-radius: 50%;\n  }\n\n  &__icon {\n    --ionicon-stroke-width: 11px;\n    font-size: 20px;\n    color: #fff;\n  }\n\n  &__range {\n    --knob-size: 14px;\n    --bar-background: #d3dae2;\n    --bar-background-active: #4e6b8c;\n    --bar-height: 3px;\n    --knob-size: 18px;\n    width: 315px;\n    max-height: 32px;\n    padding: 0 7px;\n    width: 100%;\n  }\n\n  &__progress {\n    width: 100%;\n    color: #999da1;\n    font-weight: 500;\n    font-size: 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ media.time }}      {{ media.duration }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MediaContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaState.html":{"url":"interfaces/MediaState.html","title":"interface - MediaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/media.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canPlay\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            durationSec\n                                        \n                                \n                                \n                                        \n                                            loadStart\n                                        \n                                \n                                \n                                        \n                                            mediaType\n                                        \n                                \n                                \n                                        \n                                            playing\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            timeSec\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        durationSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        durationSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadStart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediaType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mediaType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MediaState {\n  canPlay: boolean;\n  duration: string;\n  durationSec: number;\n  time: string;\n  timeSec: number;\n  mediaType: string;\n  loadStart: boolean;\n  playing: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meditation.html":{"url":"interfaces/Meditation.html","title":"interface - Meditation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meditation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/meditation.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Meditation {\n  id: string;\n  categoryId: string;\n  title: string;\n  text: string | null;\n  media: string | null;\n  imageUrl: string | null;\n}\n\nexport const content = {\n  media: 'media',\n  text: 'text',\n} as const;\n\nexport type ContentTypes = typeof content[keyof typeof content];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationHeaderComponent.html":{"url":"components/MeditationHeaderComponent.html","title":"component - MeditationHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-header\n            \n\n            \n                styleUrls\n                ./meditation-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-meditation-header',\n  templateUrl: './meditation-header.component.html',\n  styleUrls: ['./meditation-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationHeaderComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      {{ category.name | titlecase }}\n\n      {{ category.description }}\n    \n\n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-header.component.scss\n                \n                .header {\n  color: #111b22;\n  padding: 25px;\n  height: 270px;\n\n  &__back {\n    font-size: 20px;\n  }\n\n  &__title {\n    font-size: 28px;\n    font-weight: 500;\n  }\n\n  &__description {\n    font-size: 14px;\n    line-height: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ category.name | titlecase }}      {{ category.description }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationItemComponent.html":{"url":"components/MeditationItemComponent.html","title":"component - MeditationItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-item\n            \n\n            \n                styleUrls\n                ./meditation-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n// Models\nimport { content, Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-item',\n  templateUrl: './meditation-item.component.html',\n  styleUrls: ['./meditation-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationItemComponent {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  @Output()\n  selected = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    {{ meditation.title }}\n\n    \n      \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-item.component.scss\n                \n                .item {\n  color: #616469;\n  width: 100%;\n  --min-height: 60px;\n\n  &__title {\n    font-size: 14px;\n  }\n\n  &__icon {\n    font-size: 13px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ meditation.title }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationModalComponent.html":{"url":"components/MeditationModalComponent.html","title":"component - MeditationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-modal\n            \n\n            \n                styleUrls\n                ./meditation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $seekbarValue\n                            \n                            \n                                content\n                            \n                            \n                                mediaOptions\n                            \n                            \n                                mediaSelection\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                stateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissModal\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMediaSelectionChange\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onSeekEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showButtons\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, stateService: AudioStateService, audioService: AudioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        audioService\n                                                  \n                                                        \n                                                                        AudioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissModal\n                        \n                    \n                \n            \n            \n                \ndismissModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMediaSelectionChange\n                        \n                    \n                \n            \n            \n                \nonMediaSelectionChange(contents: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contents\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeekEnd\n                        \n                    \n                \n            \n            \n                \nonSeekEnd(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $seekbarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModalController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stateService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioStateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showButtons\n                    \n                \n\n                \n                    \n                        getshowButtons()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { distinctUntilChanged, filter, map, pluck } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { AudioService } from '@meditation/services/audio.service';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-modal',\n  templateUrl: './meditation-modal.component.html',\n  styleUrls: ['./meditation-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationModalComponent implements OnInit, OnDestroy {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  mediaOptions: ContentTypes[] = [content.media, content.text];\n  mediaSelection: ContentTypes[];\n\n  $seekbarValue: Observable = this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  );\n\n  get showButtons(): boolean {\n    return !!(\n      this.meditation[content.text] &&\n      (this.meditation[content.media] || this.meditation.imageUrl)\n    );\n  }\n\n  constructor(\n    public modalController: ModalController,\n    public stateService: AudioStateService,\n    private audioService: AudioService,\n  ) {}\n\n  ngOnInit() {\n    this.mediaSelection =\n      this.meditation.media || this.meditation.imageUrl\n        ? [content.media]\n        : [content.text];\n  }\n\n  onMediaSelectionChange(contents: ContentTypes[]): void {\n    this.mediaSelection = contents;\n\n    if (contents[0] === content.text) {\n      this.audioService.pause();\n    }\n  }\n\n  onPlay(): void {\n    if (this.stateService.media.mediaType) {\n      this.audioService.play();\n    } else {\n      this.audioService.initializeStream(this.meditation.media);\n    }\n  }\n\n  onPause(): void {\n    this.audioService.pause();\n  }\n\n  onSeekEnd({ target }): void {\n    this.audioService.seekTo(target.value);\n\n    if (this.stateService.media.playing) {\n      this.onPlay();\n    }\n  }\n\n  dismissModal(): void {\n    this.modalController.dismiss();\n    this.stateService.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.stateService.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ meditation.title }}\n\n    \n      \n    \n  \n\n\n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./meditation-modal.component.scss\n                \n                .header {\n  &__back {\n    font-size: 25px;\n    color: #808289;\n    margin-left: 12px;\n    margin-top: 12px;\n  }\n\n  &__title {\n    margin: 0px 25px 8px;\n    text-align: center;\n    color: #1f1f1f;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ meditation.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationModule.html":{"url":"modules/MeditationModule.html","title":"module - MeditationModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesComponent\n                        \n                        \n                            CategoryCardComponent\n                        \n                        \n                            MediaContentComponent\n                        \n                        \n                            MeditationHeaderComponent\n                        \n                        \n                            MeditationItemComponent\n                        \n                        \n                            MeditationModalComponent\n                        \n                        \n                            MeditationsComponent\n                        \n                        \n                            TextContentComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MeditationModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AudioService\n                        \n                        \n                            AudioStateService\n                        \n                        \n                            MeditationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonsSelectModule\n                        \n                        \n                            MeditationRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n// Modules\nimport { MeditationRoutingModule } from '@meditation/meditation-routing.module';\nimport { ButtonsSelectModule } from '@buttons-select/buttons-select.module';\n\n// Services\nimport { AudioService } from '@meditation/services/audio.service';\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/components/meditation-modal/meditation-modal.component';\nimport { TextContentComponent } from '@meditation/components/meditation-modal/text-content/text-content.component';\nimport { MediaContentComponent } from '@meditation/components/meditation-modal/media-content/media-content.component';\nimport { CategoryCardComponent } from '@meditation/components/category-card/category-card.component';\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\nimport { MeditationHeaderComponent } from '@meditation/components/meditation-header/meditation-header.component';\nimport { MeditationItemComponent } from '@meditation/components/meditation-item/meditation-item.component';\n\n// Store\nimport {\n  meditationFeatureKey,\n  reducers,\n} from '@meditation/store/reducers/meditation.state';\n\n// Effects\nimport { MeditationsLoadEffect } from '@meditation/store/effects/meditations-load.effect';\nimport { CategoriesLoadEffect } from '@meditation/store/effects/categories-load.effect';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MeditationRoutingModule,\n    ButtonsSelectModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(meditationFeatureKey, reducers),\n    EffectsModule.forFeature([MeditationsLoadEffect, CategoriesLoadEffect]),\n  ],\n  declarations: [\n    MeditationsComponent,\n    CategoriesComponent,\n    MediaContentComponent,\n    TextContentComponent,\n    MeditationModalComponent,\n    CategoryCardComponent,\n    MeditationHeaderComponent,\n    MeditationItemComponent,\n  ],\n  entryComponents: [MeditationModalComponent],\n  providers: [\n    AudioService,\n    AudioStateService,\n    MeditationsService,\n    MeditationsGuard,\n    CategoriesGuard,\n  ],\n})\nexport class MeditationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationModuleState.html":{"url":"interfaces/MeditationModuleState.html","title":"interface - MeditationModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            meditation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        meditation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditation:         MeditationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MeditationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { MeditationState } from '@meditation/store/reducers/meditation.reducer';\n\n// Reducers\nimport { reducer } from '@meditation/store/reducers/meditation.reducer';\n\nexport const meditationFeatureKey = 'meditation';\n\nexport interface MeditationModuleState {\n  meditation: MeditationState;\n}\n\nexport const reducers = {\n  meditation: reducer,\n};\n\nexport const selectMeditationModuleState =\n  createFeatureSelector(meditationFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationRoutingModule.html":{"url":"modules/MeditationRoutingModule.html","title":"module - MeditationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'categories', pathMatch: 'full' },\n  {\n    path: 'categories',\n    component: CategoriesComponent,\n    canActivate: [CategoriesGuard],\n  },\n  {\n    path: 'meditations',\n    component: MeditationsComponent,\n    canActivate: [MeditationsGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MeditationRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationState.html":{"url":"interfaces/MeditationState.html","title":"interface - MeditationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            isCategoriesError\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoaded\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoading\n                                        \n                                \n                                \n                                        \n                                            isMeditationsError\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoaded\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoading\n                                        \n                                \n                                \n                                        \n                                            meditations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         Category[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meditations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditations:         Meditation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meditation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadCategoriesSuccess,\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n  loadCategories,\n  loadCategoriesFailure,\n} from '@meditation/store/actions/meditation.actions';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\nexport interface MeditationState {\n  // data\n  meditations: Meditation[];\n  categories: Category[];\n  // state\n  isCategoriesLoading: boolean;\n  isCategoriesLoaded: boolean;\n  isCategoriesError: boolean;\n  isMeditationsLoading: boolean;\n  isMeditationsLoaded: boolean;\n  isMeditationsError: boolean;\n}\n\nexport const initialState: MeditationState = {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n};\n\nconst meditationReducer = createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action);\n\n// Data\nexport const meditationsData = (state: MeditationState) => state.meditations;\nexport const categoriesData = (state: MeditationState) => state.categories;\n// State\nexport const categoriesLoadingState = (state: MeditationState) =>\n  state.isCategoriesLoading;\nexport const categoriesLoadedState = (state: MeditationState) =>\n  state.isCategoriesLoaded;\nexport const categoriesErrorState = (state: MeditationState) =>\n  state.isCategoriesError;\nexport const meditationsLoadingState = (state: MeditationState) =>\n  state.isMeditationsLoading;\nexport const meditationsLoadedState = (state: MeditationState) =>\n  state.isMeditationsLoaded;\nexport const meditationsErrorState = (state: MeditationState) =>\n  state.isMeditationsError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationsComponent.html":{"url":"components/MeditationsComponent.html","title":"component - MeditationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/meditations/meditations.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditations\n            \n\n            \n                styleUrls\n                ./meditations.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditations.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $category\n                            \n                            \n                                $mediaSelection\n                            \n                            \n                                $meditations\n                            \n                            \n                                mediaOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterMeditations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, route: ActivatedRoute, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterMeditations\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterMeditations(meditations: Meditation[], selectedMedia: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditations\n                                    \n                                                Meditation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedMedia\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Meditation[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentModal(meditation: Meditation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditation\n                                    \n                                                Meditation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $meditations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { selectCategoryById } from './../../store/selectors/meditation.selector';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/components/meditation-modal/meditation-modal.component';\n\n// Selectors\nimport { selectMeditationsByCategoryId } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-meditations',\n  templateUrl: './meditations.component.html',\n  styleUrls: ['./meditations.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationsComponent implements OnInit {\n  mediaOptions = [content.media, content.text];\n\n  $mediaSelection = new BehaviorSubject([]);\n  $category: Observable;\n  $meditations: Observable;\n\n  constructor(\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private store: Store,\n  ) {}\n\n  ngOnInit(): void {\n    const { categoryId } = this.route.snapshot.queryParams;\n\n    this.$category = this.store.select(selectCategoryById(categoryId));\n\n    this.$meditations = combineLatest([\n      this.store\n        .select(selectMeditationsByCategoryId(categoryId))\n        .pipe(filter((meditations) => meditations !== null)),\n      this.$mediaSelection,\n    ]).pipe(\n      map(([meditations, selectedMedia]: [Meditation[], ContentTypes[]]) =>\n        this.filterMeditations(meditations, selectedMedia),\n      ),\n    );\n  }\n\n  async presentModal(meditation: Meditation): Promise {\n    const modal = await this.modalController.create({\n      component: MeditationModalComponent,\n      componentProps: { meditation },\n    });\n\n    await modal.present();\n  }\n\n  private filterMeditations(\n    meditations: Meditation[],\n    selectedMedia: ContentTypes[],\n  ): Meditation[] {\n    return meditations.filter((meditation: Meditation) => {\n      for (const media of selectedMedia) {\n        if (meditation[media] === undefined || meditation[media] === null) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./meditations.component.scss\n                \n                ion-header {\n  background: #f9eedb;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MeditationsGuard.html":{"url":"guards/MeditationsGuard.html","title":"guard - MeditationsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MeditationsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/meditations.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/meditations.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadMeditations } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsMeditationsLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class MeditationsGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsMeditationsLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadMeditations()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsLoadEffect.html":{"url":"injectables/MeditationsLoadEffect.html","title":"injectable - MeditationsLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/meditations-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadMeditations$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Injectable()\nexport class MeditationsLoadEffect {\n  loadMeditations$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsService.html":{"url":"injectables/MeditationsService.html","title":"injectable - MeditationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/meditations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMeditationCategories\n                            \n                            \n                                getMeditations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/meditations.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditationCategories\n                        \n                    \n                \n            \n            \n                \ngetMeditationCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditations\n                        \n                    \n                \n            \n            \n                \ngetMeditations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class MeditationsService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getMeditationCategories(): Observable {\n    return this.firestore\n      .collection('meditation_categories')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n\n  getMeditations(): Observable {\n    return this.firestore\n      .collection('meditations')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quote.html":{"url":"interfaces/Quote.html","title":"interface - Quote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/models/quote.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Quote {\n  content: string;\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteLoadEffect.html":{"url":"injectables/QuoteLoadEffect.html","title":"injectable - QuoteLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/effects/quote-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadQuote$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngrxOnInitEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, quoteService: QuoteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quoteService\n                                                  \n                                                        \n                                                                        QuoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngrxOnInitEffects\n                        \n                    \n                \n            \n            \n                \nngrxOnInitEffects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/store/effects/quote-load.effect.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Action\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuote$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n@Injectable()\nexport class QuoteLoadEffect implements OnInitEffects {\n  loadQuote$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(private actions$: Actions, private quoteService: QuoteService) {}\n\n  ngrxOnInitEffects(): Action {\n    return loadQuote();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteService.html":{"url":"injectables/QuoteService.html","title":"injectable - QuoteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/services/quote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDailyQuote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/services/quote.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDailyQuote\n                        \n                    \n                \n            \n            \n                \ngetDailyQuote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/services/quote.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  CollectionReference,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Quote } from '@home/models/quote.model';\n\n@Injectable()\nexport class QuoteService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getDailyQuote(): Observable {\n    return this.firestore\n      .collection('quotes', (ref: CollectionReference) =>\n        ref.where('current', '==', true),\n      )\n      .get()\n      .pipe(\n        map(\n          (snapshot: QuerySnapshot) =>\n            snapshot.docs && snapshot.docs[0].data(),\n        ),\n        map((quote: Quote) => quote.content),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextContentComponent.html":{"url":"components/TextContentComponent.html","title":"component - TextContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-modal/text-content/text-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-content\n            \n\n            \n                styleUrls\n                ./text-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-modal/text-content/text-content.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-modal/text-content/text-content.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-content',\n  templateUrl: './text-content.component.html',\n  styleUrls: ['./text-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextContentComponent {\n  @Input()\n  text: string;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n    \n                \n                    ./text-content.component.scss\n                \n                .text {\n  padding: 16px 32px;\n  color: #1f1f1f;\n\n  &__content {\n    text-align: justify;\n    font-size: 14px;\n    line-height: 19px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n            \n            component\n            ButtonsSelectComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/home/mocks/quote.mock.ts\n            \n            variable\n            quoteMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/models/quote.model.ts\n            \n            interface\n            Quote\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/services/quote.service.ts\n            \n            injectable\n            QuoteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/effects/quote-load.effect.ts\n            \n            injectable\n            QuoteLoadEffect\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            interface\n            HomeState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            homeReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            interface\n            HomeModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            homeFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            selectHomeModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectHomeState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuoteHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/category-card/category-card.component.ts\n            \n            component\n            CategoryCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n            \n            component\n            MeditationHeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n            \n            component\n            MeditationItemComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-modal/media-content/media-content.component.ts\n            \n            component\n            MediaContentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-modal/meditation-modal.component.ts\n            \n            component\n            MeditationModalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-modal/text-content/text-content.component.ts\n            \n            component\n            TextContentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/constants/media.constants.ts\n            \n            variable\n            INITIAL_MEDIA_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n            guard\n            CategoriesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n            guard\n            MeditationsGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/category.mock.ts\n            \n            variable\n            categoryMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/meditation.mock.ts\n            \n            variable\n            meditationMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/category.model.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/media.model.ts\n            \n            interface\n            MediaState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            interface\n            Meditation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            variable\n            content\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/meditations/meditations.component.ts\n            \n            component\n            MeditationsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio-state.service.ts\n            \n            injectable\n            AudioStateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio.service.ts\n            \n            injectable\n            AudioService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/meditations.service.ts\n            \n            injectable\n            MeditationsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/categories-load.effect.ts\n            \n            injectable\n            CategoriesLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/meditations-load.effect.ts\n            \n            injectable\n            MeditationsLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            interface\n            MeditationState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            interface\n            MeditationModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            meditationFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            selectMeditationModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoriesHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoryById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsByCategoryId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/utils/time.utils.ts\n            \n            variable\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^12.2.9\n        \n            @angular/common : ~12.1.1\n        \n            @angular/core : ~12.1.1\n        \n            @angular/fire : ~7.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~12.1.1\n        \n            @angular/platform-browser : ~12.1.1\n        \n            @angular/platform-browser-dynamic : ~12.1.1\n        \n            @angular/router : ~12.1.1\n        \n            @capacitor/android : 3.2.5\n        \n            @capacitor/app : 1.0.5\n        \n            @capacitor/core : 3.2.5\n        \n            @capacitor/haptics : 1.1.2\n        \n            @capacitor/ios : 3.2.5\n        \n            @capacitor/keyboard : 1.1.2\n        \n            @capacitor/status-bar : 1.0.5\n        \n            @ionic-native/core : ^5.36.0\n        \n            @ionic-native/splash-screen : ^5.36.0\n        \n            @ionic-native/status-bar : ^5.36.0\n        \n            @ionic/angular : ^5.5.2\n        \n            @ngrx/effects : ^12.4.0\n        \n            @ngrx/store : ^12.4.0\n        \n            @ngrx/store-devtools : ^12.4.0\n        \n            @types/howler : ^2.2.4\n        \n            core-js : ^3.18.1\n        \n            firebase : ^9.1.1\n        \n            globalthis : ^1.0.2\n        \n            howler : ^2.2.3\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ButtonsSelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContentTypes   (src/.../meditation.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n    \n        \n            \n                \n                    \n                    ContentTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            categoriesData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoryMock   (src/.../category.mock.ts)\n                        \n                        \n                            content   (src/.../meditation.model.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            formatTime   (src/.../time.utils.ts)\n                        \n                        \n                            homeFeatureKey   (src/.../home.state.ts)\n                        \n                        \n                            homeReducer   (src/.../home.reducer.ts)\n                        \n                        \n                            INITIAL_MEDIA_STATE   (src/.../media.constants.ts)\n                        \n                        \n                            initialState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            initialState   (src/.../home.reducer.ts)\n                        \n                        \n                            loadCategories   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditations   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadQuote   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteFailure   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteSuccess   (src/.../home.actions.ts)\n                        \n                        \n                            meditationFeatureKey   (src/.../meditation.state.ts)\n                        \n                        \n                            meditationMock   (src/.../meditation.mock.ts)\n                        \n                        \n                            meditationReducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            quoteData   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteErrorState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadedState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadingState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteMock   (src/.../quote.mock.ts)\n                        \n                        \n                            reducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            reducer   (src/.../home.reducer.ts)\n                        \n                        \n                            reducers   (src/.../meditation.state.ts)\n                        \n                        \n                            reducers   (src/.../home.state.ts)\n                        \n                        \n                            selectCategories   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoriesHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoryById   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectHomeModuleState   (src/.../home.state.ts)\n                        \n                        \n                            selectHomeState   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsQuoteLoaded   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsQuoteLoading   (src/.../home.selector.ts)\n                        \n                        \n                            selectMeditationModuleState   (src/.../meditation.state.ts)\n                        \n                        \n                            selectMeditations   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsByCategoryId   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationState   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectQuote   (src/.../home.selector.ts)\n                        \n                        \n                            selectQuoteHasError   (src/.../home.selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/store/reducers/meditation.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoriesData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.categories\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeditationState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.meditations\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/category.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoryMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'id',\n  name: 'name',\n  description: 'description',\n  imageUrl: 'http://domain.com',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  media: 'media',\n  text: 'text',\n} as const\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/utils/time.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (time: number, format: string): string =>\n  moment.utc(time * 1000).format(format)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  home: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHomeModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(homeFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HomeState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.quote\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/constants/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_MEDIA_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  canPlay: false,\n  duration: '00:00',\n  durationSec: 0,\n  time: '00:00',\n  timeSec: 0,\n  mediaType: '',\n  loadStart: false,\n  playing: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/actions/meditation.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Categories Page] Load Categories',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Meditations Page] Load Meditations',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/actions/home.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home | Effects Init] Load Quote')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/reducers/meditation.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'meditation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  meditation: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(meditationFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/meditation.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'id',\n  categoryId: 'id',\n  title: 'title',\n  text: `text`,\n  media: 'https://domain.com',\n  imageUrl: 'image.jpg',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/mocks/quote.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        quoteMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quote\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'Test quote',\n  current: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/selectors/meditation.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoriesHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoryById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectCategories,\n    (categories: Category[]) =>\n      categories &&\n      categories.find((category: Category) => category.id === categoryId),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsByCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectMeditations,\n    (meditations: Meditation[]) =>\n      meditations &&\n      meditations.filter(\n        (meditation: Meditation) => meditation.categoryId === categoryId,\n      ),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationModuleState,\n  (state: MeditationModuleState) => state.meditation,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/selectors/home.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectHomeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeModuleState,\n  (state: HomeModuleState) => state.home,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectHomeState, quoteData)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuoteHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteErrorState,\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
