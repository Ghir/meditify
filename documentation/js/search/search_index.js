var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.556,1,1.063]],["body/components/AppComponent.html",[0,0.861,1,1.772,2,1.125,3,0.216,4,0.216,5,1.353,6,1.353,7,1.353,8,1.353,9,0.188,10,2.892,11,1.353,12,2.706,13,2.538,14,3.966,15,1.856,16,5.333,17,1.856,18,4.673,19,0.337,20,1.856,21,5.738,22,1.056,23,3.407,24,6.21,25,5.398,26,5.398,27,1.056,28,3.407,29,1.052,30,0.024,31,0.99,32,0.306,33,1.052,34,3.407,35,1.353,36,1.929,37,0.568,38,0.438,39,1.784,40,3.153,41,2.553,42,2.892,43,2.553,44,2.892,45,0.216,46,0.474,47,2.595,48,3.407,49,3.407,50,3.407,51,3.407,52,2.645,53,1.274,54,1.353,55,1.856,56,1.856,57,1.353,58,2.279,59,1.353,60,1.353,61,1.052,62,1.191,63,1.353,64,0.989,65,1.353,66,1.052,67,0.821,68,1.353,69,0.989,70,1.353,71,1.052,72,1.052,73,1.353,74,1.052,75,1.353,76,1.052,77,1.353,78,1.052,79,1.353,80,0.989,81,1.353,82,1.052,83,1.119,84,1.052,85,1.353,86,1.353,87,0.016,88,0.016]],["title/modules/AppModule.html",[89,1.675,90,2.322]],["body/modules/AppModule.html",[1,2.102,2,0.85,3,0.224,4,0.224,9,0.195,25,4.063,26,4.063,30,0.025,37,0.685,38,0.454,39,1.849,40,3.231,41,2.645,42,2.997,43,2.645,44,2.997,45,0.224,46,0.491,87,0.016,88,0.016,90,4.467,91,1.402,92,2.329,93,2.997,94,2.997,95,2.997,96,2.997,97,3.863,98,2.946,99,1.998,100,2.173,101,3.53,102,3.231,103,2.507,104,4.787,105,4.787,106,3.53,107,2.507,108,4.787,109,2.997,110,2.382,111,4.787,112,1.718,113,4.787,114,2.645,115,3.53,116,3.53,117,2.645,118,1.573,119,3.53,120,2.997,121,2.645,122,1.849,123,2.645,124,4.787,125,1.602,126,3.53,127,2.645,128,3.53,129,3.587,130,3.53,131,3.53,132,2.382,133,3.53,134,1.402,135,3.53,136,3.53,137,3.53,138,3.53,139,3.53,140,3.53,141,3.53,142,2.645,143,3.53,144,3.53]],["title/modules/AppRoutingModule.html",[89,1.675,97,2.118]],["body/modules/AppRoutingModule.html",[3,0.287,4,0.287,9,0.25,30,0.025,37,0.556,38,0.581,45,0.287,46,0.629,52,3.182,53,0.958,87,0.019,88,0.019,91,1.795,97,3.46,103,2.367,107,2.944,112,2.199,125,2.776,145,4.52,146,3.386,147,5.621,148,4.212,149,1.581,150,4.584,151,3.836,152,3.836,153,3.836,154,5.621,155,4.52,156,4.52,157,4.52,158,4.52,159,4.52,160,4.52,161,4.52,162,3.05]],["title/injectables/AudioService.html",[163,0.939,164,1.948]],["body/injectables/AudioService.html",[3,0.192,4,0.192,9,0.167,14,2.57,19,0.3,20,1.709,22,0.685,27,1.391,29,1.683,30,0.025,31,1.012,32,0.489,33,1.683,35,2.287,36,3.56,37,0.495,38,0.389,45,0.192,46,0.421,47,2.911,87,0.015,88,0.015,149,2.014,163,1.174,164,2.436,165,1.474,166,2.57,167,1.104,168,4.249,169,4.303,170,4.888,171,5.758,172,4.303,173,4.303,174,3.028,175,2.854,176,4.303,177,2.904,178,4.303,179,2.944,180,3.028,181,5.006,182,3.028,183,3.028,184,4.303,185,3.081,186,3.028,187,4.303,188,4.303,189,3.028,190,2.123,191,1.059,192,1.059,193,2.436,194,3.653,195,0.995,196,1.474,197,3.028,198,2.269,199,3.028,200,1.474,201,4.303,202,4.303,203,4.303,204,3.028,205,3.028,206,3.028,207,4.249,208,3.028,209,3.028,210,2.044,211,2.57,212,2.044,213,2.57,214,2.044,215,3.028,216,4.303,217,2.57,218,4.303,219,6.154,220,4.303,221,3.028,222,3.028,223,3.028,224,1.952,225,3.028,226,3.028,227,3.028,228,3.028,229,2.57,230,3.028,231,3.028,232,1.864,233,3.028]],["title/injectables/AudioStateService.html",[163,0.939,175,1.802]],["body/injectables/AudioStateService.html",[3,0.181,4,0.181,9,0.158,19,0.282,20,1.637,22,1.094,27,1.399,29,1.273,30,0.025,31,0.765,32,0.475,33,1.273,35,1.922,36,3.184,37,0.58,38,0.367,45,0.181,46,0.397,47,2.853,72,1.811,87,0.014,88,0.014,99,3.002,149,1.854,163,1.125,165,1.388,167,1.057,168,2.42,170,2.42,175,2.158,190,2.486,191,1.441,192,1.693,193,2.006,195,0.937,210,3.267,211,2.42,212,2.782,213,2.42,214,2.782,217,2.42,224,1.294,229,2.42,234,5.354,235,2.42,236,4.841,237,4.841,238,4.841,239,4.122,240,3.499,241,2.852,242,4.122,243,2.852,244,2.852,245,2.852,246,4.122,247,4.122,248,4.122,249,2.852,250,4.122,251,2.852,252,4.841,253,2.852,254,2.852,255,2.852,256,2.852,257,3.462,258,2.852,259,2.42,260,2.852,261,1.209,262,2.42,263,2.136,264,2.852,265,2.852,266,2.782,267,2.42,268,0.937,269,2.42,270,2.852,271,2.852,272,2.852,273,2.852,274,4.122,275,2.852,276,6.616,277,2.852,278,2.852,279,2.852,280,2.852,281,5.863,282,2.74,283,5.863,284,3.088,285,2.852,286,4.122,287,2.136,288,2.852,289,2.136,290,2.852,291,1.614,292,3.088,293,2.852,294,3.088,295,2.852]],["title/components/ButtonsSelectComponent.html",[0,0.556,61,1.063]],["body/components/ButtonsSelectComponent.html",[0,0.757,1,0.832,2,0.953,3,0.171,4,0.171,5,1.07,6,1.07,7,1.07,8,1.07,9,0.149,11,1.07,12,2.6,13,2.439,15,1.571,17,1.571,19,0.267,20,1.571,22,1.059,27,1.299,29,0.832,30,0.024,31,0.87,32,0.515,33,0.832,35,1.07,36,2.239,37,0.267,38,0.346,45,0.171,46,0.375,53,0.993,54,1.07,55,1.571,56,1.571,57,1.07,58,2.05,59,1.07,60,1.07,61,1.594,62,2.131,63,1.07,64,0.782,65,1.07,66,0.832,67,0.649,68,1.07,69,0.782,70,1.07,71,0.832,72,0.832,73,1.07,74,0.832,75,1.07,76,0.832,77,1.07,78,0.832,79,1.07,80,0.782,81,1.07,82,0.832,83,0.885,84,0.832,85,1.07,86,1.07,87,0.013,88,0.013,149,0.942,191,1.639,192,2.01,193,1.925,232,1.658,291,2.239,296,4.451,297,4.451,298,4.451,299,2.287,300,1.677,301,1.677,302,3.955,303,4.686,304,3.955,305,3.955,306,2.071,307,4.686,308,4.686,309,2.963,310,4.686,311,3.955,312,1.311,313,2.694,314,2.694,315,2.694,316,3.511,317,3.955,318,2.694,319,1.143,320,2.704,321,2.963,322,4.686,323,2.694,324,2.694,325,2.694,326,2.694,327,3.955,328,2.694,329,2.694,330,2.694,331,3.955,332,2.669,333,3.162,334,2.694,335,1.658,336,2.019,337,2.694,338,1.311,339,1.311,340,2.287,341,2.694,342,1.411,343,2.694,344,2.694,345,2.694,346,2.694,347,2.694,348,3.955,349,4.667,350,3.357,351,3.357,352,2.652,353,3.357,354,2.454,355,2.694,356,2.287,357,2.694,358,2.694,359,2.694,360,2.287,361,2.287,362,2.694]],["title/modules/ButtonsSelectModule.html",[89,1.675,363,2.118]],["body/modules/ButtonsSelectModule.html",[2,1.08,3,0.285,4,0.285,9,0.248,30,0.024,37,0.631,38,0.576,45,0.285,46,0.624,61,2.176,62,1.568,87,0.019,88,0.019,91,1.78,92,2.722,98,3.442,99,2.538,100,2.759,102,3.774,103,2.348,107,2.929,162,3.774,296,3.359,297,3.359,298,3.359,363,4.182,364,3.805,365,3.805,366,3.805,367,3.805,368,4.483,369,4.19,370,3.025,371,4.19,372,3.025,373,2.759,374,4.483]],["title/components/CategoriesComponent.html",[0,0.556,64,0.999]],["body/components/CategoriesComponent.html",[0,0.824,1,0.969,2,1.063,3,0.199,4,0.199,5,1.246,6,1.246,7,1.246,8,1.246,9,0.174,11,1.246,12,2.671,13,2.505,15,1.752,17,1.752,19,0.31,22,0.709,27,0.997,29,0.969,30,0.024,31,0.947,32,0.396,33,0.969,37,0.577,38,0.403,45,0.199,46,0.436,53,1.082,54,1.246,55,1.752,56,1.752,57,1.246,58,2.199,59,1.246,60,1.246,61,0.969,62,1.097,63,1.246,64,1.607,65,1.246,66,0.969,67,1.063,68,1.246,69,0.911,70,1.246,71,0.969,72,0.969,73,1.246,74,0.969,75,1.246,76,0.969,77,1.246,78,0.969,79,1.246,80,0.911,81,1.246,82,0.969,83,1.45,84,1.362,85,1.246,86,1.246,87,0.015,88,0.015,118,1.031,134,2.403,167,1.131,190,2.164,191,1.097,192,1.097,195,1.031,200,1.526,268,1.031,300,1.871,301,1.871,319,1.33,335,3.141,336,3.306,338,2.147,339,1.526,352,2.889,375,2.663,376,3.826,377,5.103,378,4.412,379,2.117,380,4.412,381,4.412,382,1.643,383,1.776,384,2.35,385,2.117,386,2.35,387,2.663,388,2.117,389,3.306,390,2.35,391,3.745,392,3.306,393,2.35,394,3.137,395,4.534,396,4.412,397,3.137,398,2.663,399,2.663,400,3.137,401,3.745,402,3.137,403,3.137,404,4.412,405,3.137,406,2.663]],["title/guards/CategoriesGuard.html",[407,2.578,408,2.118]],["body/guards/CategoriesGuard.html",[3,0.267,4,0.267,9,0.232,19,0.415,20,2.132,22,0.949,27,1.213,29,1.297,30,0.025,31,0.78,32,0.377,33,1.297,35,1.668,37,0.662,38,0.54,45,0.267,46,0.584,87,0.018,88,0.018,112,2.044,118,1.38,134,2.616,163,1.465,190,2.508,195,1.38,200,2.044,224,1.905,261,1.781,312,2.044,379,2.834,383,2.377,385,2.834,408,3.303,409,2.377,410,3.565,411,4.936,412,4.2,413,4.2,414,4.556,415,4.556,416,2.044,417,2.585,418,2.585,419,3.147,420,2.585,421,4.2,422,4.556,423,4.2,424,3.565]],["title/injectables/CategoriesLoadEffect.html",[163,0.939,425,2.322]],["body/injectables/CategoriesLoadEffect.html",[3,0.242,4,0.242,9,0.21,19,0.376,22,1.138,27,1.138,29,1.175,30,0.025,31,0.706,32,0.341,33,1.175,37,0.647,38,0.489,45,0.242,46,0.529,47,2.449,67,1.359,87,0.017,88,0.017,122,1.993,163,1.374,165,1.852,167,1.291,191,1.331,192,1.331,195,1.25,196,1.852,261,1.614,268,1.25,376,3.098,382,1.993,416,3.184,417,3.694,418,2.342,425,3.397,426,4.788,427,2.568,428,2.851,429,3.426,430,3.23,431,4.226,432,3.771,433,5.034,434,4.226,435,5.034,436,5.034,437,3.807,438,3.771,439,5.034,440,3.23,441,2.851,442,1.993,443,2.851,444,2.568,445,2.851]],["title/interfaces/Category.html",[67,0.829,446,0.939]],["body/interfaces/Category.html",[3,0.305,4,0.305,9,0.265,19,0.474,30,0.024,31,1.213,32,0.586,45,0.305,67,1.404,87,0.02,88,0.02,167,1.495,179,3.224,446,1.308,447,2.175,448,4.069,449,5.546,450,4.895,451,4.895]],["title/components/CategoryCardComponent.html",[0,0.556,66,1.063]],["body/components/CategoryCardComponent.html",[0,0.868,1,1.07,2,1.138,3,0.22,4,0.22,5,1.376,6,1.376,7,1.376,8,1.376,9,0.192,11,1.376,12,2.713,13,2.544,15,1.877,17,1.877,19,0.343,22,1.216,27,1.068,30,0.024,31,0.877,32,0.311,37,0.467,38,0.445,45,0.22,46,0.482,53,1.14,54,1.376,55,1.877,56,1.877,57,1.376,58,2.295,59,1.376,60,1.376,61,1.07,62,1.211,63,1.376,64,1.006,65,1.376,66,1.784,67,1.655,68,1.376,69,1.006,70,1.376,71,1.07,72,1.07,73,1.376,74,1.07,75,1.376,76,1.07,77,1.376,78,1.07,79,1.376,80,1.006,81,1.376,82,1.07,83,1.138,84,1.07,85,1.376,86,1.376,87,0.016,88,0.016,268,1.138,300,2.004,301,2.004,306,2.475,319,1.469,320,2.475,332,3.189,333,2.338,342,1.814,360,2.94,382,1.814,390,2.595,401,4.566,452,4.566,453,4.03,454,2.94,455,5.379,456,4.726,457,4.726,458,4.011,459,3.464,460,3.464,461,3.464,462,3.464,463,3.464]],["title/components/HomeComponent.html",[0,0.556,69,0.999]],["body/components/HomeComponent.html",[0,0.845,1,1.015,2,1.098,3,0.209,4,0.209,5,1.305,6,1.305,7,1.305,8,1.305,9,0.182,11,1.305,12,2.691,13,2.524,15,1.81,17,1.81,19,0.325,22,0.743,27,1.03,29,1.015,30,0.024,31,0.971,32,0.409,33,1.015,37,0.559,38,0.422,45,0.209,46,0.457,52,2.961,53,1.109,54,1.305,55,1.81,56,1.81,57,1.305,58,2.244,59,1.305,60,1.305,61,1.015,62,1.149,63,1.305,64,0.954,65,1.305,66,1.015,67,0.791,68,1.305,69,1.64,70,1.305,71,1.015,72,1.015,73,1.305,74,1.015,75,1.305,76,1.015,77,1.305,78,1.015,79,1.305,80,0.954,81,1.305,82,1.015,83,1.497,84,1.015,85,1.305,86,1.305,87,0.015,88,0.015,118,1.08,134,2.439,167,1.169,190,2.219,191,1.149,192,1.149,195,1.08,200,1.599,300,1.933,301,1.933,319,1.393,338,2.218,339,2.218,342,2.386,352,2.579,354,1.721,356,2.789,379,2.217,383,1.86,388,2.217,389,2.462,398,2.789,399,2.789,464,2.789,465,5.232,466,4.557,467,2.693,468,4.557,469,4.557,470,2.462,471,3.286,472,3.868,473,2.462,474,3.286,475,2.789,476,2.462,477,3.286,478,3.286,479,3.286,480,3.286,481,2.462]],["title/modules/HomeModule.html",[89,1.675,482,2.322]],["body/modules/HomeModule.html",[2,0.923,3,0.243,4,0.243,9,0.212,30,0.025,37,0.682,38,0.493,39,2.006,45,0.243,46,0.533,69,1.866,87,0.017,88,0.017,91,1.522,92,2.461,98,3.112,99,2.169,100,2.358,102,3.412,103,2.648,107,2.648,117,2.871,118,1.259,121,2.871,122,2.006,123,3.789,125,1.738,127,2.871,134,2.008,142,3.789,196,1.865,369,3.789,370,2.586,371,3.789,372,2.586,373,2.358,482,4.585,483,3.252,484,3.252,485,3.252,486,3.252,487,3.955,488,3.637,489,3.832,490,4.292,491,2.871,492,3.832,493,3.252,494,3.252,495,2.586,496,2.648,497,3.832,498,2.586,499,3.832,500,3.252,501,3.832,502,3.832]],["title/interfaces/HomeModuleState.html",[446,0.939,503,2.322]],["body/interfaces/HomeModuleState.html",[3,0.296,4,0.296,9,0.258,19,0.461,30,0.024,32,0.418,37,0.613,45,0.411,52,3.827,87,0.019,88,0.019,118,1.531,134,1.85,149,2.169,167,1.469,446,1.271,447,2.114,495,3.144,496,2.44,503,3.866,504,3.491,505,3.982,506,3.955,507,5.728,508,3.511,509,3.491,510,3.955]],["title/modules/HomePageRoutingModule.html",[89,1.675,487,2.118]],["body/modules/HomePageRoutingModule.html",[0,0.781,2,1.165,3,0.307,4,0.307,9,0.267,30,0.024,37,0.624,38,0.622,45,0.307,46,0.673,69,1.701,87,0.02,88,0.02,91,1.92,103,2.532,107,3.068,112,2.353,125,2.86,146,3.623,148,4.39,149,1.691,150,3.623,162,3.263,487,3.606,493,4.105,511,4.836,512,4.105]],["title/interfaces/HomeState.html",[446,0.939,505,2.118]],["body/interfaces/HomeState.html",[3,0.217,4,0.217,9,0.189,19,0.338,30,0.025,32,0.515,37,0.463,45,0.404,87,0.016,88,0.016,118,1.124,149,2.226,167,1.202,177,4.629,179,2.425,282,3.025,291,3.722,312,3.2,416,1.665,446,0.934,447,1.552,467,2.888,505,4.134,508,1.936,513,2.563,514,5.503,515,5.503,516,5.503,517,3.879,518,3.511,519,3.162,520,3.162,521,3.162,522,2.904,523,3.607,524,3.162,525,2.106,526,2.563,527,2.106,528,2.904,529,2.563,530,2.904,531,2.563,532,2.904,533,2.563,534,2.904,535,2.563,536,2.904]],["title/components/MediaContentComponent.html",[0,0.556,71,1.063]],["body/components/MediaContentComponent.html",[0,0.741,1,0.803,2,0.928,3,0.165,4,0.165,5,1.033,6,1.033,7,1.033,8,1.033,9,0.144,11,1.033,12,2.583,13,2.423,15,1.531,17,1.531,19,0.257,22,1.038,27,1.328,30,0.024,31,0.715,32,0.509,37,0.502,38,0.334,45,0.165,46,0.362,53,1.306,54,1.033,55,1.531,56,1.531,57,1.033,58,2.016,59,1.033,60,1.033,61,0.803,62,0.91,63,1.033,64,0.755,65,1.033,66,0.803,67,0.627,68,1.033,69,0.755,70,1.033,71,1.568,72,1.988,73,1.033,74,0.803,75,1.033,76,0.803,77,1.033,78,0.803,79,1.033,80,0.755,81,1.033,82,0.803,83,0.855,84,1.418,85,1.033,86,1.033,87,0.013,88,0.013,185,2.372,191,0.91,192,0.91,193,2.234,232,1.601,257,2.825,266,3.098,267,2.208,268,0.855,269,2.208,300,1.634,301,1.634,306,2.018,309,2.888,316,4.401,319,1.103,320,2.658,321,3.803,333,3.964,335,2.372,338,2.234,339,2.47,342,2.658,349,2.208,350,2.208,351,2.208,352,2.599,353,2.208,354,2.404,392,2.888,393,1.949,473,3.803,475,2.208,537,5.121,538,4.52,539,1.949,540,3.897,541,3.271,542,3.897,543,4.591,544,4.591,545,4.591,546,3.854,547,2.601,548,2.601,549,2.601,550,2.601,551,2.601,552,1.362,553,3.854,554,3.854,555,2.601,556,2.601,557,2.601,558,2.601,559,2.601,560,3.854,561,3.854,562,2.601,563,2.208,564,2.601,565,2.601,566,2.601,567,2.601,568,3.854,569,1.756,570,3.897,571,2.601,572,2.601,573,2.601,574,2.601,575,2.601,576,2.208,577,2.601,578,2.601,579,2.601,580,2.208]],["title/interfaces/MediaState.html",[257,2.118,446,0.939]],["body/interfaces/MediaState.html",[3,0.276,4,0.276,9,0.24,19,0.43,30,0.024,32,0.612,45,0.276,87,0.019,88,0.019,167,1.406,179,3.125,185,4.09,210,4.259,212,4.259,214,4.259,257,3.374,284,4.728,287,4.728,289,4.728,292,4.728,294,4.728,312,3.352,446,1.185,447,1.97,581,3.686]],["title/interfaces/Meditation.html",[53,0.729,446,0.939]],["body/interfaces/Meditation.html",[3,0.263,4,0.263,9,0.229,19,0.409,30,0.024,32,0.598,45,0.373,53,1.127,72,2.026,83,2.156,84,1.641,87,0.018,88,0.018,149,1.859,167,1.363,179,3.229,386,4.644,446,1.129,447,1.877,450,4.644,451,4.644,525,4.203,582,2.792,583,4.644,584,2.792,585,5.316,586,4.137]],["title/components/MeditationHeaderComponent.html",[0,0.556,74,1.063]],["body/components/MeditationHeaderComponent.html",[0,0.844,1,1.013,2,1.096,3,0.208,4,0.208,5,1.302,6,1.302,7,1.302,8,1.302,9,0.181,11,1.302,12,2.69,13,2.523,15,1.807,17,1.807,19,0.324,22,1.181,27,1.029,30,0.024,31,0.845,32,0.294,37,0.45,38,0.422,45,0.208,46,0.456,53,1.398,54,1.302,55,1.807,56,1.807,57,1.302,58,2.242,59,1.302,60,1.302,61,1.013,62,1.147,63,1.302,64,0.952,65,1.302,66,1.013,67,1.516,68,1.302,69,0.952,70,1.302,71,1.013,72,1.013,73,1.302,74,1.743,75,1.302,76,1.013,77,1.302,78,1.013,79,1.302,80,0.952,81,1.302,82,1.013,83,1.077,84,1.013,85,1.302,86,1.302,87,0.015,88,0.015,268,1.077,300,1.93,301,1.93,306,2.383,319,1.391,320,2.383,332,3.071,335,2.018,338,2.747,339,2.543,342,2.383,354,1.717,382,1.717,387,2.784,392,3.41,393,2.457,458,3.863,476,2.457,569,2.213,580,2.784,587,3.916,588,3.916,589,2.784,590,3.916,591,5.227,592,4.551,593,4.551,594,4.551,595,3.279,596,3.279,597,3.863,598,3.279,599,2.784,600,2.457,601,3.279]],["title/components/MeditationItemComponent.html",[0,0.556,76,1.063]],["body/components/MeditationItemComponent.html",[0,0.831,1,0.984,2,1.074,3,0.202,4,0.202,5,1.265,6,1.265,7,1.265,8,1.265,9,0.176,11,1.265,12,2.677,13,2.511,15,1.771,17,1.771,19,0.315,22,1.163,27,1.26,30,0.024,31,0.828,32,0.4,37,0.441,38,0.409,45,0.202,46,0.443,53,1.454,54,1.265,55,1.771,56,1.771,57,1.265,58,2.214,59,1.265,60,1.265,61,0.984,62,1.114,63,1.265,64,0.925,65,1.265,66,0.984,67,0.767,68,1.265,69,0.925,70,1.265,71,0.984,72,0.984,73,1.265,74,0.984,75,1.265,76,1.721,77,1.265,78,0.984,79,1.265,80,0.925,81,1.265,82,0.984,83,1.046,84,1.928,85,1.265,86,1.265,87,0.015,88,0.015,167,1.144,191,1.114,192,1.114,193,1.55,268,1.046,300,1.891,301,1.891,306,2.335,309,3.341,316,3.855,319,1.351,320,2.335,321,3.341,332,3.009,333,2.149,338,2.17,339,2.17,342,1.668,354,1.668,361,4.368,473,2.386,552,1.668,563,2.704,569,2.149,587,4.396,600,2.386,602,4.396,603,2.704,604,5.146,605,5.146,606,4.459,607,4.459,608,3.185,609,3.185,610,3.785,611,3.185,612,3.185,613,3.185,614,3.185]],["title/components/MeditationModalComponent.html",[0,0.556,78,1.063]],["body/components/MeditationModalComponent.html",[0,0.625,1,0.61,2,0.752,3,0.126,4,0.126,5,0.785,6,0.785,7,0.785,8,0.785,9,0.109,11,0.785,12,2.435,13,2.284,15,1.24,17,1.24,19,0.195,20,1.24,22,0.706,27,1.433,29,1.195,30,0.025,31,0.889,32,0.495,33,1.195,35,2.117,36,3.47,37,0.527,38,0.254,39,1.035,45,0.126,46,0.275,47,0.962,53,1.344,54,0.785,55,1.24,56,1.24,57,0.785,58,1.746,59,0.785,60,0.785,61,0.61,62,0.691,63,0.785,64,0.574,65,0.785,66,0.61,67,0.476,68,0.785,69,0.574,70,0.785,71,0.61,72,0.61,73,0.785,74,0.61,75,0.785,76,0.61,77,0.785,78,1.358,79,0.785,80,0.574,81,0.785,82,0.61,83,1.026,84,1.646,85,0.785,86,0.785,87,0.011,88,0.011,164,3.017,167,0.801,175,2.508,185,1.922,190,1.641,191,1.354,192,1.675,195,0.649,196,0.962,198,1.481,224,0.897,240,2.65,261,0.838,268,0.649,300,1.324,301,1.324,306,1.635,312,0.962,319,0.838,320,1.635,336,1.481,338,0.962,339,0.962,340,2.65,352,1.119,354,1.635,388,1.334,389,1.481,390,2.9,391,1.677,395,1.481,420,1.922,442,1.035,481,1.481,527,1.922,542,3.285,552,1.035,584,3.729,590,1.481,597,2.65,599,1.677,600,1.481,610,2.65,615,5.428,616,4.315,617,1.677,618,3.285,619,3.871,620,2.339,621,3.871,622,3.122,623,3.285,624,3.285,625,5.09,626,4.828,627,4.789,628,4.398,629,4.398,630,3.733,631,3.122,632,4.398,633,4.398,634,3.871,635,3.871,636,1.677,637,1.976,638,1.976,639,1.976,640,1.976,641,1.976,642,3.122,643,1.976,644,2.65,645,1.976,646,1.976,647,1.976,648,1.976,649,3.122,650,3.122,651,3.122,652,3.122,653,3.122,654,3.871,655,1.976,656,1.976,657,3.285,658,3.733,659,1.976,660,1.976,661,1.976,662,1.976,663,1.976,664,1.976,665,1.481,666,1.976,667,1.677,668,1.677,669,1.976,670,1.976,671,3.122,672,3.122,673,1.976,674,1.976,675,3.122,676,1.976,677,1.976,678,1.976,679,1.976,680,1.976,681,1.976,682,1.976,683,1.976,684,3.122,685,1.976,686,1.976,687,1.976,688,1.976,689,1.976]],["title/modules/MeditationModule.html",[89,1.675,690,2.322]],["body/modules/MeditationModule.html",[2,0.656,3,0.173,4,0.173,9,0.151,30,0.025,37,0.688,38,0.35,39,1.427,45,0.173,46,0.379,62,0.953,64,1.675,66,1.782,71,1.782,74,1.782,76,1.782,78,1.888,80,1.675,82,1.782,87,0.013,88,0.013,91,1.584,92,1.941,98,2.455,99,1.543,100,1.677,102,2.691,103,2.088,107,2.088,117,2.042,118,0.895,121,2.042,122,1.427,123,2.988,127,2.042,134,1.584,142,2.988,164,3.267,175,3.022,196,1.326,198,2.042,363,3.552,367,2.313,369,2.988,370,1.839,371,2.988,372,1.839,373,1.677,408,2.455,409,1.543,425,2.691,429,3.022,445,2.042,453,2.042,490,3.385,491,2.042,496,2.088,500,3.385,538,2.042,588,2.042,602,2.042,616,1.839,667,2.313,668,2.313,690,4.743,691,2.313,692,2.313,693,2.313,694,2.313,695,3.552,696,2.725,697,3.988,698,2.725,699,2.725,700,2.313,701,2.313,702,2.725,703,2.042,704,3.988,705,2.725,706,2.725,707,2.725,708,2.313,709,2.313,710,3.988,711,2.725,712,2.725,713,1.839,714,2.725,715,2.042,716,1.839,717,2.725,718,2.725,719,2.313,720,2.455,721,2.313,722,2.725,723,2.725]],["title/interfaces/MeditationModuleState.html",[446,0.939,724,2.322]],["body/interfaces/MeditationModuleState.html",[3,0.296,4,0.296,9,0.258,19,0.461,30,0.024,32,0.418,37,0.613,45,0.411,53,1.433,87,0.019,88,0.019,118,1.531,134,1.85,149,2.169,167,1.469,446,1.271,447,2.114,496,3,506,3.955,508,3.242,713,3.144,724,3.866,725,3.491,726,3.982,727,5.728,728,3.491,729,3.955]],["title/modules/MeditationRoutingModule.html",[89,1.675,695,2.118]],["body/modules/MeditationRoutingModule.html",[0,0.891,2,1.057,3,0.279,4,0.279,9,0.243,30,0.025,37,0.659,38,0.564,45,0.279,46,0.61,64,1.602,80,1.602,87,0.019,88,0.019,91,1.743,103,2.298,107,2.89,112,2.135,125,2.739,146,3.288,148,4.135,149,1.535,150,4.523,151,3.725,152,3.725,153,3.725,162,2.962,376,3.397,408,3.397,409,2.484,411,4.135,512,3.725,695,3.397,708,3.725,709,3.725,719,3.725,720,3.397,721,3.725,730,4.388,731,2.484]],["title/interfaces/MeditationState.html",[446,0.939,726,2.118]],["body/interfaces/MeditationState.html",[3,0.17,4,0.17,9,0.148,19,0.264,30,0.025,32,0.545,37,0.508,45,0.406,53,1.089,67,1.238,87,0.013,88,0.013,118,0.877,149,2.236,167,1.007,177,4.669,268,0.877,282,3.242,291,3.828,312,3.291,376,3.645,382,1.397,416,1.298,417,2.417,418,1.642,437,2.65,444,2.65,446,0.728,447,1.211,508,1.51,517,3.468,518,2.942,523,3.145,524,2.65,525,2.417,527,1.642,552,1.397,726,4.162,731,3.352,732,1.999,733,5.158,734,5.158,735,5.158,736,5.158,737,5.158,738,5.158,739,2.417,740,2.65,741,2.65,742,1.999,743,2.265,744,1.999,745,2.265,746,1.999,747,2.265,748,1.999,749,2.265,750,1.999,751,2.265,752,1.999,753,2.265,754,1.999,755,2.265,756,1.999,757,2.265,758,1.999,759,2.265]],["title/components/MeditationsComponent.html",[0,0.556,80,0.999]],["body/components/MeditationsComponent.html",[0,0.777,1,0.723,2,1.038,3,0.149,4,0.149,5,0.93,6,0.93,7,0.93,8,0.93,9,0.129,11,0.93,12,2.529,13,2.372,15,1.414,17,1.414,19,0.232,20,1.414,22,0.805,27,1.321,29,1.331,30,0.025,31,0.962,32,0.489,33,1.331,35,1.711,36,2.015,37,0.614,38,0.301,39,1.226,45,0.149,46,0.326,47,2.655,53,1.387,54,0.93,55,1.414,56,1.414,57,0.93,58,1.912,59,0.93,60,0.93,61,0.723,62,0.819,63,0.93,64,0.68,65,0.93,66,0.723,67,1.248,68,0.93,69,0.68,70,0.93,71,0.723,72,1.1,73,0.93,74,0.723,75,0.93,76,0.723,77,0.93,78,1.331,79,0.93,80,1.398,81,0.93,82,0.723,83,0.769,84,1.1,85,0.93,86,0.93,87,0.012,88,0.012,112,1.139,118,0.769,134,2.252,149,1.507,167,0.913,190,2.197,191,1.245,192,1.245,193,1.733,195,0.769,224,1.955,259,3.658,261,0.993,268,0.769,282,1.325,291,1.325,300,1.51,301,1.51,319,0.993,352,1.325,382,1.226,383,1.325,385,2.403,395,1.754,406,1.987,420,2.191,442,1.226,472,3.658,525,2.191,527,1.441,552,1.226,583,1.754,584,3.496,590,1.754,616,1.58,618,3.658,620,1.754,623,3.658,624,3.658,626,4.631,630,4.087,636,1.987,657,3.022,658,3.022,665,1.754,700,1.987,701,1.987,731,3.308,760,1.987,761,4.309,762,3.561,763,4.309,764,3.561,765,4.309,766,4.815,767,3.561,768,2.341,769,5.456,770,2.341,771,2.341,772,3.561,773,2.341,774,3.561,775,2.341,776,2.341,777,2.341,778,3.561,779,1.754,780,1.754,781,2.341,782,2.341,783,2.341,784,2.341,785,2.341,786,2.341,787,2.341,788,2.341,789,1.754,790,2.341,791,2.341,792,3.561,793,2.341,794,2.341,795,2.341,796,2.341,797,3.561]],["title/guards/MeditationsGuard.html",[407,2.578,720,2.118]],["body/guards/MeditationsGuard.html",[3,0.267,4,0.267,9,0.232,19,0.415,20,2.132,22,0.949,27,1.213,29,1.297,30,0.025,31,0.78,32,0.377,33,1.297,35,1.668,37,0.662,38,0.54,45,0.267,46,0.584,87,0.018,88,0.018,112,2.044,118,1.38,134,2.616,163,1.465,190,2.508,195,1.38,200,2.044,224,1.905,261,1.781,312,2.044,379,2.834,383,2.377,385,2.834,409,2.377,411,4.936,414,4.556,415,4.556,416,2.044,418,2.585,420,2.585,422,4.556,424,3.565,720,3.303,739,2.585,798,3.565,799,4.2,800,4.2,801,3.147,802,4.2,803,4.2]],["title/injectables/MeditationsLoadEffect.html",[163,0.939,716,2.322]],["body/injectables/MeditationsLoadEffect.html",[3,0.242,4,0.242,9,0.21,19,0.376,22,1.138,27,1.138,29,1.175,30,0.025,31,0.706,32,0.341,33,1.175,37,0.647,38,0.489,45,0.242,46,0.529,47,2.449,53,1.196,87,0.017,88,0.017,122,1.993,163,1.374,165,1.852,167,1.291,191,1.331,192,1.331,195,1.25,196,1.852,261,1.614,268,1.25,416,3.184,418,2.342,427,2.568,428,2.851,429,3.426,430,3.23,431,4.226,432,3.771,434,4.226,438,3.771,440,3.23,441,2.851,442,1.993,443,2.851,445,2.851,552,1.993,716,3.397,731,2.849,739,3.694,740,2.568,741,3.807,804,4.788,805,5.034,806,5.034,807,5.034,808,5.034]],["title/injectables/MeditationsService.html",[163,0.939,429,1.802]],["body/injectables/MeditationsService.html",[3,0.258,4,0.258,9,0.225,19,0.402,20,2.088,22,0.919,27,1.317,29,1.256,30,0.025,31,0.755,32,0.365,33,1.256,35,2.088,37,0.646,38,0.523,45,0.258,46,0.566,53,0.862,67,0.979,87,0.018,88,0.018,114,3.046,163,1.434,165,1.979,190,2.704,195,1.336,200,1.979,224,2.385,261,1.724,268,1.336,382,2.129,429,2.753,442,2.129,552,2.129,789,3.938,809,3.451,810,6.158,811,6.158,812,3.451,813,5.227,814,4.066,815,4.462,816,4.066,817,4.066,818,4.945,819,4.462,820,4.066,821,5.257,822,5.257,823,5.257,824,4.066]],["title/interfaces/Quote.html",[446,0.939,467,1.561]],["body/interfaces/Quote.html",[3,0.321,4,0.321,9,0.28,19,0.5,30,0.023,32,0.54,45,0.321,84,2.054,87,0.02,88,0.02,167,1.543,179,2.916,312,3.127,446,1.38,447,2.294,467,2.731,825,4.292,826,5.646]],["title/injectables/QuoteLoadEffect.html",[163,0.939,498,2.322]],["body/injectables/QuoteLoadEffect.html",[3,0.233,4,0.233,9,0.203,19,0.363,20,1.952,22,0.83,27,1.252,29,1.134,30,0.025,31,0.681,32,0.329,33,1.134,35,1.458,37,0.641,38,0.472,45,0.233,46,0.511,47,1.786,87,0.017,88,0.017,118,1.206,122,1.922,163,1.341,165,1.786,167,1.26,179,2.23,191,1.284,192,1.284,195,1.206,196,1.786,200,1.786,224,1.665,261,1.557,416,3.155,420,2.259,427,2.477,428,2.75,431,4.151,432,3.682,434,4.151,438,3.682,441,2.75,442,1.922,443,2.75,467,2.23,488,3.67,494,3.116,498,3.317,517,3.739,519,4.163,520,2.477,521,3.739,522,3.116,827,5.022,828,5.917,829,3.671,830,3.671,831,4.915,832,4.915,833,4.172,834,4.915,835,3.671,836,4.915]],["title/injectables/QuoteService.html",[163,0.939,488,1.948]],["body/injectables/QuoteService.html",[3,0.269,4,0.269,9,0.234,19,0.419,20,2.142,22,0.957,27,1.219,29,1.307,30,0.024,31,0.786,32,0.379,33,1.307,35,1.681,37,0.639,38,0.544,45,0.269,46,0.589,87,0.018,88,0.018,114,3.171,163,1.472,165,2.059,190,2.517,195,1.39,200,2.059,224,1.92,261,1.795,268,1.39,282,2.395,442,2.824,467,2.447,488,3.053,789,3.171,812,3.592,813,5.306,815,4.578,818,4.578,819,3.592,833,3.592,837,3.592,838,6.251,839,4.232,840,4.232,841,5.393,842,4.232,843,4.232,844,4.232,845,4.232,846,4.232,847,4.232,848,4.232,849,4.232]],["title/components/TextContentComponent.html",[0,0.556,82,1.063]],["body/components/TextContentComponent.html",[0,0.874,1,1.083,2,1.148,3,0.223,4,0.223,5,1.393,6,1.393,7,1.393,8,1.393,9,0.194,11,1.393,12,2.718,13,2.549,15,1.893,17,1.893,19,0.347,22,1.224,27,1.077,30,0.024,31,0.885,32,0.315,37,0.347,38,0.451,45,0.223,46,0.488,53,1.148,54,1.393,55,1.893,56,1.893,57,1.393,58,2.307,59,1.393,60,1.393,61,1.083,62,1.227,63,1.393,64,1.018,65,1.393,66,1.083,67,0.845,68,1.393,69,1.018,70,1.393,71,1.083,72,1.083,73,1.393,74,1.083,75,1.393,76,1.083,77,1.393,78,1.083,79,1.393,80,1.018,81,1.393,82,1.794,83,2.273,84,1.672,85,1.393,86,1.393,87,0.016,88,0.016,179,2.163,300,2.021,301,2.021,306,2.496,319,1.488,320,2.496,335,2.159,338,1.707,339,1.707,342,1.837,354,1.837,388,2.367,476,2.628,481,2.628,539,2.628,540,4.595,541,4.046,569,2.367,576,2.978,703,4.056,850,4.595,851,4.767,852,3.508,853,3.508,854,3.508,855,3.508]],["title/coverage.html",[856,3.993]],["body/coverage.html",[0,0.961,1,0.615,9,0.11,10,1.69,30,0.024,32,0.178,53,0.422,61,0.615,64,0.578,66,0.615,67,0.479,69,0.578,71,0.615,74,0.615,76,0.615,78,0.615,80,0.578,82,0.615,84,0.615,87,0.011,88,0.011,129,2.353,163,1.459,164,1.127,166,1.69,175,1.042,193,0.969,232,4.432,234,1.69,235,1.69,257,1.225,263,1.491,266,1.343,296,1.491,297,1.491,298,1.491,299,1.69,375,1.69,384,1.491,407,2.353,408,1.225,410,1.69,417,1.225,419,1.491,425,1.343,426,1.69,427,2.624,429,1.042,437,1.343,444,1.343,446,1.512,448,1.69,452,1.69,453,1.491,454,1.69,464,1.69,467,0.903,470,1.491,488,1.127,495,1.343,496,1.644,498,1.343,503,1.343,504,3.308,505,1.225,508,1.777,509,1.491,513,4.15,519,1.343,520,1.343,521,1.343,524,2.119,526,1.491,529,1.491,531,1.491,533,1.491,535,1.491,537,1.69,538,1.491,539,2.353,581,1.69,582,2.119,587,2.353,588,1.491,589,1.69,602,1.491,603,1.69,615,1.69,616,1.343,617,1.69,703,1.491,713,1.343,716,1.343,720,1.225,724,1.343,725,3.308,726,1.225,728,1.491,732,4.536,739,1.225,740,1.343,741,1.343,742,1.491,744,1.491,746,1.491,748,1.491,750,1.491,752,1.491,754,1.491,756,1.491,758,1.491,760,1.69,779,1.491,780,1.491,798,1.69,801,1.491,804,1.69,809,1.69,825,1.69,827,1.69,837,1.69,850,1.69,856,1.69,857,1.69,858,1.99,859,1.99,860,6.054,861,3.889,862,1.69,863,7.093,864,1.69,865,7.093,866,3.301,867,3.14,868,3.889,869,3.14,870,4.079,871,1.69,872,1.69,873,1.69,874,1.69,875,3.14,876,1.69,877,1.69,878,1.69,879,1.69,880,1.69,881,3.889,882,1.99,883,4.334,884,5.053,885,1.69,886,1.69,887,1.69,888,1.69,889,1.69,890,1.69,891,1.69,892,1.69,893,1.69,894,1.99,895,1.99]],["title/dependencies.html",[92,2.015,896,2.87]],["body/dependencies.html",[30,0.025,38,0.525,39,2.14,40,3.94,41,3.061,43,3.061,87,0.018,88,0.018,92,1.988,109,4.476,110,3.559,112,1.988,118,1.733,120,3.468,122,2.14,132,2.758,195,1.342,370,2.758,372,2.758,373,2.515,491,3.061,570,4.476,897,4.086,898,4.086,899,6.54,900,4.086,901,4.086,902,4.086,903,4.086,904,4.086,905,4.086,906,5.839,907,4.086,908,5.273,909,4.086,910,4.086,911,5.273,912,4.086,913,4.086,914,4.086,915,4.086,916,5.839,917,4.086,918,4.086,919,5.839,920,4.086,921,4.086,922,4.086,923,4.086,924,4.086,925,4.086,926,4.086,927,4.086,928,4.086,929,4.086,930,4.086,931,4.086,932,4.086,933,4.086,934,4.086,935,4.086,936,4.086]],["title/index.html",[19,0.284,937,2.87,938,2.87]],["body/index.html",[2,1.456,13,1.975,30,0.016,31,0.529,32,0.256,40,2.782,52,1.614,53,0.874,67,0.687,72,0.881,83,0.937,87,0.014,88,0.014,89,2.006,91,1.637,92,2.006,110,2.782,125,1.294,132,1.924,134,2.106,193,1.388,194,2.42,196,1.388,207,2.42,262,2.42,268,0.937,373,2.979,383,2.333,409,1.614,416,2.006,467,1.294,496,2.158,523,1.924,620,2.136,644,2.42,665,2.136,715,3.088,731,1.614,857,4.109,939,2.852,940,2.852,941,4.841,942,2.852,943,4.122,944,4.122,945,2.852,946,4.122,947,2.852,948,2.852,949,2.852,950,2.852,951,3.499,952,2.852,953,2.852,954,2.852,955,4.122,956,2.852,957,2.852,958,2.852,959,2.852,960,2.852,961,2.852,962,2.852,963,2.852,964,2.852,965,2.852,966,2.852,967,2.852,968,2.852,969,2.852,970,4.122,971,5.303,972,5.303,973,2.852,974,2.852,975,6.88,976,6.668,977,4.122,978,2.852,979,2.852,980,2.852,981,4.122,982,4.122,983,4.122,984,2.852,985,5.625,986,6.404,987,2.852,988,2.852,989,2.852,990,2.852,991,2.852,992,2.852,993,2.852,994,5.303,995,5.863,996,2.42,997,2.852,998,4.122,999,2.852,1000,2.852,1001,2.852,1002,4.122,1003,2.852,1004,4.122,1005,2.852,1006,4.122,1007,2.852,1008,4.841,1009,2.852,1010,4.122,1011,2.852,1012,2.852,1013,2.852,1014,2.852,1015,2.852,1016,2.852,1017,2.852,1018,2.852,1019,4.841,1020,2.852,1021,4.122,1022,2.852,1023,2.852,1024,2.852,1025,2.852,1026,2.852,1027,2.852,1028,2.852,1029,2.852,1030,2.852,1031,2.852,1032,4.122,1033,2.852,1034,4.122,1035,2.852,1036,2.852,1037,5.625,1038,5.303,1039,2.852,1040,2.852,1041,2.852,1042,2.852,1043,4.122,1044,2.852,1045,2.852,1046,2.852,1047,2.852,1048,2.852,1049,2.852,1050,2.852,1051,2.852,1052,2.852,1053,2.852,1054,2.852,1055,2.852,1056,2.852,1057,2.852,1058,2.852,1059,2.852,1060,2.852,1061,2.852,1062,2.852,1063,2.852,1064,2.852,1065,2.852,1066,2.852,1067,2.852,1068,2.852,1069,2.852,1070,2.852]],["title/modules.html",[91,1.868]],["body/modules.html",[30,0.02,87,0.02,88,0.02,90,3.402,91,2.002,97,3.103,110,4.484,363,3.103,482,3.402,487,3.103,690,3.402,695,3.103,1071,6.645,1072,6.645,1073,6.961,1074,6.418,1075,6.418]],["title/overview.html",[1076,3.993]],["body/overview.html",[1,1.991,2,0.865,30,0.024,61,1.991,64,1.591,66,1.692,69,1.591,71,1.692,74,1.692,76,1.692,78,1.692,80,1.591,82,1.692,87,0.016,88,0.016,90,4.351,91,1.426,92,2.357,93,3.048,94,3.048,95,3.048,96,3.048,97,3.372,98,2.981,99,2.033,100,2.21,125,1.629,164,3.101,165,1.748,175,2.869,363,3.883,364,3.048,365,3.048,366,3.048,409,2.033,429,2.869,447,1.629,482,4.425,483,3.048,484,3.048,485,3.048,486,3.048,487,3.372,488,3.101,690,4.832,691,3.048,692,3.048,693,3.048,694,3.048,695,3.372,1076,3.048,1077,4.843,1078,3.591,1079,3.591,1080,3.591,1081,3.591]],["title/routes.html",[125,2.134]],["body/routes.html",[30,0.022,87,0.022,88,0.022,125,2.533]],["title/miscellaneous/typealiases.html",[1082,1.937,1083,4.141]],["body/miscellaneous/typealiases.html",[19,0.54,30,0.021,32,0.489,87,0.021,88,0.021,582,3.681,584,4.246,1082,3.681,1084,5.455,1085,4.63]],["title/miscellaneous/variables.html",[1082,1.937,1086,3.515]],["body/miscellaneous/variables.html",[19,0.125,30,0.025,31,0.402,32,0.474,52,1.898,53,1.146,67,0.907,72,0.875,83,0.931,84,0.875,87,0.007,88,0.007,129,2.512,132,1.461,149,0.443,177,4.419,179,1.862,185,0.779,191,2.395,192,2.395,210,0.855,212,0.855,214,0.855,232,1.332,263,1.622,266,1.461,282,2.916,284,0.949,287,0.949,289,0.949,291,3.636,292,0.949,294,1.622,376,2.969,384,2.123,386,1.622,417,1.744,419,1.622,437,1.912,444,1.912,449,1.837,450,2.512,451,1.622,467,2.096,470,1.622,495,1.461,496,1.756,503,0.855,504,0.949,505,2.969,508,2.323,509,2.123,510,1.075,513,0.949,514,2.846,515,2.846,516,2.846,517,2.769,518,1.622,519,1.912,520,1.912,521,1.912,523,1.461,524,2.769,525,1.744,526,1.622,527,1.332,528,1.075,529,2.123,530,1.075,531,2.123,532,1.075,533,2.123,534,1.075,535,2.123,536,1.075,582,0.855,583,3.285,713,1.461,715,0.949,724,0.855,725,0.949,726,3.507,728,2.123,729,1.075,731,2.73,732,0.949,733,2.846,734,2.846,735,2.846,736,2.846,737,2.846,738,2.846,739,1.744,740,1.912,741,1.912,742,1.622,743,1.075,744,2.123,745,1.075,746,2.123,747,1.075,748,2.123,749,1.075,750,2.123,751,1.075,752,2.123,753,1.075,754,2.123,755,1.075,756,2.123,757,1.075,758,2.123,759,1.075,779,1.622,780,1.622,801,1.622,826,1.075,862,1.075,864,1.837,866,1.075,870,1.075,871,3.197,872,1.837,873,1.837,874,1.837,876,1.075,877,1.075,878,1.837,879,1.075,880,1.837,883,1.075,884,1.075,885,1.837,886,1.837,887,1.837,888,2.405,889,1.837,890,4.243,891,1.075,892,1.075,893,1.075,951,1.837,996,1.075,1082,0.855,1085,1.075,1086,1.075,1087,5.153,1088,1.267,1089,1.267,1090,1.267,1091,1.267,1092,2.834,1093,4.384,1094,1.267,1095,4.103,1096,2.834,1097,2.834,1098,1.267,1099,1.267,1100,5.153,1101,3.766,1102,1.267,1103,3.766,1104,2.164,1105,2.164,1106,2.164,1107,2.164,1108,2.164,1109,4.103,1110,2.164,1111,2.164,1112,2.164,1113,2.164,1114,2.164,1115,2.164,1116,2.164,1117,2.164,1118,2.164,1119,2.164,1120,2.164,1121,2.164,1122,1.267,1123,1.267,1124,1.267,1125,2.164,1126,4.621,1127,4.824,1128,4.103,1129,2.834,1130,4.103,1131,2.834,1132,1.267,1133,1.267,1134,1.267,1135,1.267,1136,2.164,1137,1.267,1138,1.267,1139,1.267,1140,1.267,1141,1.267,1142,1.267,1143,1.267,1144,1.267,1145,1.267,1146,1.267,1147,2.834,1148,1.267,1149,1.267,1150,2.164,1151,1.267,1152,1.267,1153,1.267,1154,1.267,1155,1.267,1156,1.267,1157,1.267,1158,1.267,1159,1.267,1160,1.267,1161,1.267,1162,1.267,1163,1.267,1164,1.267,1165,1.267,1166,1.267,1167,1.267,1168,1.267,1169,1.267,1170,1.267,1171,1.267,1172,1.267,1173,1.267,1174,1.267,1175,1.267,1176,1.267,1177,1.267,1178,1.267,1179,1.267,1180,1.267,1181,1.267,1182,1.267,1183,1.267,1184,1.267,1185,1.267,1186,1.267,1187,1.267,1188,1.267,1189,1.267,1190,1.267,1191,1.267,1192,1.267,1193,1.267,1194,1.267,1195,1.267,1196,1.267,1197,1.267,1198,5.612,1199,1.267,1200,1.267,1201,1.267,1202,1.267,1203,1.267,1204,1.267,1205,1.267]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"injectables/AudioService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0000001f",{"_index":346,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["00:00",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":687,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["1.0.2",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["1000).format(format",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["111b22",{"_index":595,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["11px",{"_index":566,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["12.0.0",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["12.2.9",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["12.4.0",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":340,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{}}}],["13px",{"_index":614,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["145px",{"_index":460,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["14px",{"_index":569,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["15px",{"_index":351,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["168px",{"_index":334,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["16px",{"_index":852,"title":{},"body":{"components/TextContentComponent.html":{}}}],["18px",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{},"components/MediaContentComponent.html":{}}}],["19px",{"_index":855,"title":{},"body":{"components/TextContentComponent.html":{}}}],["1:661526611463:web:ad4d2587d5cc613fab8ca2",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1f1f1f",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["1px",{"_index":347,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["2",{"_index":1079,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":392,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["245px",{"_index":459,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["25",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":597,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["270px",{"_index":598,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["27px",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["28px",{"_index":387,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["2px",{"_index":348,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["3.18.1",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":343,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["315px",{"_index":574,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["32px",{"_index":576,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["38px",{"_index":560,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["3px",{"_index":573,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["400",{"_index":394,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["45px",{"_index":596,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["4e6b8c",{"_index":561,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["5",{"_index":1081,"title":{},"body":{"overview.html":{}}}],["5.36.0",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":562,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["500",{"_index":580,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["5cd18",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.appspot.com",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseapp.com",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5cd18.firebaseio.com",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":613,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["616469",{"_index":611,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["661526611463",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["666",{"_index":355,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["7",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":341,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["7px",{"_index":577,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8",{"_index":1080,"title":{},"body":{"overview.html":{}}}],["808289",{"_index":685,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["85",{"_index":558,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["8px",{"_index":336,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["9.1.1",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["999da1",{"_index":579,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["9eb4bb",{"_index":362,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__back",{"_index":599,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{}}}],["__button",{"_index":337,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["__content",{"_index":853,"title":{},"body":{"components/TextContentComponent.html":{}}}],["__description",{"_index":601,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["__icon",{"_index":563,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["__image",{"_index":556,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__play",{"_index":559,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__progress",{"_index":578,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__quote",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["__range",{"_index":567,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["__title",{"_index":600,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["accessors",{"_index":240,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{}}}],["action",{"_index":517,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":416,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"index.html":{}}}],["activated",{"_index":359,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["activatedroute",{"_index":766,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["active",{"_index":572,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["actual_component",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["ad",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addevents",{"_index":215,"title":{},"body":{"injectables/AudioService.html":{}}}],["addevents(this.audioobj",{"_index":231,"title":{},"body":{"injectables/AudioService.html":{}}}],["adipiscing",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasya02y_nqiilec4",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":1084,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":388,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["aliqua",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliquip",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amet",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["android",{"_index":981,"title":{},"body":{"index.html":{}}}],["angular",{"_index":965,"title":{},"body":{"index.html":{}}}],["angular/cdk",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/compat",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/compat/firestore",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angular/flex",{"_index":372,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":491,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/CategoriesGuard.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"dependencies.html":{}}}],["angularfire",{"_index":966,"title":{},"body":{"index.html":{}}}],["angularfiremodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":813,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["angularfirestoremodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["anim",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/meditation/services/audio",{"_index":197,"title":{},"body":{"injectables/AudioService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1019,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":90,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":97,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["asobservable",{"_index":247,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["async",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationsComponent.html":{}}}],["audio",{"_index":194,"title":{},"body":{"injectables/AudioService.html":{},"index.html":{}}}],["audioobj",{"_index":168,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["audioobj.currenttime",{"_index":293,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioobj.duration",{"_index":288,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["audioservice",{"_index":164,"title":{"injectables/AudioService.html":{}},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"overview.html":{}}}],["audiostateservice",{"_index":175,"title":{"injectables/AudioStateService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{},"overview.html":{}}}],["aute",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authdomain",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":461,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["automatically",{"_index":1012,"title":{},"body":{"index.html":{}}}],["available",{"_index":1075,"title":{},"body":{"modules.html":{}}}],["await",{"_index":792,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["back",{"_index":1051,"title":{},"body":{"index.html":{}}}],["backend",{"_index":968,"title":{},"body":{"index.html":{}}}],["background",{"_index":352,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["bar",{"_index":570,"title":{},"body":{"components/MediaContentComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["base",{"_index":942,"title":{},"body":{"index.html":{}}}],["based",{"_index":1023,"title":{},"body":{"index.html":{}}}],["bebdbd",{"_index":358,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["behaviorsubject",{"_index":259,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MeditationsComponent.html":{}}}],["behaviorsubject(initial_media_state",{"_index":250,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["bem",{"_index":1059,"title":{},"body":{"index.html":{}}}],["best",{"_index":1025,"title":{},"body":{"index.html":{}}}],["beta.35",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":312,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"interfaces/Quote.html":{}}}],["bootstrap",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":349,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["bottom",{"_index":555,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["box",{"_index":344,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["break",{"_index":283,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["browse",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1013,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["buttonsselectcomponent",{"_index":61,"title":{"components/ButtonsSelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttonsselectmodule",{"_index":363,"title":{"modules/ButtonsSelectModule.html":{}},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{},"modules.html":{},"overview.html":{}}}],["called",{"_index":1045,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":411,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{}}}],["canplay",{"_index":212,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["capacitor",{"_index":964,"title":{},"body":{"index.html":{}}}],["capacitor/android",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":401,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["card.component",{"_index":707,"title":{},"body":{"modules/MeditationModule.html":{}}}],["card.component.html",{"_index":456,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.scss",{"_index":455,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card.component.ts",{"_index":454,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":457,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["card/category",{"_index":453,"title":{},"body":{"components/CategoryCardComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["case",{"_index":281,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["catcherror",{"_index":441,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["catcherror((error",{"_index":438,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["categories",{"_index":376,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["categories'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["categories.component.html",{"_index":378,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":377,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.find((category",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoriescomponent",{"_index":64,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoriesdata",{"_index":746,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorieserrorstate",{"_index":752,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesguard",{"_index":408,"title":{"guards/CategoriesGuard.html":{}},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"coverage.html":{}}}],["categoriesloadedstate",{"_index":750,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriesloadeffect",{"_index":425,"title":{"injectables/CategoriesLoadEffect.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["categoriesloadingstate",{"_index":748,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":67,"title":{"interfaces/Category.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["category.description",{"_index":594,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["category.id",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category.name",{"_index":458,"title":{},"body":{"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["categorycardcomponent",{"_index":66,"title":{"components/CategoryCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryid",{"_index":583,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["categorymock",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":389,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{}}}],["changedetection",{"_index":300,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy",{"_index":319,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":301,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["child",{"_index":404,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["choose",{"_index":956,"title":{},"body":{"index.html":{}}}],["cillum",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["classes",{"_index":1064,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule",{"_index":364,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule_declarations",{"_index":365,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_buttonsselectmodule_exports",{"_index":366,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":483,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":485,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":486,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_providers",{"_index":484,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_meditationmodule",{"_index":691,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_declarations",{"_index":692,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_imports",{"_index":693,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["cluster_meditationmodule_providers",{"_index":694,"title":{},"body":{"modules/MeditationModule.html":{},"overview.html":{}}}],["code",{"_index":1027,"title":{},"body":{"index.html":{}}}],["col",{"_index":400,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["collection('meditation_categories",{"_index":820,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('meditations",{"_index":824,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["collection('quotes",{"_index":843,"title":{},"body":{"injectables/QuoteService.html":{}}}],["collectionreference",{"_index":841,"title":{},"body":{"injectables/QuoteService.html":{}}}],["color",{"_index":354,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["column",{"_index":397,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["combinelatest",{"_index":778,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["commands",{"_index":557,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["commodo",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":1031,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":369,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["compodoc",{"_index":972,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["componentprops",{"_index":794,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":1009,"title":{},"body":{"index.html":{}}}],["consectetur",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequat",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consists",{"_index":947,"title":{},"body":{"index.html":{}}}],["const",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":265,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["constants/common",{"_index":1036,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["constructor(actions",{"_index":428,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["constructor(firestore",{"_index":812,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["constructor(modalcontroller",{"_index":636,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["constructor(platform",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":200,"title":{},"body":{"injectables/AudioService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["constructor(state",{"_index":174,"title":{},"body":{"injectables/AudioService.html":{}}}],["constructor(store",{"_index":379,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"guards/MeditationsGuard.html":{}}}],["contains",{"_index":1038,"title":{},"body":{"index.html":{}}}],["content",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"interfaces/Quote.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["content'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component",{"_index":704,"title":{},"body":{"modules/MeditationModule.html":{}}}],["content.component.html",{"_index":541,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.scss",{"_index":540,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{}}}],["content.component.ts",{"_index":539,"title":{},"body":{"components/MediaContentComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:11",{"_index":851,"title":{},"body":{"components/TextContentComponent.html":{}}}],["content.component.ts:22",{"_index":548,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:25",{"_index":549,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:28",{"_index":547,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:31",{"_index":551,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:34",{"_index":550,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.component.ts:37",{"_index":546,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["content.media",{"_index":657,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content.text",{"_index":658,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["content/media",{"_index":538,"title":{},"body":{"components/MediaContentComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["content/text",{"_index":703,"title":{},"body":{"modules/MeditationModule.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["content[keyof",{"_index":586,"title":{},"body":{"interfaces/Meditation.html":{}}}],["contents",{"_index":644,"title":{},"body":{"components/MeditationModalComponent.html":{},"index.html":{}}}],["contents[0",{"_index":674,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["contenttypes",{"_index":584,"title":{},"body":{"interfaces/Meditation.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["core",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":399,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":856,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":431,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["createfeatureselector",{"_index":506,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/MeditationModuleState.html":{}}}],["createfeatureselector(homefeaturekey",{"_index":510,"title":{},"body":{"interfaces/HomeModuleState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(meditationfeaturekey",{"_index":729,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"miscellaneous/variables.html":{}}}],["createreducer",{"_index":518,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selecthomestate",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":1070,"title":{},"body":{"index.html":{}}}],["css",{"_index":1063,"title":{},"body":{"index.html":{}}}],["culpa",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cupidatat",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":826,"title":{},"body":{"interfaces/Quote.html":{},"miscellaneous/variables.html":{}}}],["customevent",{"_index":229,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["cypress",{"_index":970,"title":{},"body":{"index.html":{}}}],["cypress:open",{"_index":1003,"title":{},"body":{"index.html":{}}}],["d3dae2",{"_index":571,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["daily",{"_index":954,"title":{},"body":{"index.html":{}}}],["data",{"_index":523,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddf0fe",{"_index":402,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["debug",{"_index":997,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["default",{"_index":191,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["dependencies",{"_index":92,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"miscellaneous/variables.html":{}}}],["deserunt",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["design",{"_index":1020,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1000,"title":{},"body":{"index.html":{}}}],["development",{"_index":979,"title":{},"body":{"index.html":{}}}],["devices",{"_index":983,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["directives",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["dismissmodal",{"_index":628,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["distinctuntilchanged",{"_index":654,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["doc.data",{"_index":823,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["docs:json",{"_index":1018,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":857,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dolor",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dolore",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["duis",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dumb",{"_index":1047,"title":{},"body":{"index.html":{}}}],["duration",{"_index":284,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["durationsec",{"_index":287,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1002,"title":{},"body":{"index.html":{}}}],["e7f4fd",{"_index":689,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["ea",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":1052,"title":{},"body":{"index.html":{}}}],["effects",{"_index":715,"title":{},"body":{"modules/MeditationModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([meditationsloadeffect",{"_index":723,"title":{},"body":{"modules/MeditationModule.html":{}}}],["effectsmodule.forfeature([quoteloadeffect",{"_index":502,"title":{},"body":{"modules/HomeModule.html":{}}}],["effectsmodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["eiusmod",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["elit",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ended",{"_index":208,"title":{},"body":{"injectables/AudioService.html":{}}}],["enim",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":697,"title":{},"body":{"modules/MeditationModule.html":{}}}],["environment",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":209,"title":{},"body":{"injectables/AudioService.html":{}}}],["eslint",{"_index":1006,"title":{},"body":{"index.html":{}}}],["esse",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["est",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["et",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eu",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":228,"title":{},"body":{"injectables/AudioService.html":{}}}],["event.target",{"_index":278,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["event.type",{"_index":280,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["eventemitter",{"_index":316,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["eventkeys",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{}}}],["eventkeys.foreach((event",{"_index":220,"title":{},"body":{"injectables/AudioService.html":{}}}],["events",{"_index":207,"title":{},"body":{"injectables/AudioService.html":{},"index.html":{}}}],["ex",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["excepteur",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercitation",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expanded",{"_index":945,"title":{},"body":{"index.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["f9eedb",{"_index":406,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationsComponent.html":{}}}],["failure",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":291,"title":{},"body":{"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["feature.actions.ts",{"_index":1053,"title":{},"body":{"index.html":{}}}],["feature.effects.ts",{"_index":1054,"title":{},"body":{"index.html":{}}}],["feature.reducers.ts",{"_index":1056,"title":{},"body":{"index.html":{}}}],["feature.selectors.tsstyle",{"_index":1057,"title":{},"body":{"index.html":{}}}],["features",{"_index":946,"title":{},"body":{"index.html":{}}}],["fff",{"_index":353,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{}}}],["filter",{"_index":665,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"index.html":{}}}],["filter((value",{"_index":651,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["filtermeditations",{"_index":763,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["filtermeditations(meditations",{"_index":768,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["firebase",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firestore",{"_index":815,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["first",{"_index":403,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["flex",{"_index":1069,"title":{},"body":{"index.html":{}}}],["flexbox",{"_index":1065,"title":{},"body":{"index.html":{}}}],["flexlayoutmodule",{"_index":371,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["focus",{"_index":462,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["folder",{"_index":1037,"title":{},"body":{"index.html":{}}}],["following",{"_index":1028,"title":{},"body":{"index.html":{}}}],["follows",{"_index":1058,"title":{},"body":{"index.html":{}}}],["font",{"_index":338,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["format",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formattime",{"_index":263,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formattime(audioobj.currenttime",{"_index":295,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formattime(audioobj.duration",{"_index":285,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["formsmodule",{"_index":490,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["frontend",{"_index":963,"title":{},"body":{"index.html":{}}}],["fugiat",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["functionalities",{"_index":950,"title":{},"body":{"index.html":{}}}],["geneate",{"_index":1016,"title":{},"body":{"index.html":{}}}],["getdailyquote",{"_index":838,"title":{},"body":{"injectables/QuoteService.html":{}}}],["getmedia",{"_index":254,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["getmeditationcategories",{"_index":810,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getmeditations",{"_index":811,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["getshowbuttons",{"_index":663,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["getting",{"_index":937,"title":{"index.html":{}},"body":{}}],["globalthis",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":1074,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":396,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["guard",{"_index":407,"title":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":409,"title":{},"body":{"guards/CategoriesGuard.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"index.html":{},"overview.html":{}}}],["guide",{"_index":960,"title":{},"body":{"index.html":{}}}],["handler",{"_index":219,"title":{},"body":{"injectables/AudioService.html":{}}}],["header",{"_index":590,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["header'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["header.component",{"_index":711,"title":{},"body":{"modules/MeditationModule.html":{}}}],["header.component.html",{"_index":592,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.scss",{"_index":591,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header.component.ts",{"_index":589,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:14",{"_index":593,"title":{},"body":{"components/MeditationHeaderComponent.html":{}}}],["header/meditation",{"_index":588,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["height",{"_index":342,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/TextContentComponent.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["home.component.html",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home",{"_index":492,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/models/quote.model",{"_index":842,"title":{},"body":{"injectables/QuoteService.html":{}}}],["home/pages/home/home.component",{"_index":493,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home/services/quote.service",{"_index":494,"title":{},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/actions/home.actions",{"_index":522,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{}}}],["home/store/effects/quote",{"_index":499,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/reducers/home.reducer",{"_index":507,"title":{},"body":{"interfaces/HomeModuleState.html":{}}}],["home/store/reducers/home.state",{"_index":497,"title":{},"body":{"modules/HomeModule.html":{}}}],["home/store/selectors/home.selector",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":69,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homefeaturekey",{"_index":495,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homemodule",{"_index":482,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homemodulestate",{"_index":503,"title":{"interfaces/HomeModuleState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homepageroutingmodule",{"_index":487,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["homereducer",{"_index":526,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["homereducer(state",{"_index":528,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["homestate",{"_index":505,"title":{"interfaces/HomeState.html":{}},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["howler",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["htmlaudioelement",{"_index":217,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["http://domain.com",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclientmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["https://domain.com",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://meditify",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://picsum.photos/seed/picsum/400/600",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":961,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":420,"title":{},"body":{"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["import('./modules/home/home.module').then((m",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/meditation/meditation.module').then",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["incididunt",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":1055,"title":{},"body":{"index.html":{}}}],["industry",{"_index":1024,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["init",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial_media_state",{"_index":266,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initializeapp",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["initializestate",{"_index":239,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestate($obs",{"_index":242,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["initializestream",{"_index":169,"title":{},"body":{"injectables/AudioService.html":{}}}],["initializestream(url",{"_index":178,"title":{},"body":{"injectables/AudioService.html":{}}}],["initialstate",{"_index":524,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"overview.html":{}}}],["input",{"_index":320,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["inputs",{"_index":306,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["install",{"_index":977,"title":{},"body":{"index.html":{}}}],["installation",{"_index":973,"title":{},"body":{"index.html":{}}}],["interact",{"_index":957,"title":{},"body":{"index.html":{}}}],["interface",{"_index":446,"title":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{}},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"coverage.html":{}}}],["interfaces",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"interfaces/Quote.html":{},"overview.html":{}}}],["introduction",{"_index":939,"title":{},"body":{"index.html":{}}}],["ion",{"_index":395,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["ionic",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["ionicmodule.forroot",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":564,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["ionicroutestrategy",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["ios",{"_index":982,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irure",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscategorieserror",{"_index":733,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloaded",{"_index":734,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["iscategoriesloading",{"_index":735,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isloaded",{"_index":422,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["ismeditationserror",{"_index":736,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloaded",{"_index":737,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["ismeditationsloading",{"_index":738,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["isquoteerror",{"_index":514,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloaded",{"_index":515,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["isquoteloading",{"_index":516,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["italic",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":604,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["item.component",{"_index":712,"title":{},"body":{"modules/MeditationModule.html":{}}}],["item.component.html",{"_index":606,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.scss",{"_index":605,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts",{"_index":603,"title":{},"body":{"components/MeditationItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:19",{"_index":609,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:22",{"_index":608,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item.component.ts:25",{"_index":607,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["item/meditation",{"_index":602,"title":{},"body":{"components/MeditationItemComponent.html":{},"modules/MeditationModule.html":{},"coverage.html":{}}}],["js",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1017,"title":{},"body":{"index.html":{}}}],["justify",{"_index":854,"title":{},"body":{"components/TextContentComponent.html":{}}}],["knob",{"_index":568,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["labore",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laboris",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["laborum",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":405,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["layout",{"_index":373,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"dependencies.html":{},"index.html":{}}}],["left",{"_index":686,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["legend",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["lib",{"_index":1033,"title":{},"body":{"index.html":{}}}],["lib/buttons",{"_index":297,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["library",{"_index":1041,"title":{},"body":{"index.html":{}}}],["line",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["lint",{"_index":1010,"title":{},"body":{"index.html":{}}}],["lint:fix",{"_index":1011,"title":{},"body":{"index.html":{}}}],["linting",{"_index":1004,"title":{},"body":{"index.html":{}}}],["load",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load.effect",{"_index":500,"title":{},"body":{"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["load.effect.ts",{"_index":427,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["load.effect.ts:21",{"_index":835,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:23",{"_index":440,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:35",{"_index":829,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["load.effect.ts:37",{"_index":430,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["load.effect.ts:39",{"_index":830,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["loadcategories",{"_index":417,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriesfailure",{"_index":444,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcategoriessuccess",{"_index":437,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadedmetadata",{"_index":213,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["loadmeditations",{"_index":739,"title":{},"body":{"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationsfailure",{"_index":740,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadmeditationssuccess",{"_index":741,"title":{},"body":{"interfaces/MeditationState.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquote",{"_index":519,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotefailure",{"_index":520,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadquotesuccess",{"_index":521,"title":{},"body":{"interfaces/HomeState.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadstart",{"_index":214,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["logonly",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["lorem",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homemodule",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.meditationmodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["magna",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":949,"title":{},"body":{"index.html":{}}}],["make",{"_index":988,"title":{},"body":{"index.html":{}}}],["map",{"_index":442,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map(([meditations",{"_index":790,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["map((categories",{"_index":436,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["map((meditations",{"_index":807,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["map((quote",{"_index":833,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["map((snapshot",{"_index":821,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["map((value",{"_index":652,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["margin",{"_index":390,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/MeditationModalComponent.html":{}}}],["matching",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(value",{"_index":653,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["max",{"_index":575,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["maxage",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["media(value",{"_index":272,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["media.duration",{"_index":554,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["media.time",{"_index":553,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["mediacontentcomponent",{"_index":71,"title":{"components/MediaContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediaoptions",{"_index":623,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediaselection",{"_index":624,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mediastate",{"_index":257,"title":{"interfaces/MediaState.html":{}},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"coverage.html":{}}}],["mediasubject",{"_index":237,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["mediatype",{"_index":289,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["meditation",{"_index":53,"title":{"interfaces/Meditation.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meditation.categoryid",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditation.title",{"_index":610,"title":{},"body":{"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{}}}],["meditation/components/category",{"_index":706,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/components/media",{"_index":705,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/components/meditation",{"_index":710,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/components/text",{"_index":702,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/constants/media.constants",{"_index":267,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/guards/categories.guard",{"_index":719,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/guards/meditations.guard",{"_index":721,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/meditation",{"_index":698,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/models/category.model",{"_index":382,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{}}}],["meditation/models/media.model",{"_index":269,"title":{},"body":{"injectables/AudioStateService.html":{},"components/MediaContentComponent.html":{}}}],["meditation/models/meditation.model",{"_index":552,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{}}}],["meditation/pages/categories/categories.component",{"_index":708,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/pages/meditation",{"_index":700,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["meditation/pages/meditations/meditations.component",{"_index":709,"title":{},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["meditation/services/audio",{"_index":667,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/audio.service",{"_index":668,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["meditation/services/meditations.service",{"_index":445,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/actions/meditation.actions",{"_index":418,"title":{},"body":{"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/MeditationState.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{}}}],["meditation/store/effects/categories",{"_index":718,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/effects/meditations",{"_index":717,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/reducers/meditation.reducer",{"_index":727,"title":{},"body":{"interfaces/MeditationModuleState.html":{}}}],["meditation/store/reducers/meditation.state",{"_index":714,"title":{},"body":{"modules/MeditationModule.html":{}}}],["meditation/store/selectors/meditation.selector",{"_index":385,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{}}}],["meditation/utils/time.utils",{"_index":264,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["meditation[media",{"_index":797,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationfeaturekey",{"_index":713,"title":{},"body":{"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationheadercomponent",{"_index":74,"title":{"components/MeditationHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationitemcomponent",{"_index":76,"title":{"components/MeditationItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationmock",{"_index":880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationmodalcomponent",{"_index":78,"title":{"components/MeditationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationmodule",{"_index":690,"title":{"modules/MeditationModule.html":{}},"body":{"modules/MeditationModule.html":{},"modules.html":{},"overview.html":{}}}],["meditationmodulestate",{"_index":724,"title":{"interfaces/MeditationModuleState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer",{"_index":742,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationreducer(state",{"_index":743,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["meditationroutingmodule",{"_index":695,"title":{"modules/MeditationRoutingModule.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["meditations",{"_index":731,"title":{},"body":{"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["meditations'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["meditations.component.html",{"_index":762,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.component.scss",{"_index":761,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditations.filter",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meditations.filter((meditation",{"_index":796,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["meditationscomponent",{"_index":80,"title":{"components/MeditationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meditationsdata",{"_index":744,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationserrorstate",{"_index":758,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsguard",{"_index":720,"title":{"guards/MeditationsGuard.html":{}},"body":{"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["meditationsloadedstate",{"_index":756,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsloadeffect",{"_index":716,"title":{"injectables/MeditationsLoadEffect.html":{}},"body":{"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["meditationsloadingstate",{"_index":754,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditationsservice",{"_index":429,"title":{"injectables/MeditationsService.html":{}},"body":{"injectables/CategoriesLoadEffect.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"coverage.html":{},"overview.html":{}}}],["meditationstate",{"_index":726,"title":{"interfaces/MeditationState.html":{}},"body":{"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meditify",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mergemap",{"_index":434,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["messagingsenderid",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["methodology",{"_index":1060,"title":{},"body":{"index.html":{}}}],["methods",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["min",{"_index":612,"title":{},"body":{"components/MeditationItemComponent.html":{}}}],["minim",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1082,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm:ss",{"_index":286,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["mobile",{"_index":943,"title":{},"body":{"index.html":{}}}],["mocks",{"_index":1035,"title":{},"body":{"index.html":{}}}],["modal",{"_index":620,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"index.html":{}}}],["modal'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["modal.component",{"_index":701,"title":{},"body":{"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{}}}],["modal.component.html",{"_index":622,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.scss",{"_index":621,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts",{"_index":617,"title":{},"body":{"components/MeditationModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":640,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:32",{"_index":656,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:35",{"_index":638,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:37",{"_index":659,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:38",{"_index":660,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:40",{"_index":655,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:47",{"_index":664,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:52",{"_index":637,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:55",{"_index":661,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:56",{"_index":662,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:60",{"_index":641,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:67",{"_index":643,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:75",{"_index":646,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:83",{"_index":645,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:87",{"_index":648,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.component.ts:95",{"_index":639,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["modal.present",{"_index":795,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["modal/meditation",{"_index":616,"title":{},"body":{"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":626,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["mode",{"_index":998,"title":{},"body":{"index.html":{}}}],["model",{"_index":1066,"title":{},"body":{"index.html":{}}}],["models",{"_index":268,"title":{},"body":{"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{},"index.html":{}}}],["module",{"_index":89,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":91,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mollit",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moment",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["moment.utc(time",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["motivational",{"_index":953,"title":{},"body":{"index.html":{}}}],["mp3",{"_index":290,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["multiple",{"_index":307,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":1062,"title":{},"body":{"index.html":{}}}],["native/core",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":193,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationsComponent.html":{},"coverage.html":{},"index.html":{}}}],["ngmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["ngondestroy",{"_index":629,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["ngoninit",{"_index":630,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["ngrx",{"_index":967,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/QuoteLoadEffect.html":{},"dependencies.html":{}}}],["ngrxoniniteffects",{"_index":828,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["nisi",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":360,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{}}}],["nostrud",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":976,"title":{},"body":{"index.html":{}}}],["null",{"_index":525,"title":{},"body":{"interfaces/HomeState.html":{},"interfaces/Meditation.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["nulla",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":185,"title":{},"body":{"injectables/AudioService.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"components/MeditationModalComponent.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":216,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.addeventlistener(event",{"_index":221,"title":{},"body":{"injectables/AudioService.html":{}}}],["obj.removeeventlistener(event",{"_index":223,"title":{},"body":{"injectables/AudioService.html":{}}}],["object",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obs",{"_index":244,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["obs.subscribe((event",{"_index":277,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["observable",{"_index":190,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["observable((observer",{"_index":225,"title":{},"body":{"injectables/AudioService.html":{}}}],["observer.next(event",{"_index":230,"title":{},"body":{"injectables/AudioService.html":{}}}],["occaecat",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(loadcategoriesfailure(error",{"_index":439,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["of(loadmeditationsfailure(error",{"_index":808,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["of(loadquotefailure(error",{"_index":834,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["of(true",{"_index":424,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["officia",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype",{"_index":443,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["oftype(loadcategories",{"_index":433,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["oftype(loadmeditations",{"_index":805,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["oftype(loadquote",{"_index":831,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["ondestroy",{"_index":619,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["oninit",{"_index":618,"title":{},"body":{"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["oniniteffects",{"_index":836,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["onmediaselectionchange",{"_index":631,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onmediaselectionchange(contents",{"_index":642,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onpause",{"_index":632,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onplay",{"_index":633,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend",{"_index":634,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["onseekend(undefined",{"_index":647,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["opacity",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":985,"title":{},"body":{"index.html":{}}}],["open:android",{"_index":993,"title":{},"body":{"index.html":{}}}],["open:ios",{"_index":992,"title":{},"body":{"index.html":{}}}],["opens",{"_index":958,"title":{},"body":{"index.html":{}}}],["option",{"_index":331,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["options",{"_index":308,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["out",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}],["outline",{"_index":463,"title":{},"body":{"components/CategoryCardComponent.html":{}}}],["output",{"_index":321,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["outputs",{"_index":309,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["overall",{"_index":1022,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1076,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":896,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":335,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/TextContentComponent.html":{}}}],["page",{"_index":951,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":1034,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["pariatur",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pass",{"_index":1050,"title":{},"body":{"index.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pathmatch",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["pause",{"_index":170,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["pauseaudio",{"_index":543,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["performed",{"_index":1005,"title":{},"body":{"index.html":{}}}],["personal",{"_index":940,"title":{},"body":{"index.html":{}}}],["pieces",{"_index":1040,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":789,"title":{},"body":{"components/MeditationsComponent.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["pipe(filter((meditations",{"_index":787,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["pipe(sharereplay",{"_index":248,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["platform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":171,"title":{},"body":{"injectables/AudioService.html":{}}}],["playaudio",{"_index":544,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["playing",{"_index":210,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["pluck",{"_index":666,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["pluck('timesec",{"_index":650,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["practice",{"_index":959,"title":{},"body":{"index.html":{}}}],["practices",{"_index":1026,"title":{},"body":{"index.html":{}}}],["preloadallmodules",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prerequisites",{"_index":990,"title":{},"body":{"index.html":{}}}],["presentmodal",{"_index":764,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["presentmodal(meditation",{"_index":772,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["prettier",{"_index":1008,"title":{},"body":{"index.html":{}}}],["private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["production",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proident",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":941,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":774,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["properties",{"_index":167,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{}}}],["props",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":199,"title":{},"body":{"injectables/AudioService.html":{}}}],["providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["public",{"_index":625,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["querysnapshot",{"_index":818,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["qui",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quis",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quote",{"_index":467,"title":{"interfaces/Quote.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/HomeState.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["quote.content",{"_index":849,"title":{},"body":{"injectables/QuoteService.html":{}}}],["quotedata",{"_index":529,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteerrorstate",{"_index":535,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadedstate",{"_index":533,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteloadeffect",{"_index":498,"title":{"injectables/QuoteLoadEffect.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["quoteloadingstate",{"_index":531,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quotemock",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["quoteservice",{"_index":488,"title":{"injectables/QuoteService.html":{}},"body":{"modules/HomeModule.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"coverage.html":{},"overview.html":{}}}],["r",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":350,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MediaContentComponent.html":{}}}],["readonly",{"_index":236,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["receive",{"_index":1048,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["reducer",{"_index":508,"title":{},"body":{"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reducers",{"_index":496,"title":{},"body":{"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":844,"title":{},"body":{"injectables/QuoteService.html":{}}}],["ref.where('current",{"_index":845,"title":{},"body":{"injectables/QuoteService.html":{}}}],["removeevents",{"_index":222,"title":{},"body":{"injectables/AudioService.html":{}}}],["removeevents(this.audioobj",{"_index":233,"title":{},"body":{"injectables/AudioService.html":{}}}],["render",{"_index":1049,"title":{},"body":{"index.html":{}}}],["reprehenderit",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":978,"title":{},"body":{"index.html":{}}}],["reset",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AudioStateService.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}],["results",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":224,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"guards/CategoriesGuard.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{}}}],["root'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["route",{"_index":765,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["routereusestrategy",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":512,"title":{},"body":{"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":125,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{},"index.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["routing.module.ts",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/MeditationRoutingModule.html":{}}}],["run",{"_index":975,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":195,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":261,"title":{},"body":{"injectables/AudioStateService.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{}}}],["s",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["seconds",{"_index":187,"title":{},"body":{"injectables/AudioService.html":{}}}],["sed",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":991,"title":{},"body":{"index.html":{}}}],["seekbarvalue",{"_index":542,"title":{},"body":{"components/MediaContentComponent.html":{},"components/MeditationModalComponent.html":{}}}],["seekend",{"_index":545,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["seekto",{"_index":172,"title":{},"body":{"injectables/AudioService.html":{}}}],["seekto(seconds",{"_index":184,"title":{},"body":{"injectables/AudioService.html":{}}}],["select",{"_index":302,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["select(selectmeditationsbycategoryid(categoryid",{"_index":786,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["select.component",{"_index":374,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select.component.html",{"_index":304,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.scss",{"_index":303,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts",{"_index":299,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:17",{"_index":314,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:20",{"_index":313,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:23",{"_index":315,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:26",{"_index":311,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.component.ts:30",{"_index":318,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["select.module",{"_index":699,"title":{},"body":{"modules/MeditationModule.html":{}}}],["select.module.ts",{"_index":368,"title":{},"body":{"modules/ButtonsSelectModule.html":{}}}],["select/buttons",{"_index":367,"title":{},"body":{"modules/ButtonsSelectModule.html":{},"modules/MeditationModule.html":{}}}],["select/components/buttons",{"_index":298,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["selectcategories",{"_index":384,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorieshaserror",{"_index":885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategorybyid",{"_index":780,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":361,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/MeditationItemComponent.html":{}}}],["selectedmedia",{"_index":769,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["selecthomemodulestate",{"_index":509,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecthomestate",{"_index":871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":322,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.add(type",{"_index":327,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.clear",{"_index":328,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.delete(type",{"_index":326,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selection.has(type",{"_index":325,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["selectiscategoriesloaded",{"_index":419,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectiscategoriesloading",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloaded",{"_index":801,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectismeditationsloading",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloaded",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectisquoteloading",{"_index":873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationmodulestate",{"_index":728,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditations",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationsbycategoryid",{"_index":779,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationshaserror",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmeditationstate",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["selectors",{"_index":383,"title":{},"body":{"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"index.html":{}}}],["selectquote",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectquotehaserror",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["separate",{"_index":1042,"title":{},"body":{"index.html":{}}}],["server",{"_index":980,"title":{},"body":{"index.html":{}}}],["services",{"_index":196,"title":{},"body":{"injectables/AudioService.html":{},"injectables/CategoriesLoadEffect.html":{},"modules/HomeModule.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"index.html":{}}}],["set",{"_index":271,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["set(this.value",{"_index":323,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["setmedia(value",{"_index":256,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["shadow",{"_index":345,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["shared",{"_index":1039,"title":{},"body":{"index.html":{}}}],["sharereplay",{"_index":260,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["showbuttons",{"_index":635,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["shows",{"_index":952,"title":{},"body":{"index.html":{}}}],["simulators",{"_index":984,"title":{},"body":{"index.html":{}}}],["sint",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sit",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":339,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/TextContentComponent.html":{}}}],["smart",{"_index":1043,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":846,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs",{"_index":847,"title":{},"body":{"injectables/QuoteService.html":{}}}],["snapshot.docs.map((doc",{"_index":822,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["snapshot.docs[0].data",{"_index":848,"title":{},"body":{"injectables/QuoteService.html":{}}}],["solid",{"_index":357,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"modules/MeditationRoutingModule.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{}}}],["splashscreen",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src",{"_index":1030,"title":{},"body":{"index.html":{}}}],["src/.../category.mock.ts",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.actions.ts",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.reducer.ts",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.selector.ts",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../home.state.ts",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../media.constants.ts",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.actions.ts",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.mock.ts",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.model.ts",{"_index":1085,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../meditation.reducer.ts",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.selector.ts",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../meditation.state.ts",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quote.mock.ts",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../time.utils.ts",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/ui",{"_index":296,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"modules/ButtonsSelectModule.html":{},"coverage.html":{}}}],["src/app/modules/home/home",{"_index":511,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/modules/home/home.module.ts",{"_index":489,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/modules/home/mocks/quote.mock.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/models/quote.model.ts",{"_index":825,"title":{},"body":{"interfaces/Quote.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/modules/home/pages/home/home.component.ts:16",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/modules/home/services/quote.service.ts",{"_index":837,"title":{},"body":{"injectables/QuoteService.html":{},"coverage.html":{}}}],["src/app/modules/home/services/quote.service.ts:15",{"_index":839,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/services/quote.service.ts:18",{"_index":840,"title":{},"body":{"injectables/QuoteService.html":{}}}],["src/app/modules/home/store/actions/home.actions.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/effects/quote",{"_index":827,"title":{},"body":{"injectables/QuoteLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/home/store/reducers/home.reducer.ts",{"_index":513,"title":{},"body":{"interfaces/HomeState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/reducers/home.state.ts",{"_index":504,"title":{},"body":{"interfaces/HomeModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/home/store/selectors/home.selector.ts",{"_index":870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/components/category",{"_index":452,"title":{},"body":{"components/CategoryCardComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/media",{"_index":537,"title":{},"body":{"components/MediaContentComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/meditation",{"_index":587,"title":{},"body":{"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/components/text",{"_index":850,"title":{},"body":{"components/TextContentComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/constants/media.constants.ts",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts",{"_index":410,"title":{},"body":{"guards/CategoriesGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:16",{"_index":412,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/categories.guard.ts:19",{"_index":413,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts",{"_index":798,"title":{},"body":{"guards/MeditationsGuard.html":{},"coverage.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:16",{"_index":799,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/guards/meditations.guard.ts:19",{"_index":800,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["src/app/modules/meditation/meditation",{"_index":730,"title":{},"body":{"modules/MeditationRoutingModule.html":{}}}],["src/app/modules/meditation/meditation.module.ts",{"_index":696,"title":{},"body":{"modules/MeditationModule.html":{}}}],["src/app/modules/meditation/mocks/category.mock.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/mocks/meditation.mock.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/models/category.model.ts",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/media.model.ts",{"_index":581,"title":{},"body":{"interfaces/MediaState.html":{},"coverage.html":{}}}],["src/app/modules/meditation/models/meditation.model.ts",{"_index":582,"title":{},"body":{"interfaces/Meditation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts",{"_index":375,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/categories/categories.component.ts:20",{"_index":380,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/modules/meditation/pages/meditation",{"_index":615,"title":{},"body":{"components/MeditationModalComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts",{"_index":760,"title":{},"body":{"components/MeditationsComponent.html":{},"coverage.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:33",{"_index":777,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:35",{"_index":776,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:36",{"_index":775,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:37",{"_index":767,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:45",{"_index":771,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:62",{"_index":773,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/pages/meditations/meditations.component.ts:71",{"_index":770,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["src/app/modules/meditation/services/audio",{"_index":234,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts",{"_index":166,"title":{},"body":{"injectables/AudioService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:12",{"_index":176,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:16",{"_index":183,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:20",{"_index":182,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:24",{"_index":186,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:28",{"_index":180,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/audio.service.ts:33",{"_index":189,"title":{},"body":{"injectables/AudioService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts",{"_index":809,"title":{},"body":{"injectables/MeditationsService.html":{},"coverage.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:15",{"_index":814,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:18",{"_index":816,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/services/meditations.service.ts:29",{"_index":817,"title":{},"body":{"injectables/MeditationsService.html":{}}}],["src/app/modules/meditation/store/actions/meditation.actions.ts",{"_index":883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/effects/categories",{"_index":426,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/effects/meditations",{"_index":804,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{},"coverage.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.reducer.ts",{"_index":732,"title":{},"body":{"interfaces/MeditationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/reducers/meditation.state.ts",{"_index":725,"title":{},"body":{"interfaces/MeditationModuleState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/store/selectors/meditation.selector.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/meditation/utils/time.utils.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":987,"title":{},"body":{"index.html":{}}}],["started",{"_index":938,"title":{"index.html":{}},"body":{}}],["state",{"_index":177,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.categories",{"_index":747,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.home",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.iscategorieserror",{"_index":753,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloaded",{"_index":751,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.iscategoriesloading",{"_index":749,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationserror",{"_index":759,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloaded",{"_index":757,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.ismeditationsloading",{"_index":755,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteerror",{"_index":536,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloaded",{"_index":534,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.isquoteloading",{"_index":532,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.meditation",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.meditations",{"_index":745,"title":{},"body":{"interfaces/MeditationState.html":{},"miscellaneous/variables.html":{}}}],["state.quote",{"_index":530,"title":{},"body":{"interfaces/HomeState.html":{},"miscellaneous/variables.html":{}}}],["state.service",{"_index":198,"title":{},"body":{"injectables/AudioService.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{}}}],["state.service.ts",{"_index":235,"title":{},"body":{"injectables/AudioStateService.html":{},"coverage.html":{}}}],["state.service.ts:17",{"_index":253,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:18",{"_index":251,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:20",{"_index":249,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:24",{"_index":255,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:27",{"_index":258,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:29",{"_index":241,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:33",{"_index":245,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["state.service.ts:40",{"_index":243,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["statements",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":627,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["statusbar",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["storagebucket",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/HomeModuleState.html":{},"modules/MeditationModule.html":{},"interfaces/MeditationModuleState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"index.html":{}}}],["storedevtoolsmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{}}}],["storemodule.forfeature(homefeaturekey",{"_index":501,"title":{},"body":{"modules/HomeModule.html":{}}}],["storemodule.forfeature(meditationfeaturekey",{"_index":722,"title":{},"body":{"modules/MeditationModule.html":{}}}],["storemodule.forroot",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["stories",{"_index":1014,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":971,"title":{},"body":{"index.html":{}}}],["storybook:build",{"_index":1015,"title":{},"body":{"index.html":{}}}],["stream",{"_index":204,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable",{"_index":173,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamobservable(url",{"_index":188,"title":{},"body":{"injectables/AudioService.html":{}}}],["streamsubscription",{"_index":238,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/AudioService.html":{},"interfaces/Category.html":{},"interfaces/HomeState.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"components/TextContentComponent.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":565,"title":{},"body":{"components/MediaContentComponent.html":{}}}],["structure",{"_index":1021,"title":{},"body":{"index.html":{}}}],["structured",{"_index":944,"title":{},"body":{"index.html":{}}}],["structuring",{"_index":1061,"title":{},"body":{"index.html":{}}}],["style",{"_index":356,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["success",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1071,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":989,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1072,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":279,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["switchmap",{"_index":414,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["table",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":415,"title":{},"body":{"guards/CategoriesGuard.html":{},"guards/MeditationsGuard.html":{}}}],["target",{"_index":679,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["technologies",{"_index":962,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["tempo",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":996,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test:debug",{"_index":999,"title":{},"body":{"index.html":{}}}],["test:develop",{"_index":1001,"title":{},"body":{"index.html":{}}}],["testing",{"_index":969,"title":{},"body":{"index.html":{}}}],["tests",{"_index":995,"title":{},"body":{"index.html":{}}}],["text",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textcontentcomponent",{"_index":82,"title":{"components/TextContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"modules/MeditationModule.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["this.$category",{"_index":782,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$mediaselection",{"_index":788,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.$meditations",{"_index":784,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.actions$.pipe",{"_index":432,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{}}}],["this.audioobj.currenttime",{"_index":203,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.load",{"_index":227,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.pause",{"_index":202,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.play",{"_index":201,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioobj.src",{"_index":226,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.audioservice.initializestream(this.meditation.media",{"_index":678,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.pause",{"_index":675,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.play",{"_index":677,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.audioservice.seekto(target.value",{"_index":680,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.filtermeditations(meditations",{"_index":791,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.firestore",{"_index":819,"title":{},"body":{"injectables/MeditationsService.html":{},"injectables/QuoteService.html":{}}}],["this.initializeapp",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["this.media",{"_index":276,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediaselection",{"_index":672,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.mediasubject",{"_index":246,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.next(value",{"_index":273,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.mediasubject.value",{"_index":270,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.meditation.imageurl",{"_index":671,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation.media",{"_index":673,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.media",{"_index":670,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditation[content.text",{"_index":669,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.meditationsservice.getmeditationcategories().pipe",{"_index":435,"title":{},"body":{"injectables/CategoriesLoadEffect.html":{}}}],["this.meditationsservice.getmeditations().pipe",{"_index":806,"title":{},"body":{"injectables/MeditationsLoadEffect.html":{}}}],["this.modalcontroller.create",{"_index":793,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":683,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.multiple",{"_index":324,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.onplay",{"_index":682,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.platform.ready().then",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quoteservice.getdailyquote().pipe",{"_index":832,"title":{},"body":{"injectables/QuoteLoadEffect.html":{}}}],["this.route.snapshot.queryparams",{"_index":781,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.splashscreen.hide",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["this.state.initializestate($stream",{"_index":206,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.stateservice.$media.pipe",{"_index":649,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.mediatype",{"_index":676,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.media.playing",{"_index":681,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.stateservice.reset",{"_index":684,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["this.statusbar.styledefault",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store",{"_index":785,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.dispatch(loadcategories",{"_index":423,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.dispatch(loadmeditations",{"_index":803,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectcategories",{"_index":381,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.store.select(selectcategorybyid(categoryid",{"_index":783,"title":{},"body":{"components/MeditationsComponent.html":{}}}],["this.store.select(selectiscategoriesloaded).pipe",{"_index":421,"title":{},"body":{"guards/CategoriesGuard.html":{}}}],["this.store.select(selectismeditationsloaded).pipe",{"_index":802,"title":{},"body":{"guards/MeditationsGuard.html":{}}}],["this.store.select(selectquote",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.streamobservable(url",{"_index":205,"title":{},"body":{"injectables/AudioService.html":{}}}],["this.streamsubscription",{"_index":274,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.streamsubscription.unsubscribe",{"_index":275,"title":{},"body":{"injectables/AudioStateService.html":{}}}],["this.value",{"_index":329,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["this.valuechange.emit([...selection",{"_index":330,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["through",{"_index":1068,"title":{},"body":{"index.html":{}}}],["time",{"_index":294,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timesec",{"_index":292,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/MediaState.html":{},"miscellaneous/variables.html":{}}}],["timeupdate",{"_index":211,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{}}}],["title",{"_index":386,"title":{},"body":{"components/CategoriesComponent.html":{},"interfaces/Meditation.html":{},"miscellaneous/variables.html":{}}}],["titlecase",{"_index":332,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{}}}],["together",{"_index":1007,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":305,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["toggle(type",{"_index":317,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["toolbar",{"_index":688,"title":{},"body":{"components/MeditationModalComponent.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MeditationModalComponent.html":{}}}],["tr_cw1hcbfay3uzw78i",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["true",{"_index":282,"title":{},"body":{"injectables/AudioStateService.html":{},"interfaces/HomeState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"injectables/QuoteService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":948,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"guards/CategoriesGuard.html":{},"injectables/CategoriesLoadEffect.html":{},"interfaces/Category.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"interfaces/HomeModuleState.html":{},"interfaces/HomeState.html":{},"components/MediaContentComponent.html":{},"interfaces/MediaState.html":{},"interfaces/Meditation.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationModuleState.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"guards/MeditationsGuard.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/MeditationsService.html":{},"interfaces/Quote.html":{},"injectables/QuoteLoadEffect.html":{},"injectables/QuoteService.html":{},"components/TextContentComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1083,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":585,"title":{},"body":{"interfaces/Meditation.html":{}}}],["types/howler",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1032,"title":{},"body":{"index.html":{}}}],["ullamco",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":527,"title":{},"body":{"interfaces/HomeState.html":{},"components/MeditationModalComponent.html":{},"interfaces/MeditationState.html":{},"components/MeditationsComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":994,"title":{},"body":{"index.html":{}}}],["unt",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":181,"title":{},"body":{"injectables/AudioService.html":{}}}],["url('../../../../../assets/images/mountains.jpg",{"_index":398,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["usage",{"_index":974,"title":{},"body":{"index.html":{}}}],["use",{"_index":986,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1067,"title":{},"body":{"index.html":{}}}],["user",{"_index":955,"title":{},"body":{"index.html":{}}}],["usually",{"_index":1044,"title":{},"body":{"index.html":{}}}],["ut",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils",{"_index":262,"title":{},"body":{"injectables/AudioStateService.html":{},"index.html":{}}}],["value",{"_index":192,"title":{},"body":{"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesLoadEffect.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"injectables/MeditationsLoadEffect.html":{},"injectables/QuoteLoadEffect.html":{},"miscellaneous/variables.html":{}}}],["valuechange",{"_index":310,"title":{},"body":{"components/ButtonsSelectComponent.html":{}}}],["var",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonsSelectComponent.html":{},"components/CategoriesComponent.html":{},"components/CategoryCardComponent.html":{},"components/HomeComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{},"components/MeditationItemComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{},"components/TextContentComponent.html":{}}}],["variable",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1086,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velit",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["veniam",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":1046,"title":{},"body":{"index.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioService.html":{},"injectables/AudioStateService.html":{},"components/ButtonsSelectComponent.html":{},"components/MeditationModalComponent.html":{},"components/MeditationsComponent.html":{}}}],["voluptate",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":1029,"title":{},"body":{"index.html":{}}}],["weight",{"_index":393,"title":{},"body":{"components/CategoriesComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationHeaderComponent.html":{}}}],["width",{"_index":333,"title":{},"body":{"components/ButtonsSelectComponent.html":{},"components/CategoryCardComponent.html":{},"components/MediaContentComponent.html":{},"components/MeditationItemComponent.html":{}}}],["zone.js",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/ButtonsSelectModule.html":{},"modules/HomeModule.html":{},"modules/MeditationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        Home\n      \n\n      \n        \n        Meditation\n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                            Meditation            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n// Routes\nimport { AppRoutingModule } from 'app/app-routing.module';\n\n// Components\nimport { AppComponent } from 'app/app.component';\n\n// Environment\nimport { environment } from '@environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    IonicModule.forRoot(),\n    // firebase\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    // store\n    StoreModule.forRoot({}, {}),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: () =>\n      \"import('./modules/home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'meditation',\n    loadChildren: () =>\n      \"import('./modules/meditation/meditation.module').then(\\\n        (m) => m.MeditationModule,\\\n      )\",\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                audioObj\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeStream\n                            \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                seekTo\n                            \n                            \n                                    Private\n                                streamObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AudioStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeStream\n                        \n                    \n                \n            \n            \n                \ninitializeStream(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekTo\n                        \n                    \n                \n            \n            \n                \nseekTo(seconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        streamObservable\n                        \n                    \n                \n            \n            \n                \n                    \n                    streamObservable(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        audioObj\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from 'app/modules/meditation/services/audio-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioService {\n  private audioObj = new Audio();\n\n  constructor(private state: AudioStateService) {}\n\n  play(): void {\n    this.audioObj.play();\n  }\n\n  pause(): void {\n    this.audioObj.pause();\n  }\n\n  seekTo(seconds: number): void {\n    this.audioObj.currentTime = seconds;\n  }\n\n  initializeStream(url: string): void {\n    const $stream = this.streamObservable(url);\n    this.state.initializeState($stream);\n  }\n\n  private streamObservable(url: string): Observable {\n    const events = [\n      'ended',\n      'error',\n      'play',\n      'playing',\n      'pause',\n      'timeupdate',\n      'canplay',\n      'loadedmetadata',\n      'loadstart',\n    ];\n\n    const addEvents = (obj: HTMLAudioElement, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.addEventListener(event, handler);\n      });\n    };\n\n    const removeEvents = (obj, eventKeys: string[], handler) => {\n      eventKeys.forEach((event: string) => {\n        obj.removeEventListener(event, handler);\n      });\n    };\n\n    return new Observable((observer) => {\n      this.audioObj.src = url;\n      this.audioObj.load();\n      this.audioObj.play();\n\n      const handler = (event: CustomEvent) => observer.next(event);\n      addEvents(this.audioObj, events, handler);\n\n      return () => {\n        this.audioObj.pause();\n        this.audioObj.currentTime = 0;\n\n        removeEvents(this.audioObj, events, handler);\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioStateService.html":{"url":"injectables/AudioStateService.html","title":"injectable - AudioStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AudioStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/audio-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                $media\n                            \n                            \n                                    Private\n                                mediaSubject\n                            \n                            \n                                    Private\n                                streamSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeState\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    media\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState($obs: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $obs\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/audio-state.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        $media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay())\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mediaSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(INITIAL_MEDIA_STATE)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        streamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/services/audio-state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n\n                \n                    \n                        getmedia()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:24\n                                \n                            \n\n                \n                    \n                        setmedia(value: MediaState)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/services/audio-state.service.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            MediaState\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n// Utils\nimport { formatTime } from '@meditation/utils/time.utils';\n\n// Constants\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\n\n@Injectable()\nexport class AudioStateService {\n  private streamSubscription: Subscription;\n  private mediaSubject = new BehaviorSubject(INITIAL_MEDIA_STATE);\n\n  readonly $media: Observable = this.mediaSubject\n    .asObservable()\n    .pipe(shareReplay());\n\n  get media(): MediaState {\n    return this.mediaSubject.value;\n  }\n  set media(value: MediaState) {\n    this.mediaSubject.next(value);\n  }\n\n  constructor() {}\n\n  reset(): void {\n    if (this.streamSubscription) {\n      this.streamSubscription.unsubscribe();\n    }\n    this.media = INITIAL_MEDIA_STATE;\n  }\n\n  initializeState($obs: Observable): void {\n    this.streamSubscription = $obs.subscribe((event: CustomEvent) => {\n      const audioObj = event.target as HTMLAudioElement;\n\n      switch (event.type) {\n        case 'canplay':\n          this.media = { ...this.media, canPlay: true };\n          break;\n\n        case 'loadedmetadata':\n          const duration = formatTime(audioObj.duration, 'mm:ss');\n\n          this.media = {\n            ...this.media,\n            duration,\n            durationSec: audioObj.duration,\n            mediaType: 'mp3',\n          };\n          break;\n\n        case 'playing':\n          this.media = { ...this.media, playing: true };\n          break;\n\n        case 'pause':\n          this.media = { ...this.media, playing: false };\n          break;\n\n        case 'timeupdate':\n          const timeSec = audioObj.currentTime;\n          const time = formatTime(audioObj.currentTime, 'mm:ss');\n          this.media = { ...this.media, time, timeSec };\n          break;\n\n        case 'loadstart':\n          this.media = { ...this.media, loadStart: true };\n          break;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsSelectComponent.html":{"url":"components/ButtonsSelectComponent.html","title":"component - ButtonsSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonsSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons-select\n            \n\n            \n                styleUrls\n                ./buttons-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./buttons-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                multiple\n                            \n                            \n                                options\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        multiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(type: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-buttons-select',\n  templateUrl: './buttons-select.component.html',\n  styleUrls: ['./buttons-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonsSelectComponent {\n  @Input()\n  options: any[] = [];\n\n  @Input()\n  multiple = false;\n\n  @Input()\n  value: any[] = [];\n\n  @Output()\n  valueChange = new EventEmitter();\n\n  constructor() {}\n\n  toggle(type: any): void {\n    const selection = new Set(this.value);\n\n    if (this.multiple) {\n      selection.has(type) ? selection.delete(type) : selection.add(type);\n    } else {\n      selection.clear();\n      selection.add(type);\n    }\n\n    this.value = [...selection];\n    this.valueChange.emit([...selection]);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ option | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./buttons-select.component.scss\n                \n                .selection {\n  width: 168px;\n  padding: 8px;\n\n  &__button {\n    font-size: 12px;\n    width: 70px;\n    height: 30px;\n    box-shadow: #0000001f 0 1px 2px;\n    border-radius: 15px;\n    --background: #fff;\n    --color: #666;\n    --border-width: 2px;\n    --border-style: solid;\n    --border-color: #bebdbd;\n    --background-activated: none;\n    --border-radius: 15px;\n\n    &-selected {\n      --background: #9eb4bb;\n      --color: #fff;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ option | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ButtonsSelectModule.html":{"url":"modules/ButtonsSelectModule.html","title":"module - ButtonsSelectModule","body":"\n                   \n\n\n\n\n    Modules\n    ButtonsSelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/common/ui-lib/buttons-select/buttons-select.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonsSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Components\nimport { ButtonsSelectComponent } from '@buttons-select/components/buttons-select.component';\n\n@NgModule({\n  declarations: [ButtonsSelectComponent],\n  imports: [CommonModule, FlexLayoutModule],\n  exports: [ButtonsSelectComponent],\n})\nexport class ButtonsSelectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/categories/categories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                ./categories.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $categories\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectCategories)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/categories/categories.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n// Selectors\nimport { selectCategories } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoriesComponent {\n  $categories: Observable = this.store.select(selectCategories);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    Categories\n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./categories.component.scss\n                \n                .title {\n  font-size: 28px;\n  text-align: center;\n  margin-top: 20px;\n  font-weight: 400;\n}\n\nion-content {\n  --padding-top: 20px;\n  --ion-grid-padding: 8px;\n  --ion-grid-column-padding: 8px;\n  --background: url('../../../../../assets/images/mountains.jpg') center / cover;\n\n  ion-col {\n    --ion-card-background: #ddf0fe;\n\n    &:first-child,\n    &:last-child {\n      --ion-card-background: #f9eedb;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Categories                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CategoriesGuard.html":{"url":"guards/CategoriesGuard.html","title":"guard - CategoriesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CategoriesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/categories.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/categories.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadCategories } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsCategoriesLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class CategoriesGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsCategoriesLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadCategories()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesLoadEffect.html":{"url":"injectables/CategoriesLoadEffect.html","title":"injectable - CategoriesLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/categories-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/categories-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadCategories,\n  loadCategoriesFailure,\n  loadCategoriesSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class CategoriesLoadEffect {\n  loadCategories$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCategories),\n      mergeMap(() =>\n        this.meditationsService.getMeditationCategories().pipe(\n          map((categories: Category[]) =>\n            loadCategoriesSuccess({\n              categories,\n            }),\n          ),\n          catchError((error) => of(loadCategoriesFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/category.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Category {\n  id: string;\n  name: string;\n  description: string;\n  imageUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryCardComponent.html":{"url":"components/CategoryCardComponent.html","title":"component - CategoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/category-card/category-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-card\n            \n\n            \n                styleUrls\n                ./category-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/category-card/category-card.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryCardComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n    {{ category.name | titlecase }}\n  \n\n\n    \n\n    \n                \n                    ./category-card.component.scss\n                \n                .card {\n  height: 245px;\n  width: 145px;\n  margin: auto;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ category.name | titlecase }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/home/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $quote\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $quote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(selectQuote)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/pages/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { Store } from '@ngrx/store';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n// Selectors\nimport { selectQuote } from '@home/store/selectors/home.selector';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent {\n  $quote: Observable = this.store.select(selectQuote);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n    \n        \n  \n    {{ $quote | async }}\n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home {\n  height: 100%;\n  background: url('../../../../../assets/images/mountains.jpg');\n  background-size: cover;\n\n  &__quote {\n    font-size: 18px;\n    line-height: 27px;\n    font-style: italic;\n    opacity: 0.8;\n    color: #1f1f1f;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ $quote | async }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            QuoteService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { IonicModule } from '@ionic/angular';\n\n// Routes\nimport { HomePageRoutingModule } from '@home/home-routing.module';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n// Store\nimport { homeFeatureKey, reducers } from '@home/store/reducers/home.state';\nimport { QuoteLoadEffect } from '@home/store/effects/quote-load.effect';\n\n@NgModule({\n  declarations: [HomeComponent],\n  providers: [QuoteService],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(homeFeatureKey, reducers),\n    EffectsModule.forFeature([QuoteLoadEffect]),\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeModuleState.html":{"url":"interfaces/HomeModuleState.html","title":"interface - HomeModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            home\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        home\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        home:         HomeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HomeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { HomeState } from '@home/store/reducers/home.reducer';\n\n// Reducer\nimport { reducer } from '@home/store/reducers/home.reducer';\n\nexport const homeFeatureKey = 'home';\n\nexport interface HomeModuleState {\n  home: HomeState;\n}\n\nexport const reducers = {\n  home: reducer,\n};\n\nexport const selectHomeModuleState =\n  createFeatureSelector(homeFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Components\nimport { HomeComponent } from '@home/pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HomeState.html":{"url":"interfaces/HomeState.html","title":"interface - HomeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HomeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/reducers/home.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isQuoteError\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoaded\n                                        \n                                \n                                \n                                        \n                                            isQuoteLoading\n                                        \n                                \n                                \n                                        \n                                            quote\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isQuoteLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isQuoteLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quote\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quote:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\nexport interface HomeState {\n  // data\n  quote: string;\n  // state\n  isQuoteLoading: boolean;\n  isQuoteLoaded: boolean;\n  isQuoteError: boolean;\n}\n\nexport const initialState: HomeState = {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n};\n\nconst homeReducer = createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action);\n\n// Data\nexport const quoteData = (state: HomeState) => state.quote;\n// State\nexport const quoteLoadingState = (state: HomeState) => state.isQuoteLoading;\nexport const quoteLoadedState = (state: HomeState) => state.isQuoteLoaded;\nexport const quoteErrorState = (state: HomeState) => state.isQuoteError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediaContentComponent.html":{"url":"components/MediaContentComponent.html","title":"component - MediaContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MediaContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/media-content/media-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-media-content\n            \n\n            \n                styleUrls\n                ./media-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./media-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                media\n                            \n                            \n                                meditation\n                            \n                            \n                                seekbarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pauseAudio\n                            \n                            \n                                playAudio\n                            \n                            \n                                seekEnd\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        media\n                    \n                \n                \n                    \n                        Type :         MediaState\n\n                    \n                \n                \n                    \n                        Default value : INITIAL_MEDIA_STATE\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekbarValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pauseAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playAudio\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seekEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/media-content/media-content.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { INITIAL_MEDIA_STATE } from '@meditation/constants/media.constants';\n\n// Models\nimport { MediaState } from '@meditation/models/media.model';\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-media-content',\n  templateUrl: './media-content.component.html',\n  styleUrls: ['./media-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaContentComponent {\n  @Input()\n  meditation: Meditation;\n\n  @Input()\n  seekbarValue: number;\n\n  @Input()\n  media: MediaState = INITIAL_MEDIA_STATE;\n\n  @Output()\n  playAudio = new EventEmitter();\n\n  @Output()\n  pauseAudio = new EventEmitter();\n\n  @Output()\n  seekEnd = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n  \n    \n      \n\n      \n    \n\n    \n    \n\n    \n      {{ media.time }}\n      {{ media.duration }}\n    \n  \n\n\n    \n\n    \n                \n                    ./media-content.component.scss\n                \n                .media {\n  padding-bottom: 20px;\n  height: 100%;\n\n  &__image {\n    width: 100%;\n  }\n}\n\n.commands {\n  width: 85%;\n\n  &__play {\n    width: 38px;\n    height: 38px;\n    background-color: #4e6b8c;\n    border-radius: 50%;\n  }\n\n  &__icon {\n    --ionicon-stroke-width: 11px;\n    font-size: 20px;\n    color: #fff;\n  }\n\n  &__range {\n    --knob-size: 14px;\n    --bar-background: #d3dae2;\n    --bar-background-active: #4e6b8c;\n    --bar-height: 3px;\n    --knob-size: 18px;\n    width: 315px;\n    max-height: 32px;\n    padding: 0 7px;\n    width: 100%;\n  }\n\n  &__progress {\n    width: 100%;\n    color: #999da1;\n    font-weight: 500;\n    font-size: 15px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ media.time }}      {{ media.duration }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MediaContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaState.html":{"url":"interfaces/MediaState.html","title":"interface - MediaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/media.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            canPlay\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            durationSec\n                                        \n                                \n                                \n                                        \n                                            loadStart\n                                        \n                                \n                                \n                                        \n                                            mediaType\n                                        \n                                \n                                \n                                        \n                                            playing\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            timeSec\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        durationSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        durationSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadStart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadStart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mediaType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mediaType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeSec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeSec:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MediaState {\n  canPlay: boolean;\n  duration: string;\n  durationSec: number;\n  time: string;\n  timeSec: number;\n  mediaType: string;\n  loadStart: boolean;\n  playing: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meditation.html":{"url":"interfaces/Meditation.html","title":"interface - Meditation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meditation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/models/meditation.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Meditation {\n  id: string;\n  categoryId: string;\n  title: string;\n  text: string | null;\n  media: string | null;\n  imageUrl: string | null;\n}\n\nexport const content = {\n  media: 'media',\n  text: 'text',\n} as const;\n\nexport type ContentTypes = typeof content[keyof typeof content];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationHeaderComponent.html":{"url":"components/MeditationHeaderComponent.html","title":"component - MeditationHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-header\n            \n\n            \n                styleUrls\n                ./meditation-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         Category\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-header/meditation-header.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n// Models\nimport { Category } from '@meditation/models/category.model';\n\n@Component({\n  selector: 'app-meditation-header',\n  templateUrl: './meditation-header.component.html',\n  styleUrls: ['./meditation-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationHeaderComponent {\n  @Input()\n  category: Category;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      {{ category.name | titlecase }}\n\n      {{ category.description }}\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-header.component.scss\n                \n                .header {\n  color: #111b22;\n  padding: 45px 25px 25px;\n  height: 270px;\n\n  &__back {\n    font-size: 20px;\n  }\n\n  &__title {\n    font-size: 28px;\n    font-weight: 500;\n  }\n\n  &__description {\n    font-size: 14px;\n    line-height: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ category.name | titlecase }}      {{ category.description }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationItemComponent.html":{"url":"components/MeditationItemComponent.html","title":"component - MeditationItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-item\n            \n\n            \n                styleUrls\n                ./meditation-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/components/meditation-item/meditation-item.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n// Models\nimport { content, Meditation } from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-item',\n  templateUrl: './meditation-item.component.html',\n  styleUrls: ['./meditation-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationItemComponent {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  @Output()\n  selected = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    {{ meditation.title | titlecase }}\n\n    \n      \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./meditation-item.component.scss\n                \n                .item {\n  color: #616469;\n  width: 100%;\n  --min-height: 60px;\n\n  &__title {\n    font-size: 14px;\n  }\n\n  &__icon {\n    font-size: 13px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ meditation.title | titlecase }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationModalComponent.html":{"url":"components/MeditationModalComponent.html","title":"component - MeditationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditation-modal\n            \n\n            \n                styleUrls\n                ./meditation-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $seekbarValue\n                            \n                            \n                                content\n                            \n                            \n                                mediaOptions\n                            \n                            \n                                mediaSelection\n                            \n                            \n                                    Public\n                                modalController\n                            \n                            \n                                    Public\n                                stateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismissModal\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMediaSelectionChange\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                            \n                                onSeekEnd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                meditation\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    showButtons\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, stateService: AudioStateService, audioService: AudioService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        AudioStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        audioService\n                                                  \n                                                        \n                                                                        AudioService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        meditation\n                    \n                \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismissModal\n                        \n                    \n                \n            \n            \n                \ndismissModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMediaSelectionChange\n                        \n                    \n                \n            \n            \n                \nonMediaSelectionChange(contents: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contents\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPause\n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeekEnd\n                        \n                    \n                \n            \n            \n                \nonSeekEnd(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $seekbarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : content\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContentTypes[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modalController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModalController\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stateService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioStateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        showButtons\n                    \n                \n\n                \n                    \n                        getshowButtons()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts:47\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { distinctUntilChanged, filter, map, pluck } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n// Services\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { AudioService } from '@meditation/services/audio.service';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\n\n@Component({\n  selector: 'app-meditation-modal',\n  templateUrl: './meditation-modal.component.html',\n  styleUrls: ['./meditation-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationModalComponent implements OnInit, OnDestroy {\n  content = content;\n\n  @Input()\n  meditation: Meditation;\n\n  mediaOptions: ContentTypes[] = [content.media, content.text];\n  mediaSelection: ContentTypes[];\n\n  $seekbarValue: Observable = this.stateService.$media.pipe(\n    pluck('timeSec'),\n    filter((value) => value !== undefined),\n    map((value: number) => Math.floor(value)),\n    distinctUntilChanged(),\n  );\n\n  get showButtons(): boolean {\n    return !!(\n      this.meditation[content.text] &&\n      (this.meditation[content.media] || this.meditation.imageUrl)\n    );\n  }\n\n  constructor(\n    public modalController: ModalController,\n    public stateService: AudioStateService,\n    private audioService: AudioService,\n  ) {}\n\n  ngOnInit() {\n    this.mediaSelection =\n      this.meditation.media || this.meditation.imageUrl\n        ? [content.media]\n        : [content.text];\n  }\n\n  onMediaSelectionChange(contents: ContentTypes[]): void {\n    this.mediaSelection = contents;\n\n    if (contents[0] === content.text) {\n      this.audioService.pause();\n    }\n  }\n\n  onPlay(): void {\n    if (this.stateService.media.mediaType) {\n      this.audioService.play();\n    } else {\n      this.audioService.initializeStream(this.meditation.media);\n    }\n  }\n\n  onPause(): void {\n    this.audioService.pause();\n  }\n\n  onSeekEnd({ target }): void {\n    this.audioService.seekTo(target.value);\n\n    if (this.stateService.media.playing) {\n      this.onPlay();\n    }\n  }\n\n  dismissModal(): void {\n    this.modalController.dismiss();\n    this.stateService.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.stateService.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ meditation.title }}\n\n    \n      \n    \n  \n\n\n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./meditation-modal.component.scss\n                \n                .header {\n  &__back {\n    font-size: 25px;\n    color: #808289;\n    margin-left: 12px;\n    margin-top: 12px;\n  }\n\n  &__title {\n    margin: 0px 25px 8px;\n    text-align: center;\n    color: #1f1f1f;\n  }\n}\n\nion-toolbar {\n  --background: #e7f4fd;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ meditation.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationModule.html":{"url":"modules/MeditationModule.html","title":"module - MeditationModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesComponent\n                        \n                        \n                            CategoryCardComponent\n                        \n                        \n                            MediaContentComponent\n                        \n                        \n                            MeditationHeaderComponent\n                        \n                        \n                            MeditationItemComponent\n                        \n                        \n                            MeditationModalComponent\n                        \n                        \n                            MeditationsComponent\n                        \n                        \n                            TextContentComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            MeditationModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AudioService\n                        \n                        \n                            AudioStateService\n                        \n                        \n                            MeditationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonsSelectModule\n                        \n                        \n                            MeditationRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n// Modules\nimport { MeditationRoutingModule } from '@meditation/meditation-routing.module';\nimport { ButtonsSelectModule } from '@buttons-select/buttons-select.module';\n\n// Services\nimport { AudioService } from '@meditation/services/audio.service';\nimport { AudioStateService } from '@meditation/services/audio-state.service';\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/pages/meditation-modal/meditation-modal.component';\nimport { TextContentComponent } from '@meditation/components/text-content/text-content.component';\nimport { MediaContentComponent } from '@meditation/components/media-content/media-content.component';\nimport { CategoryCardComponent } from '@meditation/components/category-card/category-card.component';\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\nimport { MeditationHeaderComponent } from '@meditation/components/meditation-header/meditation-header.component';\nimport { MeditationItemComponent } from '@meditation/components/meditation-item/meditation-item.component';\n\n// Store\nimport {\n  meditationFeatureKey,\n  reducers,\n} from '@meditation/store/reducers/meditation.state';\n\n// Effects\nimport { MeditationsLoadEffect } from '@meditation/store/effects/meditations-load.effect';\nimport { CategoriesLoadEffect } from '@meditation/store/effects/categories-load.effect';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MeditationRoutingModule,\n    ButtonsSelectModule,\n    FlexLayoutModule,\n    // store\n    StoreModule.forFeature(meditationFeatureKey, reducers),\n    EffectsModule.forFeature([MeditationsLoadEffect, CategoriesLoadEffect]),\n  ],\n  declarations: [\n    MeditationsComponent,\n    CategoriesComponent,\n    MediaContentComponent,\n    TextContentComponent,\n    MeditationModalComponent,\n    CategoryCardComponent,\n    MeditationHeaderComponent,\n    MeditationItemComponent,\n  ],\n  entryComponents: [MeditationModalComponent],\n  providers: [\n    AudioService,\n    AudioStateService,\n    MeditationsService,\n    MeditationsGuard,\n    CategoriesGuard,\n  ],\n})\nexport class MeditationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationModuleState.html":{"url":"interfaces/MeditationModuleState.html","title":"interface - MeditationModuleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationModuleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            meditation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        meditation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditation:         MeditationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MeditationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createFeatureSelector } from '@ngrx/store';\n\n// Store\nimport { MeditationState } from '@meditation/store/reducers/meditation.reducer';\n\n// Reducers\nimport { reducer } from '@meditation/store/reducers/meditation.reducer';\n\nexport const meditationFeatureKey = 'meditation';\n\nexport interface MeditationModuleState {\n  meditation: MeditationState;\n}\n\nexport const reducers = {\n  meditation: reducer,\n};\n\nexport const selectMeditationModuleState =\n  createFeatureSelector(meditationFeatureKey);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MeditationRoutingModule.html":{"url":"modules/MeditationRoutingModule.html","title":"module - MeditationRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MeditationRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/meditation/meditation-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// Components\nimport { CategoriesComponent } from '@meditation/pages/categories/categories.component';\nimport { MeditationsComponent } from '@meditation/pages/meditations/meditations.component';\n\n// Guards\nimport { CategoriesGuard } from '@meditation/guards/categories.guard';\nimport { MeditationsGuard } from '@meditation/guards/meditations.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'categories', pathMatch: 'full' },\n  {\n    path: 'categories',\n    component: CategoriesComponent,\n    canActivate: [CategoriesGuard],\n  },\n  {\n    path: 'meditations',\n    component: MeditationsComponent,\n    canActivate: [MeditationsGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MeditationRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeditationState.html":{"url":"interfaces/MeditationState.html","title":"interface - MeditationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeditationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/reducers/meditation.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            isCategoriesError\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoaded\n                                        \n                                \n                                \n                                        \n                                            isCategoriesLoading\n                                        \n                                \n                                \n                                        \n                                            isMeditationsError\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoaded\n                                        \n                                \n                                \n                                        \n                                            isMeditationsLoading\n                                        \n                                \n                                \n                                        \n                                            meditations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:         Category[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCategoriesLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCategoriesLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMeditationsLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMeditationsLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meditations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meditations:         Meditation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meditation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\n\n// Actions\nimport {\n  loadCategoriesSuccess,\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n  loadCategories,\n  loadCategoriesFailure,\n} from '@meditation/store/actions/meditation.actions';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\nexport interface MeditationState {\n  // data\n  meditations: Meditation[];\n  categories: Category[];\n  // state\n  isCategoriesLoading: boolean;\n  isCategoriesLoaded: boolean;\n  isCategoriesError: boolean;\n  isMeditationsLoading: boolean;\n  isMeditationsLoaded: boolean;\n  isMeditationsError: boolean;\n}\n\nexport const initialState: MeditationState = {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n};\n\nconst meditationReducer = createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n);\n\nexport const reducer = (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action);\n\n// Data\nexport const meditationsData = (state: MeditationState) => state.meditations;\nexport const categoriesData = (state: MeditationState) => state.categories;\n// State\nexport const categoriesLoadingState = (state: MeditationState) =>\n  state.isCategoriesLoading;\nexport const categoriesLoadedState = (state: MeditationState) =>\n  state.isCategoriesLoaded;\nexport const categoriesErrorState = (state: MeditationState) =>\n  state.isCategoriesError;\nexport const meditationsLoadingState = (state: MeditationState) =>\n  state.isMeditationsLoading;\nexport const meditationsLoadedState = (state: MeditationState) =>\n  state.isMeditationsLoaded;\nexport const meditationsErrorState = (state: MeditationState) =>\n  state.isMeditationsError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeditationsComponent.html":{"url":"components/MeditationsComponent.html","title":"component - MeditationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MeditationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/pages/meditations/meditations.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-meditations\n            \n\n            \n                styleUrls\n                ./meditations.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./meditations.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $category\n                            \n                            \n                                $mediaSelection\n                            \n                            \n                                $meditations\n                            \n                            \n                                mediaOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterMeditations\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, route: ActivatedRoute, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterMeditations\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterMeditations(meditations: Meditation[], selectedMedia: ContentTypes[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditations\n                                    \n                                                Meditation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedMedia\n                                    \n                                                ContentTypes[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Meditation[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        presentModal\n                        \n                    \n                \n            \n            \n                \n                    \n                    presentModal(meditation: Meditation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meditation\n                                    \n                                                Meditation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        $category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $mediaSelection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $meditations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mediaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [content.media, content.text]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/pages/meditations/meditations.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ModalController } from '@ionic/angular';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Models\nimport {\n  Meditation,\n  content,\n  ContentTypes,\n} from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n// Components\nimport { MeditationModalComponent } from '@meditation/pages/meditation-modal/meditation-modal.component';\n\n// Selectors\nimport { selectMeditationsByCategoryId } from '@meditation/store/selectors/meditation.selector';\nimport { selectCategoryById } from '@meditation/store/selectors/meditation.selector';\n\n@Component({\n  selector: 'app-meditations',\n  templateUrl: './meditations.component.html',\n  styleUrls: ['./meditations.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MeditationsComponent implements OnInit {\n  mediaOptions = [content.media, content.text];\n\n  $mediaSelection = new BehaviorSubject([]);\n  $category: Observable;\n  $meditations: Observable;\n\n  constructor(\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private store: Store,\n  ) {}\n\n  ngOnInit(): void {\n    const { categoryId } = this.route.snapshot.queryParams;\n\n    this.$category = this.store.select(selectCategoryById(categoryId));\n\n    this.$meditations = combineLatest([\n      this.store\n        .select(selectMeditationsByCategoryId(categoryId))\n        .pipe(filter((meditations) => meditations !== null)),\n      this.$mediaSelection,\n    ]).pipe(\n      map(([meditations, selectedMedia]: [Meditation[], ContentTypes[]]) =>\n        this.filterMeditations(meditations, selectedMedia),\n      ),\n    );\n  }\n\n  async presentModal(meditation: Meditation): Promise {\n    const modal = await this.modalController.create({\n      component: MeditationModalComponent,\n      componentProps: { meditation },\n    });\n\n    await modal.present();\n  }\n\n  private filterMeditations(\n    meditations: Meditation[],\n    selectedMedia: ContentTypes[],\n  ): Meditation[] {\n    return meditations.filter((meditation: Meditation) => {\n      for (const media of selectedMedia) {\n        if (meditation[media] === undefined || meditation[media] === null) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./meditations.component.scss\n                \n                ion-header {\n  background: #f9eedb;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeditationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MeditationsGuard.html":{"url":"guards/MeditationsGuard.html","title":"guard - MeditationsGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MeditationsGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/guards/meditations.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/guards/meditations.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { Store } from '@ngrx/store';\n\n// Actions\nimport { loadMeditations } from '@meditation/store/actions/meditation.actions';\n\n// Selectors\nimport { selectIsMeditationsLoaded } from '@meditation/store/selectors/meditation.selector';\n\n@Injectable()\nexport class MeditationsGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate(): Observable {\n    return this.store.select(selectIsMeditationsLoaded).pipe(\n      tap(\n        (isLoaded: boolean) =>\n          isLoaded || this.store.dispatch(loadMeditations()),\n      ),\n      switchMap(() => of(true)),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsLoadEffect.html":{"url":"injectables/MeditationsLoadEffect.html","title":"injectable - MeditationsLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/store/effects/meditations-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadMeditations$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, meditationsService: MeditationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meditationsService\n                                                  \n                                                        \n                                                                        MeditationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/meditation/store/effects/meditations-load.effect.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n// Actions\nimport {\n  loadMeditations,\n  loadMeditationsFailure,\n  loadMeditationsSuccess,\n} from '@meditation/store/actions/meditation.actions';\n\n// Services\nimport { MeditationsService } from '@meditation/services/meditations.service';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\n\n@Injectable()\nexport class MeditationsLoadEffect {\n  loadMeditations$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMeditations),\n      mergeMap(() =>\n        this.meditationsService.getMeditations().pipe(\n          map((meditations: Meditation[]) =>\n            loadMeditationsSuccess({\n              meditations,\n            }),\n          ),\n          catchError((error) => of(loadMeditationsFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private meditationsService: MeditationsService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeditationsService.html":{"url":"injectables/MeditationsService.html","title":"injectable - MeditationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeditationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/meditation/services/meditations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMeditationCategories\n                            \n                            \n                                getMeditations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/services/meditations.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditationCategories\n                        \n                    \n                \n            \n            \n                \ngetMeditationCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMeditations\n                        \n                    \n                \n            \n            \n                \ngetMeditations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/meditation/services/meditations.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Meditation } from '@meditation/models/meditation.model';\nimport { Category } from '@meditation/models/category.model';\n\n@Injectable()\nexport class MeditationsService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getMeditationCategories(): Observable {\n    return this.firestore\n      .collection('meditation_categories')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n\n  getMeditations(): Observable {\n    return this.firestore\n      .collection('meditations')\n      .get()\n      .pipe(\n        map((snapshot: QuerySnapshot) =>\n          snapshot.docs.map((doc) => doc.data()),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quote.html":{"url":"interfaces/Quote.html","title":"interface - Quote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/models/quote.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            current\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Quote {\n  content: string;\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteLoadEffect.html":{"url":"injectables/QuoteLoadEffect.html","title":"injectable - QuoteLoadEffect","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteLoadEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/store/effects/quote-load.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadQuote$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngrxOnInitEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, quoteService: QuoteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quoteService\n                                                  \n                                                        \n                                                                        QuoteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngrxOnInitEffects\n                        \n                    \n                \n            \n            \n                \nngrxOnInitEffects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/store/effects/quote-load.effect.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Action\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuote$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/home/store/effects/quote-load.effect.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\n\nimport { Actions, createEffect, ofType, OnInitEffects } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\n\n// Actions\nimport {\n  loadQuote,\n  loadQuoteFailure,\n  loadQuoteSuccess,\n} from '@home/store/actions/home.actions';\n\n// Services\nimport { QuoteService } from '@home/services/quote.service';\n\n@Injectable()\nexport class QuoteLoadEffect implements OnInitEffects {\n  loadQuote$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadQuote),\n      mergeMap(() =>\n        this.quoteService.getDailyQuote().pipe(\n          map((quote: string) =>\n            loadQuoteSuccess({\n              quote,\n            }),\n          ),\n          catchError((error) => of(loadQuoteFailure(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(private actions$: Actions, private quoteService: QuoteService) {}\n\n  ngrxOnInitEffects(): Action {\n    return loadQuote();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteService.html":{"url":"injectables/QuoteService.html","title":"injectable - QuoteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/home/services/quote.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDailyQuote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/home/services/quote.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDailyQuote\n                        \n                    \n                \n            \n            \n                \ngetDailyQuote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/home/services/quote.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  CollectionReference,\n  QuerySnapshot,\n} from '@angular/fire/compat/firestore';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Models\nimport { Quote } from '@home/models/quote.model';\n\n@Injectable()\nexport class QuoteService {\n  constructor(private firestore: AngularFirestore) {}\n\n  getDailyQuote(): Observable {\n    return this.firestore\n      .collection('quotes', (ref: CollectionReference) =>\n        ref.where('current', '==', true),\n      )\n      .get()\n      .pipe(\n        map(\n          (snapshot: QuerySnapshot) =>\n            snapshot.docs && snapshot.docs[0].data(),\n        ),\n        map((quote: Quote) => quote.content),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextContentComponent.html":{"url":"components/TextContentComponent.html","title":"component - TextContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/meditation/components/text-content/text-content.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-content\n            \n\n            \n                styleUrls\n                ./text-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/meditation/components/text-content/text-content.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/meditation/components/text-content/text-content.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-text-content',\n  templateUrl: './text-content.component.html',\n  styleUrls: ['./text-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextContentComponent {\n  @Input()\n  text: string;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  {{ text }}\n\n\n    \n\n    \n                \n                    ./text-content.component.scss\n                \n                .text {\n  padding: 16px 32px;\n  color: #1f1f1f;\n\n  &__content {\n    text-align: justify;\n    font-size: 14px;\n    line-height: 19px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsSelectComponent', 'selector': 'app-buttons-select'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CategoryCardComponent', 'selector': 'app-category-card'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'MediaContentComponent', 'selector': 'app-media-content'},{'name': 'MeditationHeaderComponent', 'selector': 'app-meditation-header'},{'name': 'MeditationItemComponent', 'selector': 'app-meditation-item'},{'name': 'MeditationModalComponent', 'selector': 'app-meditation-modal'},{'name': 'MeditationsComponent', 'selector': 'app-meditations'},{'name': 'TextContentComponent', 'selector': 'app-text-content'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/ui-lib/buttons-select/components/buttons-select.component.ts\n            \n            component\n            ButtonsSelectComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/home/mocks/quote.mock.ts\n            \n            variable\n            quoteMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/models/quote.model.ts\n            \n            interface\n            Quote\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/services/quote.service.ts\n            \n            injectable\n            QuoteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/actions/home.actions.ts\n            \n            variable\n            loadQuoteSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/effects/quote-load.effect.ts\n            \n            injectable\n            QuoteLoadEffect\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            interface\n            HomeState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            homeReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            quoteLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            interface\n            HomeModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            homeFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/reducers/home.state.ts\n            \n            variable\n            selectHomeModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectHomeState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectIsQuoteLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/home/store/selectors/home.selector.ts\n            \n            variable\n            selectQuoteHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/category-card/category-card.component.ts\n            \n            component\n            CategoryCardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/media-content/media-content.component.ts\n            \n            component\n            MediaContentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-header/meditation-header.component.ts\n            \n            component\n            MeditationHeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/meditation-item/meditation-item.component.ts\n            \n            component\n            MeditationItemComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/components/text-content/text-content.component.ts\n            \n            component\n            TextContentComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/constants/media.constants.ts\n            \n            variable\n            INITIAL_MEDIA_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/categories.guard.ts\n            \n            guard\n            CategoriesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/guards/meditations.guard.ts\n            \n            guard\n            MeditationsGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/category.mock.ts\n            \n            variable\n            categoryMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/mocks/meditation.mock.ts\n            \n            variable\n            meditationMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/category.model.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/media.model.ts\n            \n            interface\n            MediaState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            interface\n            Meditation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/models/meditation.model.ts\n            \n            variable\n            content\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/meditation-modal/meditation-modal.component.ts\n            \n            component\n            MeditationModalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/pages/meditations/meditations.component.ts\n            \n            component\n            MeditationsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio-state.service.ts\n            \n            injectable\n            AudioStateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/audio.service.ts\n            \n            injectable\n            AudioService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/services/meditations.service.ts\n            \n            injectable\n            MeditationsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadCategoriesSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/actions/meditation.actions.ts\n            \n            variable\n            loadMeditationsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/categories-load.effect.ts\n            \n            injectable\n            CategoriesLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/effects/meditations-load.effect.ts\n            \n            injectable\n            MeditationsLoadEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            interface\n            MeditationState\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            categoriesLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsErrorState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadedState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            meditationsLoadingState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.reducer.ts\n            \n            variable\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            interface\n            MeditationModuleState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            meditationFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/reducers/meditation.state.ts\n            \n            variable\n            selectMeditationModuleState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoriesHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectCategoryById\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsCategoriesLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectIsMeditationsLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsByCategoryId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationsHasError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/store/selectors/meditation.selector.ts\n            \n            variable\n            selectMeditationState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/meditation/utils/time.utils.ts\n            \n            variable\n            formatTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^12.2.9\n        \n            @angular/common : ~12.1.1\n        \n            @angular/core : ~12.1.1\n        \n            @angular/fire : ~7.0.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~12.1.1\n        \n            @angular/platform-browser : ~12.1.1\n        \n            @angular/platform-browser-dynamic : ~12.1.1\n        \n            @angular/router : ~12.1.1\n        \n            @capacitor/android : 3.2.5\n        \n            @capacitor/app : 1.0.5\n        \n            @capacitor/core : 3.2.5\n        \n            @capacitor/haptics : 1.1.2\n        \n            @capacitor/ios : 3.2.5\n        \n            @capacitor/keyboard : 1.1.2\n        \n            @capacitor/status-bar : 1.0.5\n        \n            @ionic-native/core : ^5.36.0\n        \n            @ionic-native/splash-screen : ^5.36.0\n        \n            @ionic-native/status-bar : ^5.36.0\n        \n            @ionic/angular : ^5.5.2\n        \n            @ngrx/effects : ^12.4.0\n        \n            @ngrx/store : ^12.4.0\n        \n            @ngrx/store-devtools : ^12.4.0\n        \n            @types/howler : ^2.2.4\n        \n            core-js : ^3.18.1\n        \n            firebase : ^9.1.1\n        \n            globalthis : ^1.0.2\n        \n            howler : ^2.2.3\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIntroduction\nPersonal project and base for a mobile app, structured to be expanded with new features.\nIt consists of two main functionalities: a Home page, that shows a motivational daily quote; a Meditation page, where the user can choose a meditation category, filter the meditations by type, and interact with the media in the modal that opens. Every practice can guide the user with text contents, audio and images.\n \n\n  \n  \n  \n  \n  \n  \n\n\n \nTechnologies\nFrontend\n\nIonic\nCapacitor\nAngular\nAngularFire\nNgRx\n\nBackend\n\nFirebase\n\nTesting And Documentation\n\nCypress\nStorybook\nCompodoc\n\nInstallation and usage\nDependencies\nRun npm install to install all the required dependencies.\nDevelopment server\nThe app can be run in the browser or in Android and iOS devices / simulators. To open it in the browser, use npm run start.\nTo open it in mobile devices, make sure you have all the prerequisites (see the Ionic documentation for Android and iOS), and then use npm run open:ios or npm run open:android.\nUnit Tests\nTo run unit tests, use npm run test.\nTo run unit tests in debug mode, use npm run test:debug.\nTo run unit tests in dev mode, use npm run test:develop.\nE2E Tests\nTo open Cypress e2e tests app, use npm run cypress:open.\nLinting\nLinting is performed by ESLint together with Prettier and eslint-config-prettier.\nRun npm run lint to lint the project, or npm run lint:fix to run Prettier automatically.\nStorybook\nTo open Storybook, use npm run storybook.\nTo build Stories, use npm run storybook:build.\nCompodoc\nTo open Compodoc, use npm run compodoc.\nTo geneate the documentation json, use npm run docs:json.\nApplication Design\nStructure\nOverall Structure\nBased on the industry best practices, the code is structured in the following way:\nsrc/\n    app/\n        common/\n            ui-lib\n        modules\n            module-name/\n                pages/\n                components/\n                services/\n                guards/\n                store/\n                utils/\n                mocks/\n                models/\n                constants/Common folder\nContains the shared pieces of the application, like a UI Library.\nModules folder\nContains all the separate features of the project.\nPages folder\nContains smart components that are usually called via routes.\nComponents folder\nContains dumb components that receive data, render it, and pass events back to smart\ncomponents.\nStore Folder\nEach module has its store, with actions, reducers, selectors and effects:\nstore/\n    actions/\n        feature.actions.ts\n    effects/\n        feature.effects.ts\n    reducers/\n        index.ts\n        feature.reducers.ts\n    selectors/\n        feature.selectors.tsStyle And Layout\nThe application follows the BEM methodology for structuring\ncomponents and naming the CSS classes.\nThe flexbox model is used through flex-layout\nfor creating the layout of components.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ButtonsSelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MeditationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ButtonsSelectModule\n\n\n\ncluster_ButtonsSelectModule_declarations\n\n\n\ncluster_ButtonsSelectModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_MeditationModule\n\n\n\ncluster_MeditationModule_declarations\n\n\n\ncluster_MeditationModule_imports\n\n\n\ncluster_MeditationModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nButtonsSelectComponent\n\nButtonsSelectComponent\n\n\n\nButtonsSelectModule\n\nButtonsSelectModule\n\nButtonsSelectModule -->\n\nButtonsSelectComponent->ButtonsSelectModule\n\n\n\n\n\nButtonsSelectComponent \n\nButtonsSelectComponent \n\nButtonsSelectComponent  -->\n\nButtonsSelectModule->ButtonsSelectComponent \n\n\n\n\n\nMeditationModule\n\nMeditationModule\n\nMeditationModule -->\n\nButtonsSelectModule->MeditationModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomeModule -->\n\nHomePageRoutingModule->HomeModule\n\n\n\n\n\nQuoteService\n\nQuoteService\n\nHomeModule -->\n\nQuoteService->HomeModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nMeditationModule -->\n\nCategoriesComponent->MeditationModule\n\n\n\n\n\nCategoryCardComponent\n\nCategoryCardComponent\n\nMeditationModule -->\n\nCategoryCardComponent->MeditationModule\n\n\n\n\n\nMediaContentComponent\n\nMediaContentComponent\n\nMeditationModule -->\n\nMediaContentComponent->MeditationModule\n\n\n\n\n\nMeditationHeaderComponent\n\nMeditationHeaderComponent\n\nMeditationModule -->\n\nMeditationHeaderComponent->MeditationModule\n\n\n\n\n\nMeditationItemComponent\n\nMeditationItemComponent\n\nMeditationModule -->\n\nMeditationItemComponent->MeditationModule\n\n\n\n\n\nMeditationModalComponent\n\nMeditationModalComponent\n\nMeditationModule -->\n\nMeditationModalComponent->MeditationModule\n\n\n\n\n\nMeditationsComponent\n\nMeditationsComponent\n\nMeditationModule -->\n\nMeditationsComponent->MeditationModule\n\n\n\n\n\nTextContentComponent\n\nTextContentComponent\n\nMeditationModule -->\n\nTextContentComponent->MeditationModule\n\n\n\n\n\nMeditationRoutingModule\n\nMeditationRoutingModule\n\nMeditationModule -->\n\nMeditationRoutingModule->MeditationModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nMeditationModule -->\n\nAudioService->MeditationModule\n\n\n\n\n\nAudioStateService\n\nAudioStateService\n\nMeditationModule -->\n\nAudioStateService->MeditationModule\n\n\n\n\n\nMeditationsService\n\nMeditationsService\n\nMeditationModule -->\n\nMeditationsService->MeditationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContentTypes   (src/.../meditation.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n    \n        \n            \n                \n                    \n                    ContentTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            categoriesData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoriesLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            categoryMock   (src/.../category.mock.ts)\n                        \n                        \n                            content   (src/.../meditation.model.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            formatTime   (src/.../time.utils.ts)\n                        \n                        \n                            homeFeatureKey   (src/.../home.state.ts)\n                        \n                        \n                            homeReducer   (src/.../home.reducer.ts)\n                        \n                        \n                            INITIAL_MEDIA_STATE   (src/.../media.constants.ts)\n                        \n                        \n                            initialState   (src/.../home.reducer.ts)\n                        \n                        \n                            initialState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            loadCategories   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadCategoriesSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditations   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsFailure   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadMeditationsSuccess   (src/.../meditation.actions.ts)\n                        \n                        \n                            loadQuote   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteFailure   (src/.../home.actions.ts)\n                        \n                        \n                            loadQuoteSuccess   (src/.../home.actions.ts)\n                        \n                        \n                            meditationFeatureKey   (src/.../meditation.state.ts)\n                        \n                        \n                            meditationMock   (src/.../meditation.mock.ts)\n                        \n                        \n                            meditationReducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsData   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsErrorState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadedState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            meditationsLoadingState   (src/.../meditation.reducer.ts)\n                        \n                        \n                            quoteData   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteErrorState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadedState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteLoadingState   (src/.../home.reducer.ts)\n                        \n                        \n                            quoteMock   (src/.../quote.mock.ts)\n                        \n                        \n                            reducer   (src/.../home.reducer.ts)\n                        \n                        \n                            reducer   (src/.../meditation.reducer.ts)\n                        \n                        \n                            reducers   (src/.../home.state.ts)\n                        \n                        \n                            reducers   (src/.../meditation.state.ts)\n                        \n                        \n                            selectCategories   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoriesHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectCategoryById   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectHomeModuleState   (src/.../home.state.ts)\n                        \n                        \n                            selectHomeState   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsCategoriesLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoaded   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsMeditationsLoading   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectIsQuoteLoaded   (src/.../home.selector.ts)\n                        \n                        \n                            selectIsQuoteLoading   (src/.../home.selector.ts)\n                        \n                        \n                            selectMeditationModuleState   (src/.../meditation.state.ts)\n                        \n                        \n                            selectMeditations   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsByCategoryId   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationsHasError   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectMeditationState   (src/.../meditation.selector.ts)\n                        \n                        \n                            selectQuote   (src/.../home.selector.ts)\n                        \n                        \n                            selectQuoteHasError   (src/.../home.selector.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/meditation/store/reducers/meditation.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoriesData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.categories\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoriesLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isCategoriesLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeditationState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  meditations: null,\n  categories: null,\n  // state\n  isCategoriesLoading: false,\n  isCategoriesLoaded: false,\n  isCategoriesError: false,\n  isMeditationsLoading: false,\n  isMeditationsLoaded: false,\n  isMeditationsError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadCategories,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: true,\n      isCategoriesLoaded: false,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadCategoriesFailure,\n    (state): MeditationState => ({\n      ...state,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: false,\n      isCategoriesError: true,\n    }),\n  ),\n\n  on(\n    loadCategoriesSuccess,\n    (state, { categories }): MeditationState => ({\n      ...state,\n      categories,\n      isCategoriesLoading: false,\n      isCategoriesLoaded: true,\n      isCategoriesError: false,\n    }),\n  ),\n\n  on(\n    loadMeditations,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: true,\n      isMeditationsLoaded: false,\n      isMeditationsError: false,\n    }),\n  ),\n\n  on(\n    loadMeditationsFailure,\n    (state): MeditationState => ({\n      ...state,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: false,\n      isMeditationsError: true,\n    }),\n  ),\n\n  on(\n    loadMeditationsSuccess,\n    (state, { meditations }): MeditationState => ({\n      ...state,\n      meditations,\n      isMeditationsLoading: false,\n      isMeditationsLoaded: true,\n      isMeditationsError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) => state.meditations\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meditationsLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState) =>\n  state.isMeditationsLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: MeditationState | undefined, action: Action) =>\n  meditationReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/category.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categoryMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'categoryId',\n  name: 'Category Name',\n  description: 'Category Description',\n  imageUrl: 'http://domain.com',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/models/meditation.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  media: 'media',\n  text: 'text',\n} as const\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA02Y_nQiILEC4-TR_cw1hCBFAy3Uzw78I',\n    authDomain: 'meditify-5cd18.firebaseapp.com',\n    databaseURL: 'https://meditify-5cd18.firebaseio.com',\n    projectId: 'meditify-5cd18',\n    storageBucket: 'meditify-5cd18.appspot.com',\n    messagingSenderId: '661526611463',\n    appId: '1:661526611463:web:ad4d2587d5cc613fab8ca2',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/utils/time.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (time: number, format: string): string =>\n  moment.utc(time * 1000).format(format)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  home: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectHomeModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(homeFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/reducers/home.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        homeReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  on(\n    loadQuote,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: true,\n      isQuoteLoaded: false,\n      isQuoteError: false,\n    }),\n  ),\n\n  on(\n    loadQuoteFailure,\n    (state): HomeState => ({\n      ...state,\n      isQuoteLoading: false,\n      isQuoteLoaded: false,\n      isQuoteError: true,\n    }),\n  ),\n\n  on(\n    loadQuoteSuccess,\n    (state, { quote }): HomeState => ({\n      ...state,\n      quote,\n      isQuoteLoading: false,\n      isQuoteLoaded: true,\n      isQuoteError: false,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HomeState\n\n                    \n                \n                \n                    \n                        Default value : {\n  // data\n  quote: null,\n  // state\n  isQuoteLoading: false,\n  isQuoteLoaded: false,\n  isQuoteError: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.quote\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteErrorState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteError\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadedState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoaded\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quoteLoadingState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState) => state.isQuoteLoading\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: HomeState | undefined, action: Action) =>\n  homeReducer(state, action)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/constants/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_MEDIA_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  canPlay: false,\n  duration: '00:00',\n  durationSec: 0,\n  time: '00:00',\n  timeSec: 0,\n  mediaType: '',\n  loadStart: false,\n  playing: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/actions/meditation.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Categories Page] Load Categories',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategoriesSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Categories Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | Meditations Page] Load Meditations',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMeditationsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Meditation | API] Load Meditations Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/actions/home.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home | Effects Init] Load Quote')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Failure',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadQuoteSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home | API] Load Quote Success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/reducers/meditation.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'meditation'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  meditation: reducer,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationModuleState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(meditationFeatureKey)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/mocks/meditation.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meditationMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meditation\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: 'id',\n  categoryId: 'categoryId',\n  title: 'Meditation title',\n  text: `\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempo\n  r incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \n  nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n  Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n  eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, s\n  unt in culpa qui officia deserunt mollit anim id est laborum.\n  `,\n  media: 'https://domain.com',\n  imageUrl: 'https://picsum.photos/seed/picsum/400/600',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/mocks/quote.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        quoteMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quote\n\n                    \n                \n                \n                    \n                        Default value : {\n  content: 'Test quote',\n  current: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/meditation/store/selectors/meditation.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectCategories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoriesHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategoryById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectCategories,\n    (categories: Category[]) =>\n      categories &&\n      categories.find((category: Category) => category.id === categoryId),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsCategoriesLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  categoriesLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMeditationsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsData,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsByCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (categoryId: string) =>\n  createSelector(\n    selectMeditations,\n    (meditations: Meditation[]) =>\n      meditations &&\n      meditations.filter(\n        (meditation: Meditation) => meditation.categoryId === categoryId,\n      ),\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationsHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationState,\n  meditationsErrorState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMeditationState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectMeditationModuleState,\n  (state: MeditationModuleState) => state.meditation,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/modules/home/store/selectors/home.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectHomeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeModuleState,\n  (state: HomeModuleState) => state.home,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadedState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsQuoteLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteLoadingState,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuote\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectHomeState, quoteData)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectQuoteHasError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectHomeState,\n  quoteErrorState,\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
